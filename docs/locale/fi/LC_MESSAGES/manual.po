# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Tiled Documentation Writers
# This file is distributed under the same license as the Tiled package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Tiled 1.1\n"
"Report-Msgid-Bugs-To: bjorn@lindeijer.nl\n"
"POT-Creation-Date: 2023-03-10 11:19+0100\n"
"PO-Revision-Date: 2022-02-14 22:39+0000\n"
"Last-Translator: Tuomas Lähteenmäki <lahtis@gmail.com>\n"
"Language: fi\n"
"Language-Team: Finnish "
"<https://hosted.weblate.org/projects/tiled/manual/fi/>\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../manual/automapping.md:1
msgid "Automapping"
msgstr "Automaattikartoitus"

#: ../../manual/automapping.md:3
msgid "What is Automapping?"
msgstr "Mikä on automaattikartoitus?"

#: ../../manual/automapping.md:5
msgid ""
"Automapping can automatically place or replace tiles based on rules you "
"define. It looks for tiles in your working map that match each rule's "
"input, and if it finds any, it'll place the corresponding output. This "
"enables complex or repetitive tile placement to be entirely automated, "
"which can make decorating your levels much faster, and can help you "
"automatically correct mistakes."
msgstr ""

#: ../../manual/automapping.md:7
msgid ""
"Automapping can be applied manually via *Map > AutoMap*, or dynamically "
"as you draw on the map if you enable *Map > AutoMap While Drawing*."
msgstr ""

#: ../../manual/automapping.md:10
msgid ""
"Automapping changed significantly in Tiled 1.9. It's 10-30x faster and "
"setting up rules is more intuitive, but it behaves differently from the "
"old system in some ways. Old rules should still behave the same, but you "
"may want to take a look at the [section on updating your rules"
"](#updating-rules). If you need help understanding your old rules, the "
"[old documentation is available on "
"GitHub](https://github.com/mapeditor/tiled/blob/685dbff38244776108b8ddbe669b4d8937752311/docs/manual/automapping.rst)."
msgstr ""

#: ../../manual/automapping.md:12
msgid ""
"If you are making new rules, make sure you *do not* have any “regions” "
"layers. These will enable the old Automapping system, and the rules will "
"likely not behave as you intend."
msgstr ""

#: ../../manual/automapping.md:15
msgid "Setting Up the Rules File"
msgstr ""

#: ../../manual/automapping.md:17
msgid ""
"Automapping rules are defined in regular map files, which we’ll call "
"**rule maps**. These files are then referenced by a text file, usually "
"called `rules.txt`. The `rules.txt` can list any number of rule maps, in "
"the order in which their rules should be applied."
msgstr ""

#: ../../manual/automapping.md:19
msgid ""
"There are two ways to make the rule maps defined in the `rules.txt` apply"
" to a map:"
msgstr ""

#: ../../manual/automapping.md:21
msgid ""
"{bdg-secondary-line}`Since Tiled 1.4` Open *Project > Project Properties*"
" and set the \"Automapping rules\" property to the `rules.txt` file that "
"you created in your project. If you have only a single rule map, you can "
"also refer to that map file directly."
msgstr ""

#: ../../manual/automapping.md:22
msgid ""
"Alternatively, you can save your `rules.txt` in the same directory as the"
" map files to which you want the rules to apply. This can also be used to"
" override the project-wide rules for a certain set of maps."
msgstr ""

#: ../../manual/automapping.md:24
msgid "Each line in the `rules.txt` file is either:"
msgstr ""

#: ../../manual/automapping.md:26
#, fuzzy
msgid "A path to a **rule map**."
msgstr "polku **sääntötiedostoon**"

#: ../../manual/automapping.md:27
#, fuzzy
msgid ""
"A path to another `.txt` file which has the same syntax (e.g. in another "
"directory)."
msgstr ""
"tai polku toiseen tekstitiedostoon, jolla on sama syntaksi (eli. toisessa"
" hakemistossa)"

#: ../../manual/automapping.md:28
msgid ""
"{bdg-secondary-line}`Since Tiled 1.9` A map filename filter, enclosed in "
"`[]` and using `*` as a wildcard."
msgstr ""

#: ../../manual/automapping.md:29
msgid "A comment, when the line starts with `#` or `//`."
msgstr ""

#: ../../manual/automapping.md:31
msgid ""
"By default, all Automapping rules will run on any map you Automap. The "
"map filename filters let you restrict which maps rules apply to. For "
"example, any rule maps listed after `[town*]` will only apply to maps "
"whose filenames start with “town”. To start applying rules to all maps "
"again, you can use `[*]`, which will match any map name."
msgstr ""

#: ../../manual/automapping.md:33
msgid "Setting Up a Rule Map"
msgstr ""

#: ../../manual/automapping.md:35
#, fuzzy
msgid ""
"A **rule map** is a standard map file, which can be read and written by "
"Tiled (usually in TMX or TMJ format). A rule map can define any number of"
" rules. At a minimum, a rule map contains:"
msgstr ""
"**sääntötiedosto** on tavallinen karttatiedosto, jota voidaan lukea ja "
"kirjoittaa tiled (\\*.tmx). Yhdessä sääntötiedostossa voidaan määritellä "
"useita sääntöjä."

#: ../../manual/automapping.md:37
#, fuzzy
msgid ""
"One or more `input` layers, describing which kind of pattern(s) the "
"working map will be searched for."
msgstr ""
"Syötteiden määrittelyssä kuvataan, minkälaista mallia työkartasta "
"etsitään."

#: ../../manual/automapping.md:38
#, fuzzy
msgid ""
"One or more `output` layers, describing how the working map is changed "
"when an input pattern is found."
msgstr ""
"Tulosteiden määritelmä kuvaa, miten toimiva kartta muuttuu, kun "
"syöttökuvio löytyy."

#: ../../manual/automapping.md:40
msgid ""
"In addition, custom properties on the rule map, its layers and on objects"
" can be used to fine-tune the overall behavior or the behavior of "
"specific rules."
msgstr ""

#: ../../manual/automapping.md:42
msgid ""
"Every contiguous region of tiles on the `input` and `output` layers is a "
"rule. Tiles are considered contiguous if they're next to each other "
"vertically, horizontally, or diagonally (8-way connectivity). You can "
"include many rules in one map, as long as you leave space between them. "
"By default all the rules will match simultaneously, and apply their "
"outputs in order from top to bottom, left to right - rules with smaller Y"
" value come first, and if there are rules at the same Y value, then the "
"rules with smaller X come first. If you want the rules to match in order "
"and take previous rules' output into account, you can use the "
"[`MatchInOrder` map property](#MatchInOrder)."
msgstr ""

#: ../../manual/automapping.md:44
#, fuzzy
msgid "Defining Inputs"
msgstr "Tuotantopanosten määritelmä"

#: ../../manual/automapping.md:46
msgid ""
"The `input` layers define the pattern(s) of tiles that a rule will look "
"for. These are Tile Layers, and their names must follow this scheme:"
msgstr ""

#: ../../manual/automapping.md:52
msgid ""
"After the first underscore there will be the **name** of the target input"
" layer. For example, `input_Ground` will look for tiles on a layer called"
" *Ground*. The input layer name can include more underscores, so "
"`input_test_case` will look for tiles on a layer called *test\\_case*. If"
" the working map includes multiple layers by this name, the bottom-most "
"one will be used. If the working map does not contain the named target "
"layer, the rule checks against a dummy empty layer."
msgstr ""

#: ../../manual/automapping.md:54
msgid ""
"The **not** is optional. If present, it inverts the layer's meaning, so "
"instead of matching the tiles on the layer, Tiled will match anything but"
" those tiles."
msgstr ""

#: ../../manual/automapping.md:56
msgid ""
"The **index** is optional. Indices on `input` layers allow you to create "
"rules that match any of several completely separate inputs. Any inputs "
"with the same index are treated as part of the same condition, and each "
"different index is its own independent set of conditions. Any of these "
"conditions being matched will count as a match for the rule. An index can"
" be empty, or it can be any string that doesn't start with `not` and "
"doesn't contain any underscores."
msgstr ""

#: ../../manual/automapping.md:58
msgid ""
"Multiple input layers having the same name and index is explicitly "
"allowed and is intended. Having multiple input layers of the same name "
"and index allows you to define different possible tiles per coordinate as"
" input, and any combination of those tiles will count as a match."
msgstr ""

#: ../../manual/automapping.md:60
msgid "Input Example"
msgstr ""

#: ../../manual/automapping.md:62
msgid ""
"Let's say you want to match two-tile areas of the ground, perhaps to "
"randomise them. You might want to match any combination of grass and "
"flower tiles, but only whole two-tile rocks. You can achieve this like "
"so:"
msgstr ""

#: ../../manual/automapping.md:9 ../../manual/automapping.md:267
#: ../../manual/automapping.md:289 ../../manual/automapping.md:323
#: ../../manual/automapping.md:345
msgid "Tile Layer"
msgstr ""

#: ../../manual/automapping.md:9 ../../manual/automapping.md:267
#: ../../manual/automapping.md:289 ../../manual/automapping.md:323
#: ../../manual/automapping.md:345 ../../manual/editing-tilesets.rst:51
#: ../../manual/using-commands.rst:33
msgid "Name"
msgstr ""

#: ../../manual/automapping.md:9
msgid "![Two grass tiles.](images/automapping/automap_input1.png)"
msgstr ""

#: ../../manual/automapping.md:66 ../../manual/automapping.md:72
#: ../../manual/automapping.md:359
msgid "Two grass tiles."
msgstr ""

#: ../../manual/automapping.md:9
msgid "input**1**_Ground"
msgstr ""

#: ../../manual/automapping.md:9
msgid "![Two flower tiles.](images/automapping/automap_input2.png)"
msgstr ""

#: ../../manual/automapping.md:67 ../../manual/automapping.md:72
#: ../../manual/automapping.md:121
msgid "Two flower tiles."
msgstr ""

#: ../../manual/automapping.md:9
msgid "![Rock made out of two tiles.](images/automapping/automap_input3.png)"
msgstr ""

#: ../../manual/automapping.md:68 ../../manual/automapping.md:72
#: ../../manual/automapping.md:120
msgid "Rock made out of two tiles."
msgstr ""

#: ../../manual/automapping.md:9
msgid "input**2**_Ground"
msgstr ""

#: ../../manual/automapping.md:70
msgid ""
"The first two layers both have the index 1, so Automapping will match any"
" combination of those grass and flower tiles. The last layer has the "
"index 2, so its tiles are checked separately. This means these inputs "
"will match any part of the Ground layer that looks like any of these:"
msgstr ""

#: ../../manual/automapping.md:72
msgid ""
"![Two grass tiles.](images/automapping/automap_input4.png) ![Two flower "
"tiles.](images/automapping/automap_input5.png) ![Flower tile on the left,"
" grass tile on the right.](images/automapping/automap_input6.png) ![Grass"
" tile on the left, flower tile on the "
"right.](images/automapping/automap_input7.png) ![Rock made out of two "
"tiles.](images/automapping/automap_input8.png)"
msgstr ""

#: ../../manual/automapping.md:72
msgid "Flower tile on the left, grass tile on the right."
msgstr ""

#: ../../manual/automapping.md:72
msgid "Grass tile on the left, flower tile on the right."
msgstr ""

#: ../../manual/automapping.md:78 ../../manual/automapping.md:219
msgid "{bdg-secondary-line}`Since Tiled 1.9`"
msgstr ""

#: ../../manual/automapping.md:81
msgid "Matching Special Cases"
msgstr ""

#: ../../manual/automapping.md:83
msgid ""
"In some cases, your tiles alone aren't enough to define the scenario you "
"want to match. Tiled provides a built-in “Automapping Rules Tileset” to "
"handle certain special cases, which can be added to your rule map through"
" *Map > Add Automapping Rules Tileset*."
msgstr ""

#: ../../manual/automapping.md:85
msgid "[Empty]{.tile .empty}"
msgstr ""

#: ../../manual/automapping.md:86
msgid ""
"This tile matches any empty cell. If used on an `output` layer, this tile"
" will output an empty tile, allowing you to erase tiles with Automapping."
msgstr ""

#: ../../manual/automapping.md:88
msgid "[Ignore]{.tile .ignore}"
msgstr ""

#: ../../manual/automapping.md:89
msgid ""
"This tile does not affect the rule in any way. Its only function is to "
"allow connecting otherwise disconnected parts into a single rule, but it "
"can also be used for clarity."
msgstr ""

#: ../../manual/automapping.md:91
msgid "[NonEmpty]{.tile .nonempty}"
msgstr ""

#: ../../manual/automapping.md:92
msgid "This tile matches any non-empty cell."
msgstr ""

#: ../../manual/automapping.md:94
msgid "[Other]{.tile .other}"
msgstr ""

#: ../../manual/automapping.md:95
msgid ""
"This tile matches any cell, which contains a tile that is *different* "
"from all the tiles used by the current rule targeting the same input "
"layer. This includes empty cells, unless the Empty tile is explicitly "
"used elsewhere by the rule (since Tiled 1.10)."
msgstr ""

#: ../../manual/automapping.md:97
msgid "[Negate]{.tile .negate}"
msgstr ""

#: ../../manual/automapping.md:98
msgid ""
"This tile negates the condition at a specific location, making other "
"`input` layers with the same target layer name act like inputnot and vice"
" versa, but only in that location, which can simplify your rules in some "
"cases."
msgstr ""

#: ../../manual/automapping.md:100
msgid ""
"The meaning of these tiles is derived from their custom `MatchType` "
"property. This means that you can set up your own tiles for matching "
"these special cases as well!"
msgstr ""

#: ../../manual/automapping.md:102
#, fuzzy
msgid "Defining Outputs"
msgstr "Tuotantopanosten määritelmä"

#: ../../manual/automapping.md:104
msgid ""
"The `output` layers define what will be output when the input of the rule"
" matches something in the working map. These can be Tile or Object "
"Layers, and their names must follow this scheme, which is similar to that"
" of `input` layer names:"
msgstr ""

#: ../../manual/automapping.md:110
msgid ""
"Everything after the first underscore is the **name**, which determines "
"which layer in the working map the tiles or objects will be placed on. If"
" the working map includes multiple layers by this name, the bottom-most "
"one will be used. If the rule matches and the working map does not "
"already contain the named output layer, Automapping will create the "
"layer."
msgstr ""

#: ../../manual/automapping.md:112
msgid ""
"The **index** is optional, and is not related to the input indices. "
"Instead, output indices are used to randomize the output: every time the "
"rule finds a match, a random output index is chosen and only the output "
"layers with that index will have their contents placed into the working "
"map."
msgstr ""

#: ../../manual/automapping.md:114
msgid "Random Output Example"
msgstr ""

#: ../../manual/automapping.md:116
msgid ""
"Continuing with the example from before, you can use output layers like "
"these to randomise the Ground layer:"
msgstr ""

#: ../../manual/automapping.md:9
msgid "output**1**\\_Ground"
msgstr ""

#: ../../manual/automapping.md:9
msgid "![Two flower tiles.](images/automapping/automap_input1.png)"
msgstr ""

#: ../../manual/automapping.md:9
msgid "output**2**\\_Ground"
msgstr ""

#: ../../manual/automapping.md:9
msgid ""
"![Flower on the left, grass on the "
"right.](images/automapping/automap_output1.png)"
msgstr ""

#: ../../manual/automapping.md:122
msgid "Flower on the left, grass on the right."
msgstr ""

#: ../../manual/automapping.md:9
msgid "output**3**\\_Ground"
msgstr ""

#: ../../manual/automapping.md:9
msgid ""
"![Grass on the left, flower on the "
"right.](images/automapping/automap_output2.png)"
msgstr ""

#: ../../manual/automapping.md:123
msgid "Grass on the left, flower on the right."
msgstr ""

#: ../../manual/automapping.md:9
msgid "output**4**\\_Ground"
msgstr ""

#: ../../manual/automapping.md:125
msgid ""
"By default, the output of a rule is allowed to overlap previous output "
"from the same rule, which isn't always what you want. In the example "
"above, the output rocks can be partially overwritten by subsequent "
"outputs from that rule. You can set the [`NoOverlappingOutput` map "
"property](#NoOverlappingOutput) to `true` to avoid this. This will only "
"apply to rules overlapping their own output, however - outputs from "
"different rules will still be allowed to overlap. If you want to avoid "
"any kind of overlap, you will need to design your inputs such that your "
"inputs are specific enough for different rules to not overlap."
msgstr ""

#: ../../manual/automapping.md:130
msgid ""
"Automap output with numerous half-rocks where different outputs "
"overlapped each other."
msgstr ""

#: ../../manual/automapping.md:130
msgid ""
"Because outputs are allowed to overlap each other and the inputs aren't "
"very specific, the two-tile rock outputs are overlapped by subsequent "
"outputs."
msgstr ""

#: ../../manual/automapping.md:136
msgid "Automap output where each rock is whole."
msgstr ""

#: ../../manual/automapping.md:136
msgid ""
"With `NoOverlappingOutput` set to `true`, outputs don't overlap and all "
"the rocks are whole."
msgstr ""

#: ../../manual/automapping.md:139
msgid ""
"Sometimes, you may want certain outputs to appear more or less frequently"
" than others. The above example would look much nicer if the flowers and "
"rocks didn't appear quite so often. You can control the probability of an"
" output index by setting the [`Probability`](#outputProbability) layer "
"property on one of the layers for that index."
msgstr ""

#: ../../manual/automapping.md:144
msgid ""
"Automap output where most of the ground is grass, with a few flowers and "
"just one rock."
msgstr ""

#: ../../manual/automapping.md:144
msgid ""
"Setting the `Probability` of the grass output to 20 and the `Probability`"
" of the rock output to 0.5 produces much nicer-looking results."
msgstr ""

#: ../../manual/automapping.md:149
msgid ""
"While Automapping can output Objects, there are some caveats when it "
"comes to detecting whether they're part of a given rule's output:"
msgstr ""

#: ../../manual/automapping.md:151
msgid "Object rotation is not taken into account."
msgstr ""

#: ../../manual/automapping.md:152
msgid "Tile Objects' Object Alignment is not taken into account."
msgstr ""

#: ../../manual/automapping.md:153
msgid "Ellipse and Text Objects use their bounding rectangles."
msgstr ""

#: ../../manual/automapping.md:154
msgid ""
"Point positions are checked *exclusively*, a Point must be within a given"
" cell to count as part of it, merely touching the cell is not enough."
msgstr ""

#: ../../manual/automapping.md:155
msgid ""
"Polygons and Polylines are checked as if they were Points at their "
"position, the rest of the shape is not taken into account."
msgstr ""

#: ../../manual/automapping.md:157
msgid ""
"You can ensure these Objects are output by putting [Ignore]{.tile "
".ignore} [special tiles](#specialtiles) in a tile output layer at their "
"position. You may also need to connect this tile to the rest of the rule "
"with more Ignore tiles to make sure it isn't treated as a separate rule."
msgstr ""

#: ../../manual/automapping.md:160
msgid ""
"Any custom properties set on an output layer (other than `Probability`) "
"will be copied to the target layer when the output is applied. You should"
" normally not need to add any such properties to output layers, but this "
"can be a way to automate setting properties on your layers based on their"
" contents."
msgstr ""

#: ../../manual/automapping.md:162
#, fuzzy
msgid "Automapping Properties"
msgstr "Automaattikartoitus"

#: ../../manual/automapping.md:164
msgid ""
"The behavior of your rules can be modified by properties on the rules "
"map, input and output layers, and on a per-rule basis using objects."
msgstr ""

#: ../../manual/automapping.md:166 ../../manual/export-gmx.rst:102
#: ../../manual/export-tscn.rst:63
msgid "Map Properties"
msgstr ""

#: ../../manual/automapping.md:169
msgid "DeleteTiles"
msgstr ""

#: ../../manual/automapping.md:170
msgid ""
"This is a boolean map property: it can be `true` or `false`. When `true`,"
" if rules of this rule map get applied at some location in your map, all "
"existing tiles in the input region are deleted before applying the "
"output. The usual way to erase tiles via Automapping is to output the "
"[Empty]{.tile .empty} [special tile](#specialtiles), but this property "
"can save you time your rules do a lot of deletions on certain layers."
msgstr ""

#: ../../manual/automapping.md:172
msgid ""
"Despite the name, this property affects output Object Layers too, "
"deleting any Objects that fully or partially overlap the input region of "
"any rule that matches. This is currently the only way to delete Objects "
"via Automapping."
msgstr ""

#: ../../manual/automapping.md:175
msgid ""
"Objects are only deleted when they overlap tiles in the input region. All"
" the caveats of outputting objects also apply, see the [warning in the "
"Defining Outputs section](#objectRegion)."
msgstr ""

#: ../../manual/automapping.md:179
#, fuzzy
msgid "AutomappingRadius"
msgstr "Automaattikartoitus"

#: ../../manual/automapping.md:180
msgid ""
"This map property is a number: 1, 2, 3 … When using Automap While "
"Drawing, this property determines how far beyond the tiles affected by "
"your changes Automapping will look for matches."
msgstr ""

#: ../../manual/automapping.md:182
msgid "MatchOutsideMap {bdg-secondary-line}`Since Tiled 1.2`"
msgstr ""

#: ../../manual/automapping.md:183
msgid ""
"This boolean map property determines whether rules can match even when "
"their input region falls partially outside of a map. By default it is "
"`false` for bounded maps and `true` for infinite maps. In some cases it "
"can be useful to enable this for bounded maps. Tiles outside of the map "
"boundaries are simply considered empty, unless one of either "
"`OverflowBorder` or `WrapBorder` are also true."
msgstr ""

#: ../../manual/automapping.md:185
msgid ""
"Tiled 1.0 and 1.1 behaved as if this property was `true`, whereas older "
"versions of Tiled behaved as if this property was `false`."
msgstr ""

#: ../../manual/automapping.md:187
msgid "OverflowBorder {bdg-secondary-line}`Since Tiled 1.3`"
msgstr ""

#: ../../manual/automapping.md:188
msgid ""
"This boolean map property customizes the behavior of the "
"`MatchOutsideMap` property. When this property is `true`, tiles outside "
"of the map boundaries are considered as if they were copies of the "
"nearest inbound tiles, effectively “overflowing” the map’s borders to the"
" outside region."
msgstr ""

#: ../../manual/automapping.md:190 ../../manual/automapping.md:195
msgid ""
"When this property is `true`, it implies `MatchOutsideMap`. Note that "
"this property has no effect on infinite maps (since there is no notion of"
" border)."
msgstr ""

#: ../../manual/automapping.md:192
msgid "WrapBorder {bdg-secondary-line}`Since Tiled 1.3`"
msgstr ""

#: ../../manual/automapping.md:193
msgid ""
"This boolean map property customizes the behavior of the "
"`MatchOutsideMap` property. When this property is `true`, the map "
"effectively “wraps” around itself, making tiles on one border of the map "
"influence the regions on the other border and vice versa."
msgstr ""

#: ../../manual/automapping.md:197
msgid ""
"If both `WrapBorder` and `OverflowBorder` are `true`, `WrapBorder` takes "
"precedence over `OverflowBorder`."
msgstr ""

#: ../../manual/automapping.md:200
msgid "MatchInOrder {bdg-secondary-line}`Since Tiled 1.9`"
msgstr ""

#: ../../manual/automapping.md:201
msgid ""
"When this boolean map property is set to `true`, each rule is applied "
"immediately after a match is found. This disables concurrent matching of "
"rules, but allows each rule to take into account the output of the "
"previously applied rules (as used to be the case before Tiled 1.9)."
msgstr ""

#: ../../manual/automapping.md:203
msgid ""
"Alternatively, you can split up your rules over multiple rule maps. Rule "
"maps are always applied in order, so each rule map can rely on any "
"modifications applied by previous rule maps."
msgstr ""

#: ../../manual/automapping.md:205 ../../manual/export-gmx.rst:126
#: ../../manual/export-tscn.rst:21
msgid "Layer Properties"
msgstr ""

#: ../../manual/automapping.md:207
msgid "The following properties are supported on a per-layer basis:"
msgstr ""

#: ../../manual/automapping.md:210
msgid "AutoEmpty (alias: StrictEmpty)"
msgstr ""

#: ../../manual/automapping.md:211
msgid ""
"This boolean layer property can be added to `input` and `inputnot` layers"
" to customize the behavior for empty tiles within a rule."
msgstr ""

#: ../../manual/automapping.md:213
msgid ""
"Normally, empty tiles are simply ignored. When `AutoEmpty` is `true`, "
"empty tiles within the input region match empty tiles in the target "
"layer. This can only happen when you have multiple input/inputnot layers "
"and some of the tiles that are part of the same rule are empty while "
"others are not. Usually, using the [Empty]{.tile .empty} [special "
"tile](#specialtiles) is the best way to specify an empty tile, but this "
"property is useful when you have multiple input layers, some of which "
"need to match many empty tiles. Note that the input region is defined by "
"*all* input layers, regardless of index."
msgstr ""

#: ../../manual/automapping.md:216
msgid "Probability {bdg-primary}`New in Tiled 1.10`"
msgstr ""

#: ../../manual/automapping.md:217
msgid ""
"This float layer property can be added to `output` layers to control the "
"probability that a given output index will be chosen. The probabilities "
"for each output index are relative to one another, and default to 1.0. "
"For example, if you have outputA with probability 2 and outputB with "
"probability 0.5, A will be chosen four times as often as B. If multiple "
"output layers with the same index have their `Probability` set, the last "
"(top-most) layer's probability will be used."
msgstr ""

#: ../../manual/automapping.md:221
msgid "Object Properties"
msgstr ""

#: ../../manual/automapping.md:223
msgid ""
"A number of options can be set on individual rules, even within the same "
"rule map. To do this, add an Object Layer to your rule map called "
"`rule_options`. On this layer, you can create plain rectangle objects and"
" any options you set on these objects will apply to all rules they "
"contain."
msgstr ""

#: ../../manual/automapping.md:225
msgid "The following options are supported per-rule:"
msgstr ""

#: ../../manual/automapping.md:227
msgid "ModX"
msgstr ""

#: ../../manual/automapping.md:228
msgid "Only apply a rule every N tiles on the X axis (defaults to 1)."
msgstr ""

#: ../../manual/automapping.md:230
msgid "ModY"
msgstr ""

#: ../../manual/automapping.md:231
msgid "Only apply a rule every N tiles on the Y axis (defaults to 1)."
msgstr ""

#: ../../manual/automapping.md:233
msgid "OffsetX"
msgstr ""

#: ../../manual/automapping.md:234
msgid "An offset applied in combination with ModX (defaults to 0)."
msgstr ""

#: ../../manual/automapping.md:236
msgid "OffsetY"
msgstr ""

#: ../../manual/automapping.md:237
msgid "An offset applied in combination with ModY (defaults to 0)."
msgstr ""

#: ../../manual/automapping.md:239 ../../manual/editing-tilesets.rst:124
msgid "Probability"
msgstr ""

#: ../../manual/automapping.md:240
msgid ""
"The chance that a rule applies at all, even if its input layers would "
"have matched, from 0 to 1. A value of 0 effectively disables the rule, "
"whereas a value of 1 (the default) means it is never skipped."
msgstr ""

#: ../../manual/automapping.md:242
msgid "Disabled"
msgstr ""

#: ../../manual/automapping.md:243
msgid ""
"A convenient way to (temporarily) disable some rules (defaults to "
"`false`)."
msgstr ""

#: ../../manual/automapping.md:246
msgid "NoOverlappingOutput"
msgstr ""

#: ../../manual/automapping.md:247
msgid ""
"When set to `true`, the output of a rule is not allowed to overlap other "
"outputs of the same rule (defaults to `false`)."
msgstr ""

#: ../../manual/automapping.md:249
msgid ""
"All these options can also be set on the rule map itself, in which case "
"they apply as defaults for all rules, which can then be overridden for "
"specific rules by placing rectangle objects."
msgstr ""

#: ../../manual/automapping.md:251
msgid "Examples"
msgstr ""

#: ../../manual/automapping.md:253
msgid "RPG Cliffs"
msgstr ""

#: ../../manual/automapping.md:255
msgid ""
"A common Automapping scenario is to automate the placement of cliff "
"sides. Tilesets will often include cliff tiles like this:"
msgstr ""

#: ../../manual/automapping.md:257
msgid ""
"![Tileset with cliff top tiles and cliff side "
"tiles.](images/automapping/automap_example6.png)"
msgstr ""

#: ../../manual/automapping.md:257
msgid "Tileset with cliff top tiles and cliff side tiles."
msgstr ""

#: ../../manual/automapping.md:259
msgid ""
"Terrains can be used to place the top of the cliff, but they cannot "
"reliably add the vertical cliffs themselves. Fortunately, they are no "
"problem for Automapping."
msgstr ""

#: ../../manual/automapping.md:264
msgid "Cliff top tiles with no sides."
msgstr ""

#: ../../manual/automapping.md:264
msgid "The starting map: the flat top of a cliff painted using Terrains."
msgstr ""

#: ../../manual/automapping.md:270
msgid "The same cliff, with sides added."
msgstr ""

#: ../../manual/automapping.md:270
msgid "Automapping can add the appropriate cliff tiles."
msgstr ""

#: ../../manual/automapping.md:273
msgid ""
"The bottom side and bottom corners of the cliff are the only ones that "
"need cliff tiles in this tileset, so only three rules are needed to add "
"those. The rules are shown below, layer by layer."
msgstr ""

#: ../../manual/automapping.md:267
msgid ""
"![The bottom left corner, bottom side, and bottom right corner of the "
"cliff top.](images/automapping/automap_example3.png)"
msgstr ""

#: ../../manual/automapping.md:277
msgid ""
"The bottom left corner, bottom side, and bottom right corner of the cliff"
" top."
msgstr ""

#: ../../manual/automapping.md:267 ../../manual/automapping.md:289
#: ../../manual/automapping.md:323
msgid "input\\_Cliff"
msgstr ""

#: ../../manual/automapping.md:267
msgid ""
"![Cliff tiles corresponding to the above tiles, positioned one tile "
"lower, since they should go below the cliff top "
"tiles.](images/automapping/automap_example4.png)"
msgstr ""

#: ../../manual/automapping.md:278
msgid ""
"Cliff tiles corresponding to the above tiles, positioned one tile lower, "
"since they should go below the cliff top tiles."
msgstr ""

#: ../../manual/automapping.md:267
msgid "output**1**\\_Cliff"
msgstr ""

#: ../../manual/automapping.md:267
msgid ""
"![Same as above, but with a different middle tile that serves the same "
"purpose but has different "
"details.](images/automapping/automap_example5.png)"
msgstr ""

#: ../../manual/automapping.md:279
msgid ""
"Same as above, but with a different middle tile that serves the same "
"purpose but has different details."
msgstr ""

#: ../../manual/automapping.md:267
msgid "output**2**\\_Cliff"
msgstr ""

#: ../../manual/automapping.md:281
msgid ""
"The two output layers differ only in which tile is output by the middle "
"rule, the two corner output tiles are the same in both cases. These three"
" rules get us most of the way there, but there are still some small "
"issues:"
msgstr ""

#: ../../manual/automapping.md:286
msgid ""
"The same cliff example as before, with cliffs added, but with some tiles "
"not quite connecting correctly."
msgstr ""

#: ../../manual/automapping.md:286
msgid "The result of the rules above."
msgstr ""

#: ../../manual/automapping.md:292
msgid "The same example, with the problem tiles circled in yellow."
msgstr ""

#: ../../manual/automapping.md:292
msgid ""
"The bottom corners and sides of the cliff are circled here because they "
"should use different tiles when they're next to a cliff tile."
msgstr ""

#: ../../manual/automapping.md:295
msgid ""
"This tileset includes tiles for the sides and bottom corners of the cliff"
" top when they're next to a cliff, so you can make another rule map to "
"place those. Since there are left and right side tiles and left and right"
" corner tiles, you will need four rules."
msgstr ""

#: ../../manual/automapping.md:297
msgid ""
"You could create rules that check for a literal cliff tiles next to these"
" tiles, but that would require enumerating every tile that counts as a "
"cliff - all the cosmetic variants of straight cliff section, the cliff "
"corners, and if you're not careful, you might still miss some edge cases "
"like two cliff sides facing each other. A simpler approach would be check"
" whether the tile above this side or corner is a concave corner tile: if "
"it is, then you know that the tile next to it will be something with a "
"cliff."
msgstr ""

#: ../../manual/automapping.md:289
msgid ""
"![The side and corner tiles, with matching concave corner tiles above "
"them.](images/automapping/automap_example9.png)"
msgstr ""

#: ../../manual/automapping.md:301
msgid "The side and corner tiles, with matching concave corner tiles above them."
msgstr ""

#: ../../manual/automapping.md:289
msgid ""
"![Different concave corner "
"tiles.](images/automapping/automap_example10.png)"
msgstr ""

#: ../../manual/automapping.md:302
msgid "Different concave corner tiles."
msgstr ""

#: ../../manual/automapping.md:289
msgid ""
"![The output tiles, versions of the sides and corners meant to be next to"
" cliff tiles.](images/automapping/automap_example11.png)"
msgstr ""

#: ../../manual/automapping.md:303
msgid ""
"The output tiles, versions of the sides and corners meant to be next to "
"cliff tiles."
msgstr ""

#: ../../manual/automapping.md:289 ../../manual/automapping.md:323
msgid "output\\_Cliff"
msgstr ""

#: ../../manual/automapping.md:305
msgid ""
"There is no need to repeat the side and corner tiles on the second "
"\"input\\_Cliff\" layer, you can leave those cells empty and only include"
" the extra input tiles that you need."
msgstr ""

#: ../../manual/automapping.md:307
msgid ""
"With these additional rules in place, you should get the result shown at "
"the top of this section: all the cliffs in place, with no transparent "
"holes where sides and corners meet the cliffs."
msgstr ""

#: ../../manual/automapping.md:309
msgid ""
"Since these rules work with a layer called \"Cliff\", they will not "
"affect cliffs drawn on any other layers. If you want to automap cliffs on"
" several different layers, which may be necessary if you want stacks of "
"cliffs, you'll need to duplicate the rule map and adjust the input and "
"output layer names."
msgstr ""

#: ../../manual/automapping.md:311
msgid "Automap While Drawing"
msgstr ""

#: ../../manual/automapping.md:313
msgid ""
"The rules above work well if you draw your cliff tops with Terrains and "
"then manually trigger Automapping, but what if you want to see the cliffs"
" appear as you draw with Terrains, or want to keep drawing with Terrains "
"after automapping manually?"
msgstr ""

#: ../../manual/automapping.md:318
msgid ""
"Animation showing erasing the cliff top Terrain. The cliff top is updated"
" correctly, but the cliff tiles are not."
msgstr ""

#: ../../manual/automapping.md:318
msgid "Without some extra rules, Automap While Drawing can produce messy results."
msgstr ""

#: ../../manual/automapping.md:321
msgid ""
"For this, your rules will need to take into account tiles that may have "
"previously been placed by Automapping."
msgstr ""

#: ../../manual/automapping.md:324
msgid ""
"If you're using Automapping While Drawing with Terrains, it also helps "
"for your Terrains to be aware of the tiles that may be output to that "
"same layer by Automapping. In this example, this would mean labeling the "
"side and corner tiles meant to be next to cliffs with the same Terrain "
"labels as their base versions."
msgstr ""

#: ../../manual/automapping.md:326
msgid ""
"This will have the side effect of making Terrains randomly output those "
"tiles where they're not needed, but this can be remedied by setting the "
"tile probability of those tiles to 0 in the Tileset Editor. If you "
"*always* use those Terrains with Automapping, you can also just let "
"Automapping fix the tiles."
msgstr ""

#: ../../manual/automapping.md:329
msgid ""
"There are two approaches you can take to make your Automapping rules take"
" its own output into account:"
msgstr ""

#: ../../manual/automapping.md:331
msgid "Include those tiles as alternate inputs in all the rules, or"
msgstr ""

#: ../../manual/automapping.md:332
msgid ""
"Make another set of rules to reset all the alternate tiles to a uniform "
"condition."
msgstr ""

#: ../../manual/automapping.md:334
msgid ""
"The appropriate option will depend on your specific rules. In this case, "
"the latter is simpler: all you have to do is erase any cliff tiles, and "
"replace the variants meant to be placed next to cliffs with their basic "
"versions. For this purpose, you should create another rule map, and place"
" it *before* the other rules in your `rules.txt`, so that it can prepare "
"the map for those other rules. The actual rules are just simple "
"substitutions:"
msgstr ""

#: ../../manual/automapping.md:323
msgid ""
"![The different cliff tiles in a row above, and the cliff variants of "
"side and corner tiles in a row "
"below.](images/automapping/automap_example12.png)"
msgstr ""

#: ../../manual/automapping.md:338
msgid ""
"The different cliff tiles in a row above, and the cliff variants of side "
"and corner tiles in a row below."
msgstr ""

#: ../../manual/automapping.md:323
msgid ""
"![Red-outlined Empty tiles in the row above, and the basic variants of "
"the side and corner tiles in the row "
"below.](images/automapping/automap_example13.png)"
msgstr ""

#: ../../manual/automapping.md:339
msgid ""
"Red-outlined Empty tiles in the row above, and the basic variants of the "
"side and corner tiles in the row below."
msgstr ""

#: ../../manual/automapping.md:341
msgid ""
"The output tiles in the top row are the [Empty]{.tile .empty} [special "
"tile](#specialtiles), which means the output will erase those tiles."
msgstr ""

#: ../../manual/automapping.md:343
msgid ""
"For Automap While Drawing to work correctly, you may also need to "
"increase the [`AutomappingRadius`](#AutomappingRadius) property of your "
"rules maps. This is because some of the rules may look only at tiles "
"*near* the ones you change by drawing, such as the rules that erase cliff"
" tiles. In this example, you will probably need to set the "
"`AutomappingRadius` to 1 on the reset rules and on the rules that add "
"cliffs."
msgstr ""

#: ../../manual/automapping.md:348
msgid ""
"Animation showing erasing the cliff top Terrain. This time, everything is"
" updated correctly."
msgstr ""

#: ../../manual/automapping.md:348
msgid "Now, Automap While Drawing produces correct results."
msgstr ""

#: ../../manual/automapping.md:352
msgid "Sidescroller Details"
msgstr ""

#: ../../manual/automapping.md:354
msgid ""
"You can use Automapping to add various details to your maps. This small "
"example shows adding foreground details to a sidescroller platforms. This"
" tileset features a number of platform tiles, some of which have rocky "
"tops, and some of which have grassy tops. These two rules will add random"
" grass and flower decorations to a different layer corresponding to the "
"grassy-topped tiles, and delete any decorations that end up on top of "
"non-grassy tiles. There are many input layers, because there are many "
"grassy-topped tiles to check."
msgstr ""

#: ../../manual/automapping.md:345
msgid ""
"![Two rock-grass transition "
"tiles.](images/automapping/automap_example16.png)"
msgstr ""

#: ../../manual/automapping.md:358
msgid "Two rock-grass transition tiles."
msgstr ""

#: ../../manual/automapping.md:345
msgid "input\\_Platform"
msgstr ""

#: ../../manual/automapping.md:345
msgid "![Two grass tiles.](images/automapping/automap_example17.png)"
msgstr ""

#: ../../manual/automapping.md:345
msgid ""
"![Two grass-rock transition "
"tiles.](images/automapping/automap_example18.png)"
msgstr ""

#: ../../manual/automapping.md:360
msgid "Two grass-rock transition tiles."
msgstr ""

#: ../../manual/automapping.md:345
msgid "![Two left grass corner tile.](images/automapping/automap_example19.png)"
msgstr ""

#: ../../manual/automapping.md:361
msgid "Two left grass corner tile."
msgstr ""

#: ../../manual/automapping.md:345
msgid "![Two light grass corner tile.](images/automapping/automap_example20.png)"
msgstr ""

#: ../../manual/automapping.md:362
msgid "Two light grass corner tile."
msgstr ""

#: ../../manual/automapping.md:345
msgid ""
"![Nothing in the first rule, Negate tile in the second "
"rule.](images/automapping/automap_example21.png)"
msgstr ""

#: ../../manual/automapping.md:363
msgid "Nothing in the first rule, Negate tile in the second rule."
msgstr ""

#: ../../manual/automapping.md:345
msgid ""
"![Flower detail tile in the first rule, Empty tile in the "
"second.](images/automapping/automap_example22.png)"
msgstr ""

#: ../../manual/automapping.md:364
msgid "Flower detail tile in the first rule, Empty tile in the second."
msgstr ""

#: ../../manual/automapping.md:345
msgid "outputA\\_Foreground"
msgstr ""

#: ../../manual/automapping.md:345
msgid ""
"![Grass detail tile in the first rule, Empty tile in the "
"second.](images/automapping/automap_example23.png)"
msgstr ""

#: ../../manual/automapping.md:365
msgid "Grass detail tile in the first rule, Empty tile in the second."
msgstr ""

#: ../../manual/automapping.md:345
msgid "outputB\\_Foreground"
msgstr ""

#: ../../manual/automapping.md:345
msgid "![Two Empty tiles.](images/automapping/automap_example24.png)"
msgstr ""

#: ../../manual/automapping.md:366
msgid "Two Empty tiles."
msgstr ""

#: ../../manual/automapping.md:345
msgid "outputC\\_Foreground"
msgstr ""

#: ../../manual/automapping.md:368
msgid ""
"The inputs for these rules are identical except for the last input layer,"
" in which the second rule, which deletes the foreground detail tiles, has"
" the [Negate]{.tile .negate} [special tile](#specialtiles). This turns "
"makes all those `input` layers act like `inputnot` layers, but only in "
"that specific location. This means the first rule matches whenever it "
"encounters any of those grassy-topped tiles, while the second rule "
"matches whenever it encounters *anything other* than those grassy-topped "
"tiles. The second rule could've also been made with a bunch of `inputnot`"
" layers instead, but using the Negate tile reduces how many layers this "
"rule map needs, and it's easier to see that the input tiles are negated "
"when the layers are all viewed together:"
msgstr ""

#: ../../manual/automapping.md:370
msgid ""
"![The two rules with both inputs and outputs visible, but the second rule"
" has a negation sign over its platform "
"tiles.](images/automapping/automap_example25.png)"
msgstr ""

#: ../../manual/automapping.md:370
msgid ""
"The two rules with both inputs and outputs visible, but the second rule "
"has a negation sign over its platform tiles."
msgstr ""

#: ../../manual/automapping.md:372
msgid ""
"The three outputs select a random foreground detail for the first rule, "
"and are all Empty for the second rule. One of the outputs for the first "
"rule is also Empty, just for extra variety."
msgstr ""

#: ../../manual/automapping.md:377
msgid "Platforms with grass and flowers over some of the grassy tiles."
msgstr ""

#: ../../manual/automapping.md:377
msgid "A result from the two rules above."
msgstr ""

#: ../../manual/automapping.md:381
msgid "Updating Legacy Rules"
msgstr ""

#: ../../manual/automapping.md:383
msgid ""
"If you have some Automapping rules from before Tiled 1.9, they should "
"still work much as they always did in most cases. When Tiled sees that a "
"rule map contains `regions` layers, it will automatically bring back the "
"old behavior - rules will be matched in order by default, and cells "
"within input regions that are empty in all the input layers for a given "
"layer and index will be treated as \"Other\"."
msgstr ""

#: ../../manual/automapping.md:386
msgid ""
"In Tiled 1.9.x, the presense of `regions` layers did not imply "
"`MatchInOrder`. If you're using 1.9.x rather than 1.10+ and want to use "
"legacy rules, you'll need to set the `MatchInOrder` map property to "
"``true``."
msgstr ""

#: ../../manual/automapping.md:389
msgid ""
"If you'd like to instead update your rules to not rely on any legacy "
"behavior, that can be as simple as deleting your `regions` layer(s), or "
"it might take some extra work, depending on how exactly your rules are "
"set up:"
msgstr ""

#: ../../manual/automapping.md:391
msgid ""
"If your rules rely on being applied in a set order, set the "
"[`MatchInOrder` map property](#MatchInOrder) to `true`."
msgstr ""

#: ../../manual/automapping.md:392
msgid ""
"When deleting your `regions` layers, make sure you weren't relying on "
"them to connect otherwise disconnected areas of tiles. If you were, use "
"the [Ignore]{.tile .ignore} [special tile](#specialtiles) to connect them"
" on one of the `input` layers, so that Tiled knows they're part of the "
"same rule. To make sure the rules behave exactly the same, fill in any "
"part that was previously part of the input region."
msgstr ""

#: ../../manual/automapping.md:394
msgid ""
"If were using the [`DeleteTiles` map property](#DeleteTiles) to erase "
"tiles from the output layer, you can keep using this property. If you "
"want to make your rule more visually clear, however, you should unset the"
" `DeleteTiles` map property, and instead use the [Empty]{.tile .empty} "
"[special tile](#specialtiles) in all the output cells you want to delete "
"from."
msgstr ""

#: ../../manual/automapping.md:396
msgid ""
"If were using the [`StrictEmpty` map property](#AutoEmpty) to look for "
"empty input tiles, you should now use the Empty special tile instead in "
"the cells you want to check for being empty. You can also continue use "
"the `StrictEmpty` property (or its newer alias, `AutoEmpty`), as long as "
"at least one other input layer is not empty at those locations."
msgstr ""

#: ../../manual/automapping.md:398
msgid ""
"If were relying on the behavior that any tile which is left empty on all "
"of the input layers for a given index is treated as “any tile not in this"
" rule”, you should instead use the [Other]{.tile .other} [special "
"tile](#specialtiles) at those locations, and also the [Empty]{.tile "
".empty} [special tile](#specialtiles) on an inputnot layer at those same "
"locations. The Empty tile is needed because old-style Other never matched"
" Empty, but the MatchType Other tile does match Empty."
msgstr ""

#: ../../manual/automapping.md:401
msgid "Credits"
msgstr ""

#: ../../manual/automapping.md:403
msgid ""
"The [Sidescroller Details](#sidescroller-details) example uses art from "
"[A platformer in the forest](https://opengameart.org/content/a"
"-platformer-in-the-forest) by Buch."
msgstr ""

#: ../../manual/custom-properties.rst:2 ../../manual/export-defold.rst:18
#: ../../manual/export-defold.rst:53
msgid "Custom Properties"
msgstr ""

#: ../../manual/custom-properties.rst:4
msgid ""
"One of the major strengths of Tiled is that it allows setting custom "
"properties on all of its basic data structures. This way it is possible "
"to include many forms of custom information, which can later be used by "
"your game or by the framework you're using to integrate Tiled maps."
msgstr ""

#: ../../manual/custom-properties.rst:9
msgid ""
"Custom properties are displayed in the Properties view. This view is "
"context-sensitive, usually displaying the properties of the last selected"
" object. It also supports multi-selection, for changing the properties of"
" many objects at once."
msgstr ""

#: ../../manual/custom-properties.rst:17
msgid "Properties View"
msgstr ""

#: ../../manual/custom-properties.rst:20
msgid "Adding Properties"
msgstr ""

#: ../../manual/custom-properties.rst:22
msgid ""
"When you add a property (using the '+' button at the bottom of the "
"Properties view), you are prompted for its name and its type. Tiled "
"supports the following basic property types:"
msgstr ""

#: ../../manual/custom-properties.rst:26
msgid "**bool** (true or false)"
msgstr ""

#: ../../manual/custom-properties.rst:27
msgid "**color** (a 32-bit color value)"
msgstr ""

#: ../../manual/custom-properties.rst:28
msgid "**file** (a relative path referencing a file)"
msgstr ""

#: ../../manual/custom-properties.rst:29
msgid "**float** (a floating point number)"
msgstr ""

#: ../../manual/custom-properties.rst:30
msgid "**int** (a whole number)"
msgstr ""

#: ../../manual/custom-properties.rst:31
msgid "**object** (a reference to an object) - *Since Tiled 1.4*"
msgstr ""

#: ../../manual/custom-properties.rst:32
msgid "**string** (any text, including multi-line text)"
msgstr ""

#: ../../manual/custom-properties.rst:38
msgid "Add Property Dialog"
msgstr ""

#: ../../manual/custom-properties.rst:40
msgid ""
"The property type is used to choose a custom editor in the Properties "
"view. Choosing a number or boolean type also avoids that the value will "
"get quoted in JSON and Lua exports."
msgstr ""

#: ../../manual/custom-properties.rst:48
msgid ""
"The context menu for custom file properties provides a quick way to open "
"the file in its preferred editor. For object references, there is an "
"action to quickly jump to the referenced object."
msgstr ""

#: ../../manual/custom-properties.rst:59
msgid "Custom Types"
msgstr ""

#: ../../manual/custom-properties.rst:61
msgid ""
"In addition to the basic property types listed above, you can define "
"custom types in your project. Tiled supports :ref:`custom enums <custom-"
"enums>` and :ref:`custom classes <custom-classes>`."
msgstr ""

#: ../../manual/custom-properties.rst:68
msgid "Custom Types Editor"
msgstr ""

#: ../../manual/custom-properties.rst:72
msgid ""
"These types are automatically saved in the :doc:`project file "
"<projects>`. Hence you need to create a project, before you can set up "
"your custom types."
msgstr ""

#: ../../manual/custom-properties.rst:79
msgid "Custom Enums"
msgstr ""

#: ../../manual/custom-properties.rst:81
msgid ""
"An enum is useful if you want to limit the options for a certain property"
" to a fixed set of values."
msgstr ""

#: ../../manual/custom-properties.rst:84
msgid ""
"An enum also defines how its value is saved. It can be saved as a string,"
" saving one of its values directly. Alternatively it can be saved as a "
"number, the index of the current value in the list of values. The former "
"is more readable whereas the latter could easier and more efficient to "
"load."
msgstr ""

#: ../../manual/custom-properties.rst:89
msgid ""
"Finally, an enum can also allow multiple values to be chosen. In this "
"case each option is displayed with checkbox. When saving as string, a "
"comma-separated list is used and when saving as number the selected "
"indexes are encoded as bitflags."
msgstr ""

#: ../../manual/custom-properties.rst:97
msgid "Custom Classes"
msgstr ""

#: ../../manual/custom-properties.rst:99
msgid ""
"A class is useful if you want to be able to add a set of properties at "
"once, with predefined defaults. It can also prevent excessive prefixing "
"of property names. Classes can have members referring to other classes."
msgstr ""

#: ../../manual/custom-properties.rst:109
msgid ""
"Each data type has a \"Class\" property, which can be used to refer to a "
"custom class. The members of this class will then be directly available "
"as custom properties of that instance (before Tiled 1.9, this feature was"
" only available for objects and tiles as the \"Type\" property)."
msgstr ""

#: ../../manual/custom-properties.rst:114
msgid ""
"Each class can also have a custom color, which is used to make objects "
"more recognizable. The class color is used when rendering shape objects, "
"object name labels and connections between objects."
msgstr ""

#: ../../manual/custom-properties.rst:118
msgid ""
"In the :doc:`JSON </reference/json-map-format>` and :ref:`Lua <lua-"
"export>` file formats, custom class properties used as property values "
"are saved using the native object and table constructs."
msgstr ""

#: ../../manual/custom-properties.rst:129
msgid "Tile Property Inheritance"
msgstr ""

#: ../../manual/custom-properties.rst:131
msgid ""
"When custom properties are added to a tile, these properties will also be"
" visible when an object instance of that tile is selected. This enables "
"easy per-object overriding of certain default properties associated with "
"a tile. This becomes especially useful when combined with :ref:`typed-"
"tiles`."
msgstr ""

#: ../../manual/custom-properties.rst:137
msgid ""
"Inherited properties will be displayed in gray (disabled text color), "
"whereas overridden properties will be displayed in black (usual text "
"color)."
msgstr ""

#: ../../manual/custom-properties.rst:148
msgid "Typed Tiles"
msgstr ""

#: ../../manual/custom-properties.rst:150
msgid ""
"If you're using :ref:`tile objects <insert-tile-tool>`, you can set the "
"class on the tile to avoid having to set it on each object instance. "
"Setting the class on the tile makes the predefined properties visible "
"when having the tile selected, allowing to override the values. It also "
"makes those possibly overridden values visible when having a tile object "
"instance selected, again allowing you to override them."
msgstr ""

#: ../../manual/custom-properties.rst:157
msgid ""
"An example use-case for this would be to define custom classes like "
"\"NPC\", \"Enemy\" or \"Item\" with properties like \"name\", \"health\" "
"or \"weight\". You can then specify values for these on the tiles "
"representing these entities. And when placing those tiles as objects, you"
" can override those values if you need to."
msgstr ""

#: ../../manual/custom-properties.rst:-1 ../../manual/editing-tilesets.rst:-1
#: ../../manual/layers.rst:-1 ../../manual/objects.rst:-1
#: ../../manual/projects.rst:-1 ../../manual/using-templates.rst:-1
msgid "Future Extensions"
msgstr ""

#: ../../manual/custom-properties.rst:166
msgid "There are several types of custom properties I'd like to add:"
msgstr ""

#: ../../manual/custom-properties.rst:168
msgid ""
"**Customized basic properties**, where you can set properties like the "
"minimum or maximum value, the precision or a different default value."
msgstr ""

#: ../../manual/custom-properties.rst:171
msgid ""
"**Array properties**, which would be properties having a list of values "
"(`#1493 <https://github.com/bjorn/tiled/issues/1493>`__)."
msgstr ""

#: ../../manual/custom-properties.rst:174
msgid ""
"Apart from predefining properties based on object type, I'd like to add "
"support for **predefining the properties for each data type**. So "
"defining which custom properties are valid for maps, tilesets, layers, "
"etc. (`#1410 <https://github.com/bjorn/tiled/issues/1410>`__)"
msgstr ""

#: ../../manual/custom-properties.rst:179 ../../manual/editing-tilesets.rst:247
#: ../../manual/layers.rst:228 ../../manual/objects.rst:383
#: ../../manual/projects.rst:84
msgid ""
"If you like any of these plans, please help me getting around to it "
"faster by `sponsoring Tiled development "
"<https://www.mapeditor.org/donate>`__. The more support I receive the "
"more time I can afford to spend improving Tiled!"
msgstr ""

#: ../../manual/editing-tile-layers.rst:2
msgid "Editing Tile Layers"
msgstr ""

#: ../../manual/editing-tile-layers.rst:4
msgid ""
":ref:`tile-layer-introduction` are what makes Tiled a *tile map editor*. "
"Although not as flexible as :ref:`object-layer-introduction`, they "
"provide efficient data storage and good rendering performance as well as "
"efficient content creation. Every new map gets one by default, though "
"feel free to delete it when you're not going to use it."
msgstr ""

#: ../../manual/editing-tile-layers.rst:13
msgid "Stamp Brush"
msgstr ""

#: ../../manual/editing-tile-layers.rst:15
msgid "Shortcut: ``B`` |stock-tool-clone|"
msgstr ""

#: ../../manual/editing-tile-layers.rst:178
msgid "stock-tool-clone"
msgstr ""

#: ../../manual/editing-tile-layers.rst:17
msgid ""
"The primary tool for editing tile layers is the Stamp Brush. It can be "
"used to paint single tiles as well as larger \"stamps\", which is where "
"it gets its name from. Using the right mouse button, it can also quickly "
"capture tile stamps from the currently active layer. A tile stamp is "
"commonly created by selecting one or more tiles in the Tilesets view."
msgstr ""

#: ../../manual/editing-tile-layers.rst:23
msgid "The Stamp Brush has some extra features:"
msgstr ""

#: ../../manual/editing-tile-layers.rst:25
msgid "While holding ``Shift``, click any two points to draw a line between them."
msgstr ""

#: ../../manual/editing-tile-layers.rst:28
msgid ""
"While holding ``Ctrl+Shift``, click any two points two draw a circle or "
"ellipse centered on the first point."
msgstr ""

#: ../../manual/editing-tile-layers.rst:31
msgid ""
"Activate the *Random Mode* using the dice button on the Tool Options "
"toolbar to have the Stamp Brush paint with random tiles from the tile "
"stamp. The probability of each tile depends on how often it occurred on "
"the tile stamp, as well as the probability set on each tile in the "
"*Tileset Editor*."
msgstr ""

#: ../../manual/editing-tile-layers.rst:37
msgid ""
"Activate the *Terrain Fill Mode* using the Terrain tile |terrain| button "
"on the tool bar to have the Stamp Brush paint using random terrain tiles."
" This makes adjacent tiles match edge and corner terrains to be placed. "
"Terrain tiles are described in detail in :doc:`terrain`."
msgstr ""

#: ../../manual/editing-tile-layers.rst:184 ../../manual/terrain.rst:351
msgid "terrain"
msgstr ""

#: ../../manual/editing-tile-layers.rst:42
msgid ""
"In combination with the *Tile Stamps* view, it can also place randomly "
"from a set of predefined tile stamps. This can be more useful than the "
"*Random Mode*, which randomly places individual tiles."
msgstr ""

#: ../../manual/editing-tile-layers.rst:47
msgid ""
"You can flip the current tile stamp horizontally/vertically by using "
"``X`` and ``Y`` respectively. You can also rotate left/right by using "
"``Z`` and ``Shift+Z`` respectively. These actions can also be triggered "
"from the Tool Options tool bar."
msgstr ""

#: ../../manual/editing-tile-layers.rst:55
msgid "Terrain Brush"
msgstr ""

#: ../../manual/editing-tile-layers.rst:57
msgid "Shortcut: ``T`` |terrain-edit|"
msgstr ""

#: ../../manual/editing-tile-layers.rst:183
msgid "terrain-edit"
msgstr ""

#: ../../manual/editing-tile-layers.rst:59
msgid ""
"The Terrain Brush allows for efficient editing with certain types of "
"terrain transitions (corner-based, edge-based or a combination). Setting "
"it up requires associating terrain information with your tiles, which is "
"described in detail in :doc:`terrain`."
msgstr ""

#: ../../manual/editing-tile-layers.rst:64
msgid ""
"Similarly to the :ref:`stamp-tool`, you can draw lines by holding "
"``Shift``. When holding ``Ctrl``, the size of the edited area is "
"increased to cover an entire tile rather than just one corner or edge."
msgstr ""

#: ../../manual/editing-tile-layers.rst:72
msgid ""
"When holding ``Alt``, the editing operations are also applied at a 180 "
"degree rotation. This is especially useful when editing strategic maps "
"where two sides need to have equal opportunities. The modifier works well"
" in combination with either ``Shift`` for drawing lines or ``Ctrl`` for "
"increasing the edited area."
msgstr ""

#: ../../manual/editing-tile-layers.rst:85
msgid "Bucket Fill Tool"
msgstr ""

#: ../../manual/editing-tile-layers.rst:87
msgid "Shortcut: ``F`` |stock-tool-bucket-fill|"
msgstr ""

#: ../../manual/editing-tile-layers.rst:177
msgid "stock-tool-bucket-fill"
msgstr ""

#: ../../manual/editing-tile-layers.rst:89
msgid ""
"The Bucket Fill Tool provides a quick way of filling empty areas or areas"
" covered with the same tiles. The currently active tile stamp will be "
"repeated in the filled area. It can also be used in combination with the "
"*Random Mode*, or *Terrain Fill Mode*."
msgstr ""

#: ../../manual/editing-tile-layers.rst:94
msgid ""
"When holding ``Shift``, the tool fills the currently selected area "
"regardless of its contents. This is useful for filling custom areas that "
"have been selected previously using one or more :ref:`tile-selection-"
"tools`."
msgstr ""

#: ../../manual/editing-tile-layers.rst:98
#: ../../manual/editing-tile-layers.rst:115
msgid ""
"You can also flip and rotate the current stamp as described for the :ref"
":`stamp-tool`."
msgstr ""

#: ../../manual/editing-tile-layers.rst:108
msgid "Shape Fill Tool"
msgstr ""

#: ../../manual/editing-tile-layers.rst:110
msgid "Shortcut: ``P`` |rectangle-fill|"
msgstr ""

#: ../../manual/editing-tile-layers.rst:176
msgid "rectangle-fill"
msgstr ""

#: ../../manual/editing-tile-layers.rst:112
msgid ""
"This tool provides a quick way to fill rectangles or ellipses with a "
"certain tile or pattern. Hold ``Shift`` to fill an exact square or "
"circle."
msgstr ""

#: ../../manual/editing-tile-layers.rst:121
msgid "Eraser"
msgstr ""

#: ../../manual/editing-tile-layers.rst:123
msgid "Shortcut: ``E`` |stock-tool-eraser|"
msgstr ""

#: ../../manual/editing-tile-layers.rst:179
msgid "stock-tool-eraser"
msgstr ""

#: ../../manual/editing-tile-layers.rst:125
msgid ""
"A simple eraser tool. Left click erases single tiles and right click can "
"be used to quickly erase rectangular areas."
msgstr ""

#: ../../manual/editing-tile-layers.rst:132
msgid "Holding ``Shift`` erases on all layers."
msgstr ""

#: ../../manual/editing-tile-layers.rst:137
msgid "Selection Tools"
msgstr ""

#: ../../manual/editing-tile-layers.rst:139
msgid "There are various tile selection tools that all work in similar fashion:"
msgstr ""

#: ../../manual/editing-tile-layers.rst:141
msgid ""
"|stock-tool-rect-select| **Rectangular Select** allows selection of "
"rectangular areas (shortcut: ``R``)"
msgstr ""

#: ../../manual/editing-tile-layers.rst:180
msgid "stock-tool-rect-select"
msgstr ""

#: ../../manual/editing-tile-layers.rst:144
msgid ""
"|stock-tool-fuzzy-select-22| **Magic Wand** allows selection of connected"
" areas filled with the same tile (shortcut: ``W``)"
msgstr ""

#: ../../manual/editing-tile-layers.rst:182
msgid "stock-tool-fuzzy-select-22"
msgstr ""

#: ../../manual/editing-tile-layers.rst:147
msgid ""
"|stock-tool-by-color-select| **Select Same Tile** allows selection of "
"same-tiles across the entire layer (shortcut: ``S``)"
msgstr ""

#: ../../manual/editing-tile-layers.rst:181
msgid "stock-tool-by-color-select"
msgstr ""

#: ../../manual/editing-tile-layers.rst:150
msgid ""
"By default, each of these tools replaces the currently selected area. The"
" following modifiers can be used to change this behavior:"
msgstr ""

#: ../../manual/editing-tile-layers.rst:153
msgid "Holding ``Shift`` expands the current selection with the new area"
msgstr ""

#: ../../manual/editing-tile-layers.rst:154
msgid "Holding ``Ctrl`` subtracts the new area from the current selection"
msgstr ""

#: ../../manual/editing-tile-layers.rst:155
msgid ""
"Holding ``Ctrl`` and ``Shift`` selects the intersection of the new area "
"with the current selection"
msgstr ""

#: ../../manual/editing-tile-layers.rst:158
msgid ""
"You can also lock into one of these modes (Add, Subtract or Intersect) by"
" clicking on one of the tool buttons in the Tool Options toolbar."
msgstr ""

#: ../../manual/editing-tile-layers.rst:162
msgid "Managing Tile Stamps"
msgstr ""

#: ../../manual/editing-tile-layers.rst:164
msgid ""
"It can often be useful to store the current tile stamp somewhere to use "
"it again later. The following shortcuts work for this purpose:"
msgstr ""

#: ../../manual/editing-tile-layers.rst:167
#: ../../manual/keyboard-shortcuts.rst:89
msgid ""
"``Ctrl + 1-9`` - Store current tile stamp. When no tile drawing tool is "
"selected, tries to capture the current tile selection (similar to ``Ctrl "
"+ C``)."
msgstr ""

#: ../../manual/editing-tile-layers.rst:170
msgid ""
"``1-9`` - Recall the stamp stored at this location (similar to ``Ctrl + "
"V``)"
msgstr ""

#: ../../manual/editing-tile-layers.rst:173
msgid ""
"Tile stamps can also be stored by name and extended with variations using"
" the *Tile Stamps* view."
msgstr ""

#: ../../manual/editing-tilesets.rst:2
msgid "Editing Tilesets"
msgstr ""

#: ../../manual/editing-tilesets.rst:4
msgid ""
"To edit a tileset it needs to be opened explicitly for editing. External "
"tilesets can be opened via the *File* menu, but in general the quickest "
"way to edit the tileset when it is already open in the *Tilesets* view is"
" to click the small *Edit Tileset* button in the tool bar below the "
"tileset."
msgstr ""

#: ../../manual/editing-tilesets.rst:11
msgid "Two Types of Tileset"
msgstr ""

#: ../../manual/editing-tilesets.rst:13
msgid ""
"A tileset is a collection of tiles. Tiled currently supports two types of"
" tilesets, which are chosen when creating a new tileset:"
msgstr ""

#: ../../manual/editing-tilesets.rst:22
msgid "Based on Tileset Image"
msgstr ""

#: ../../manual/editing-tilesets.rst:17
msgid ""
"This tileset defines a fixed size for all tiles and the image from which "
"these tiles are supposed to be cut. In addition it supports a margin "
"around the tiles and a spacing between the tiles, which allows for using "
"tileset images that either happen to have space between or around their "
"tiles or those that have extruded the border pixels of each tile to avoid"
" color bleeding."
msgstr ""

#: ../../manual/editing-tilesets.rst:27
msgid "Collection of Images"
msgstr ""

#: ../../manual/editing-tilesets.rst:25
msgid ""
"In this type of tileset each tile refers to its own image file. It is "
"useful when the tiles aren't the same size, or when the packing of tiles "
"into a texture is done later on."
msgstr ""

#: ../../manual/editing-tilesets.rst:29
msgid ""
"Regardless of the type of tileset, you can associate a lot of meta- "
"information with it and its tiles. Some of this information can be for "
"use in your game, like :ref:`collision information <tile-collision-"
"editor>` and :ref:`animations <tile-animation-editor>`. Other information"
" is primarily meant for certain editing tools."
msgstr ""

#: ../../manual/editing-tilesets.rst:37
msgid ""
"A tileset can be either embedded in a map file or saved externally. Since"
" Tiled 1.0, the default and recommended approach is to save your tilesets"
" to their own file. This simplifies your workflow since it makes sure any"
" meta-information is shared between all maps using the same tileset."
msgstr ""

#: ../../manual/editing-tilesets.rst:44 ../../manual/export-tscn.rst:50
msgid "Tileset Properties"
msgstr ""

#: ../../manual/editing-tilesets.rst:46
msgid ""
"You can access the tileset properties by using the menu action *Tileset >"
" Tileset Properties*."
msgstr ""

#: ../../manual/editing-tilesets.rst:50
msgid ""
"The name of the tileset. Used to identify the tileset in the *Tilesets* "
"view when editing a map."
msgstr ""

#: ../../manual/editing-tilesets.rst:66
msgid "Object Alignment"
msgstr ""

#: ../../manual/editing-tilesets.rst:58
msgid ""
"The alignment to use for :ref:`tile objects <insert-tile-tool>` referring"
" to tiles from this tileset. This affects the placement of the tile "
"relative to the position of the object (the origin) and is also the "
"location around which the rotation is applied."
msgstr ""

#: ../../manual/editing-tilesets.rst:63
msgid ""
"Possible values are: *Unspecified* (the default), *Top Left*, *Top*, *Top"
" Right*, *Left*, *Center*, *Right*, *Bottom Left*, *Bottom* and *Bottom "
"Right*. When unspecified, tile object alignment is generally *Bottom "
"Left*, except for Isometric maps where it is *Bottom*."
msgstr ""

#: ../../manual/editing-tilesets.rst:71
msgid "Drawing Offset"
msgstr ""

#: ../../manual/editing-tilesets.rst:69
msgid ""
"A drawing offset in pixels, applied when rendering any tile from the "
"tileset (as part of tile layers or as tile objects). This is can be "
"useful to make your tiles align to the grid."
msgstr ""

#: ../../manual/editing-tilesets.rst:75
msgid "Background Color"
msgstr ""

#: ../../manual/editing-tilesets.rst:74
msgid ""
"A background color for the tileset, which can be set in case the default "
"dark-gray background is not suitable for your tiles."
msgstr ""

#: ../../manual/editing-tilesets.rst:87
msgid "Orientation"
msgstr ""

#: ../../manual/editing-tilesets.rst:82
msgid ""
"When the tileset contains isometric tiles, you can set this to "
"*Isometric*. This value, along with the **Grid Width** and **Grid "
"Height** properties, is taken into account by overlays rendered on top of"
" the tiles. This helps for example when specifying :ref:`terrain-"
"information`. It also affects the orientation used by the :ref:`tile-"
"collision-editor`."
msgstr ""

#: ../../manual/editing-tilesets.rst:92
msgid "Columns"
msgstr ""

#: ../../manual/editing-tilesets.rst:90
msgid ""
"This is a read-only property for tilesets based on a tileset image, but "
"for image collection tilesets you can control the number of columns used "
"when displaying the tileset here."
msgstr ""

#: ../../manual/editing-tilesets.rst:98 ../../manual/editing-tilesets.rst:128
msgid "Image"
msgstr ""

#: ../../manual/editing-tilesets.rst:95
msgid ""
"This property only exists for tilesets based on a tileset image. "
"Selecting the value field will show an *Edit...* button, allowing you to "
"change the parameters relevant to cutting the tiles from the image."
msgstr ""

#: ../../manual/editing-tilesets.rst:100
msgid ""
"Of course, as with most data types in Tiled, you can also associate :doc"
":`custom-properties` with the tileset."
msgstr ""

#: ../../manual/editing-tilesets.rst:105
msgid "Tile Properties"
msgstr ""

#: ../../manual/editing-tilesets.rst:108
msgid "ID"
msgstr ""

#: ../../manual/editing-tilesets.rst:108
msgid "The ID of the tile in the tileset (read-only)"
msgstr ""

#: ../../manual/editing-tilesets.rst:116
msgid "Class"
msgstr ""

#: ../../manual/editing-tilesets.rst:115
msgid ""
"This property refers to custom classes defined in the :ref:`Custom Types "
"Editor <custom-property-types>`. See the section about :ref:`typed-tiles`"
" for more information."
msgstr ""

#: ../../manual/editing-tilesets.rst:119
msgid "Width and Height"
msgstr ""

#: ../../manual/editing-tilesets.rst:119
msgid "The size of the tile (read-only)"
msgstr ""

#: ../../manual/editing-tilesets.rst:122
msgid ""
"Represents a relative probability that this tile will get chosen out of "
"multiple options. This value is used in *Random Mode* and by the :ref"
":`terrain-tool`."
msgstr ""

#: ../../manual/editing-tilesets.rst:127
msgid ""
"Only relevant for tiles that are part of image collection tilesets, this "
"shows the image file of the tile and allows you to change it."
msgstr ""

#: ../../manual/editing-tilesets.rst:133
msgid "Terrain Information"
msgstr ""

#: ../../manual/editing-tilesets.rst:135
msgid ""
"Terrain information can be added to a tileset to enable the use of the "
":ref:`terrain-tool`. See the section about :ref:`defining terrain "
"information <define-terrain-information>`."
msgstr ""

#: ../../manual/editing-tilesets.rst:146 ../../manual/editing-tilesets.rst:161
msgid "Tile Collision Editor"
msgstr ""

#: ../../manual/editing-tilesets.rst:148
msgid ""
"The tile collision editor is available by clicking the *Tile Collision "
"Editor* |tile-collision-editor-icon| button on the tool bar. This will "
"open a view where you can create and edit shapes on the tile. You can "
"also associate custom properties with each shape."
msgstr ""

#: ../../manual/editing-tilesets.rst:217
msgid "tile-collision-editor-icon"
msgstr ""

#: ../../manual/editing-tilesets.rst:153
msgid ""
"Usually these shapes define collision information for a certain sprite or"
" for a tile representing level geometry, but of course you could also use"
" them to add certain hot-spots to your sprites like for particle emitters"
" or the source of gunshots."
msgstr ""

#: ../../manual/editing-tilesets.rst:167
msgid ""
"To be able to easily check whether your tiles have the right collision "
"shapes set up, they can be rendered on the map. To enable this, check "
"*Show Tile Collision Shapes* in the *View* menu. The collision shapes are"
" rendered for both tile layers and tile objects."
msgstr ""

#: ../../manual/editing-tilesets.rst:175
msgid "Showing Tile Collision on the Map"
msgstr ""

#: ../../manual/editing-tilesets.rst:175
msgid ""
"Collision shapes rendered on the map. This map is from `Owyn's Adventure "
"<https://store.steampowered.com/app/1020940/Owyns_Adventure/>`__."
msgstr ""

#: ../../manual/editing-tilesets.rst:181 ../../manual/editing-tilesets.rst:194
msgid "Tile Animation Editor"
msgstr ""

#: ../../manual/editing-tilesets.rst:183
msgid ""
"The tile animation editor allows defining a single linear looping "
"animation with each tile by referring to other tiles in the tileset as "
"its frames. Open it by clicking the *Tile Animation Editor* |tile-"
"animation-editor-icon| button."
msgstr ""

#: ../../manual/editing-tilesets.rst:221
msgid "tile-animation-editor-icon"
msgstr ""

#: ../../manual/editing-tilesets.rst:187
msgid ""
"Tile animations can be live-previewed in Tiled, which is useful for "
"getting a feeling of what it would look like in-game. The preview can be "
"turned on or off via *View > Show Tile Animations*."
msgstr ""

#: ../../manual/editing-tilesets.rst:196
msgid "The following steps allow to add or edit a tile animation:"
msgstr ""

#: ../../manual/editing-tilesets.rst:198
msgid ""
"Select the tile in the main Tiled window. This will make the *Tile "
"Animation Editor* window show the (initially empty) animation associated "
"with that tile, along with all other tiles from the tileset."
msgstr ""

#: ../../manual/editing-tilesets.rst:202
msgid ""
"Drag tiles from the tileset view in the Tile Animation Editor into the "
"list on the left to add animation frames. You can drag multiple tiles at "
"the same time. Each new frame gets a default duration of 100 ms (or other"
" value when set using the :guilabel:`Frame Duration` field at the top)."
msgstr ""

#: ../../manual/editing-tilesets.rst:207
msgid "Double-click on the duration of a frame to change it."
msgstr ""

#: ../../manual/editing-tilesets.rst:209
msgid "Drag frames around in the list to reorder them."
msgstr ""

#: ../../manual/editing-tilesets.rst:211
msgid "A preview of the animation shows in the bottom left corner."
msgstr ""

#: ../../manual/editing-tilesets.rst:213
msgid ""
"You can change the duration of multiple frames at once by selecting them,"
" changing the value in the :guilabel:`Frame Duration` field and then "
"clicking :guilabel:`Apply`."
msgstr ""

#: ../../manual/editing-tilesets.rst:230
msgid ""
"There are many ways in which the tileset editor can be made more "
"efficient, for example:"
msgstr ""

#: ../../manual/editing-tilesets.rst:233
msgid "**Terrain Sets**"
msgstr ""

#: ../../manual/editing-tilesets.rst:235
msgid ""
"Make it easier to set up terrain (`#1729 "
"<https://github.com/bjorn/tiled/issues/1729>`__)"
msgstr ""

#: ../../manual/editing-tilesets.rst:237
msgid "**Tile Collision Editor**"
msgstr ""

#: ../../manual/editing-tilesets.rst:239
msgid ""
"Allow setting collisions for multiple tiles at once (`#1322 "
"<https://github.com/bjorn/tiled/issues/1322>`__)"
msgstr ""

#: ../../manual/editing-tilesets.rst:240
msgid ""
"Render tile collision shapes to the tileset view (`#1281 "
"<https://github.com/bjorn/tiled/issues/1281>`__)"
msgstr ""

#: ../../manual/editing-tilesets.rst:242
msgid "**Tile Animation Editor**"
msgstr ""

#: ../../manual/editing-tilesets.rst:244
msgid ""
"Support multiple named animations per tile (`#986 "
"<https://github.com/bjorn/tiled/issues/986>`__)"
msgstr ""

#: ../../manual/editing-tilesets.rst:245
msgid ""
"Make it easier to define animations spanning multiple tiles (`#811 "
"<https://github.com/bjorn/tiled/issues/811>`__)"
msgstr ""

#: ../../manual/export.rst:18
msgid "Supported Formats"
msgstr ""

#: ../../manual/export.rst:2
msgid "Export Formats"
msgstr ""

#: ../../manual/export.rst:4
msgid ""
"While there are many :doc:`libraries and frameworks </reference/support-"
"for-tmx-maps>` that work directly with Tiled maps, Tiled also supports a "
"number of additional file and export formats, as well as :ref:`exporting "
"a map to an image <export-as-image>`."
msgstr ""

#: ../../manual/export.rst:9
msgid ""
"Exporting can be done by clicking *File > Export*. When triggering the "
"menu action multiple times, Tiled will only ask for the file name the "
"first time. Exporting can also be automated using the ``--export-map`` "
"and ``--export-tileset`` command-line parameters."
msgstr ""

#: ../../manual/export.rst:14
msgid ""
"Several :ref:`export-options` are available, which are applied to maps or"
" tilesets before they are exported (without affecting the map or tileset "
"itself)."
msgstr ""

#: ../../manual/export.rst:34
msgid ""
"When exporting on the command-line on Linux, Tiled will still need an X "
"server to run. To automate exports in a headless environment, you can use"
" a headless X server such as `Xvfb`_. In this case you would run Tiled "
"from the command-line as follows:"
msgstr ""

#: ../../manual/export-custom.rst:2
msgid "Custom Export Formats"
msgstr ""

#: ../../manual/export-custom.rst:4
msgid ""
"Tiled provides several options for extending it with support for "
"additional file formats."
msgstr ""

#: ../../manual/export-custom.rst:12
msgid "Using JavaScript"
msgstr ""

#: ../../manual/export-custom.rst:14
msgid ""
"Tiled is :doc:`extendable using JavaScript </reference/scripting>` and it"
" is possible to add custom export formats using `tiled.registerMapFormat "
"<https://www.mapeditor.org/docs/scripting/modules/tiled.html#registermapformat>`__"
" or `tiled.registerTilesetFormat "
"<https://www.mapeditor.org/docs/scripting/modules/tiled.html#registertilesetformat>`__."
msgstr ""

#: ../../manual/export-custom.rst:20
msgid "Using Python"
msgstr ""

#: ../../manual/export-custom.rst:22
msgid ""
"It is also possible to write :doc:`Python scripts <python>` to add "
"support for importing or exporting custom map formats."
msgstr ""

#: ../../manual/export-custom.rst:26
msgid "Using C++"
msgstr ""

#: ../../manual/export-custom.rst:28
msgid ""
"Currently all export options shipping with Tiled are written as C++ Tiled"
" plugins. The API for such plugins is not documented (apart from Doxygen-"
"style comments in the ``libtiled`` source code), but there are over a "
"dozen examples you can look at."
msgstr ""

#: ../../manual/export-custom.rst:35
msgid ""
"For binary compatibility reasons, a C++ plugin needs to be compiled for "
"the same platform, by the same compiler and with the same versions of Qt "
"and Tiled that the plugin is supposed to support. Generally, the easiest "
"way to achieve this is by compiling the plugin along with Tiled, which is"
" what all current plugins do. If you write a C++ plugin that could be "
"useful for others, it is recommended you open a pull request to have it "
"shipped with Tiled."
msgstr ""

#: ../../manual/export-defold.rst:2
msgid "Defold"
msgstr ""

#: ../../manual/export-defold.rst:4
msgid ""
"Tiled can export to `Defold <https://defold.com/>`__ using one of the two"
" supplied plugins. Both are disabled by default."
msgstr ""

#: ../../manual/export-defold.rst:8
msgid "defold"
msgstr ""

#: ../../manual/export-defold.rst:10
msgid ""
"This plugin exports a map to a `Defold Tile Map "
"<https://www.defold.com/manuals/tilemap/>`__ (\\*.tilemap). It only "
"supports tile layers and only a single tileset may be used."
msgstr ""

#: ../../manual/export-defold.rst:20
msgid ""
"The ``tile_set`` property of the Tile Map can be set by adding a custom "
"string property to the map named \"tile_set\" (case sensitive). If left "
"empty, it will need to be set up in Defold after each export."
msgstr ""

#: ../../manual/export-defold.rst:24
msgid ""
"A custom float property named \"z\" can be added to set the ``z`` value "
"for each tile layer. By default, the layers will be exported with "
"incrementing z values, so you only need to set this property in case you "
"need to customize the rendering order."
msgstr ""

#: ../../manual/export-defold.rst:34
msgid "defoldcollection"
msgstr ""

#: ../../manual/export-defold.rst:36
msgid ""
"This plugin exports a map to a `Defold Collection "
"<https://www.defold.com/manuals/building-blocks/>`__ (\\*.collection), "
"while also creating multiple .tilemap files."
msgstr ""

#: ../../manual/export-defold.rst:40
msgid "It supports:"
msgstr ""

#: ../../manual/export-defold.rst:42
msgid ""
"Group layers (**only top-level group layers are supported, not nested "
"ones!**)"
msgstr ""

#: ../../manual/export-defold.rst:43
msgid "Multiple Tilesets per Tilemap"
msgstr ""

#: ../../manual/export-defold.rst:45
msgid ""
"The plugin automatically assigns a Z-index to each layer ranging between "
"0 and 0.1. It supports the use of 9999 Group Layers and 9999 Tile Layers "
"per Group Layer."
msgstr ""

#: ../../manual/export-defold.rst:49
msgid ""
"When any additional information from the map is needed, the map can be "
"exported in :ref:`Lua format <lua-export>` and loaded as Defold script."
msgstr ""

#: ../../manual/export-defold.rst:55
msgid ""
"The ``tile_set`` property of each tilemap may need to be set up manually "
"in Defold after each export. However, Tiled will attempt to find the "
".tilesource file corresponding with the name your Tileset in Tiled in "
"your project's ``/tilesources/`` directory. If one is found, manual "
"adjustments won't be necessary."
msgstr ""

#: ../../manual/export-defold.rst:61
msgid ""
"Alternatively, a custom string property called \"tilesource\" (case-"
"sensitive) can be added to the *tileset*, which will then be used instead"
" (since Tiled 1.9.2)."
msgstr ""

#: ../../manual/export-defold.rst:65
msgid ""
"If you create custom properties on your map called ``x-offset`` and "
"``y-offset``, these values will be used as coordinates for your top-level"
" GameObject in the Collection. This is useful when working with "
":doc:`Worlds <worlds>`."
msgstr ""

#: ../../manual/export-defold.rst:74
msgid ""
"A custom float property named \"z\" can be added to tile layers to "
"manually specify their ``z`` value."
msgstr ""

#: ../../manual/export-generic.rst:2
msgid "Generic File Formats"
msgstr ""

#: ../../manual/export-generic.rst:4
msgid ""
"Tiled supports exporting to several generic file formats which are not "
"targeting any specific framework."
msgstr ""

#: ../../manual/export-generic.rst:8
msgid "JSON"
msgstr ""

#: ../../manual/export-generic.rst:10
msgid ""
":doc:`The JSON format </reference/json-map-format>` is the most common "
"additional file format supported by Tiled. It can be used instead of TMX "
"since Tiled can also open JSON maps and tilesets and the format supports "
"all Tiled features. Especially in the browser and when using JavaScript "
"in general, the JSON format is easier to load."
msgstr ""

#: ../../manual/export-generic.rst:19
msgid "Lua"
msgstr ""

#: ../../manual/export-generic.rst:21
msgid ""
"Maps and tilesets can be exported to Lua code. This export option "
"supports most of Tiled's features and is useful when using a Lua-based "
"framework like `LÖVE`_ (with `Simple Tiled Implementation`_), `Solar2D`_ "
"(with `ponytiled`_ or `Dusk Engine`_) or `Defold`_."
msgstr ""

#: ../../manual/export-generic.rst:26
msgid ""
"Currently not included are the type of custom properties (though the type"
" does affect how a property value is exported) and information related to"
" :doc:`object templates <using-templates>`."
msgstr ""

#: ../../manual/export-generic.rst:30
msgid ""
"The tiles are referenced using :doc:`/reference/global-tile-ids`, as done"
" in the :doc:`TMX </reference/tmx-map-format>` and :doc:`JSON </reference"
"/json-map-format>` formats."
msgstr ""

#: ../../manual/export-generic.rst:35
msgid "CSV"
msgstr ""

#: ../../manual/export-generic.rst:37
msgid ""
"The CSV export only supports :doc:`tile layers <editing-tile-layers>`. "
"Maps containing multiple tile layers will export as multiple files, "
"called ``base_<layer-name>.csv``."
msgstr ""

#: ../../manual/export-generic.rst:41
msgid ""
"Each tile is written out by its ID, unless the tile has a custom property"
" called ``name``, in which case its value is used to write out the tile. "
"Using multiple tilesets will lead to ambiguous IDs, unless the custom "
"``name`` property is used. Empty cells get the value ``-1``."
msgstr ""

#: ../../manual/export-generic.rst:46
msgid ""
"When tiles are flipped horizontally, vertically or diagonally, these "
"states are exported using bitflags in the ID, in the same way as done in "
"the :doc:`/reference/tmx-map-format`."
msgstr ""

#: ../../manual/export-gmx.rst:4
msgid "GameMaker: Studio 1.4"
msgstr ""

#: ../../manual/export-gmx.rst:6
msgid ""
"GameMaker: Studio 1.4 uses a custom XML-based format to store its rooms, "
"and Tiled ships with a plugin to export maps in this format. Currently "
"only orthogonal maps will export correctly."
msgstr ""

#: ../../manual/export-gmx.rst:10
msgid ""
"Tile layers and tile objects (when no type is set) will export as "
"\"tile\" elements. These support horizontal and vertical flipping, but no"
" rotation. For tile objects, scaling is also supported."
msgstr ""

#: ../../manual/export-gmx.rst:16
msgid ""
"The tilesets have to be named the same as the corresponding backgrounds "
"in the GameMaker project. Otherwise GameMaker will pop up an error for "
"each tile while loading the exported ``room.gmx`` file."
msgstr ""

#: ../../manual/export-gmx.rst:21 ../../manual/export-yy.rst:128
msgid "Object Instances"
msgstr ""

#: ../../manual/export-gmx.rst:23
msgid ""
"GameMaker object instances are created by putting the object name in the "
"\"Type\" field of the object in Tiled. Rotation is supported here, and "
"for tile objects also flipping and scaling is supported (though flipping "
"in combination with rotation doesn't appear to work in GameMaker)."
msgstr ""

#: ../../manual/export-gmx.rst:32
msgid ""
"The following custom properties can be set on objects to affect the "
"exported instance:"
msgstr ""

#: ../../manual/export-gmx.rst:35
msgid "string ``code`` (instance creation code, default: \"\")"
msgstr ""

#: ../../manual/export-gmx.rst:36 ../../manual/export-yy.rst:104
msgid "float ``scaleX`` (default: derived from tile or 1.0)"
msgstr ""

#: ../../manual/export-gmx.rst:37 ../../manual/export-yy.rst:105
msgid "float ``scaleY`` (default: derived from tile or 1.0)"
msgstr ""

#: ../../manual/export-gmx.rst:38 ../../manual/export-yy.rst:107
msgid "int ``originX`` (default: 0)"
msgstr ""

#: ../../manual/export-gmx.rst:39 ../../manual/export-yy.rst:108
msgid "int ``originY`` (default: 0)"
msgstr ""

#: ../../manual/export-gmx.rst:41 ../../manual/export-yy.rst:111
msgid ""
"The ``scaleX`` and ``scaleY`` properties can be used to override the "
"scale of the instance. However, if the scale is relevant then it will "
"generally be easier to use a tile object, in which case it is "
"automatically derived from the tile size and the object size."
msgstr ""

#: ../../manual/export-gmx.rst:46
msgid ""
"The ``originX`` and ``originY`` properties can be used to tell Tiled "
"about the origin of the object defined in GameMaker, as an offset from "
"the top-left. This origin is taken into account when determining the "
"position of the exported instance."
msgstr ""

#: ../../manual/export-gmx.rst:53
msgid ""
"Of course setting the type and/or the above properties manually for each "
"instance will get old fast. Since Tiled 1.0.2, you can instead use tile "
"objects with the type set on the tile, and in Tiled 1.1 you can also use "
":doc:`object templates <using-templates>`."
msgstr ""

#: ../../manual/export-gmx.rst:63 ../../manual/export-yy.rst:292
msgid "Views"
msgstr ""

#: ../../manual/export-gmx.rst:-1
msgid "GameMaker View Settings"
msgstr ""

#: ../../manual/export-gmx.rst:69
msgid ""
"Views can be defined using :ref:`rectangle objects <insert-rectangle-"
"tool>` where the Type has been set to ``view``. The position and size "
"will be snapped to pixels. Whether the view is visible when the room "
"starts depends on whether the object is visible. The use of views is "
"automatically enabled when any views are defined."
msgstr ""

#: ../../manual/export-gmx.rst:75 ../../manual/export-yy.rst:300
msgid ""
"The following custom properties can be used to define the various other "
"properties of the view:"
msgstr ""

#: ../../manual/export-gmx.rst:78
msgid "**Port on screen**"
msgstr ""

#: ../../manual/export-gmx.rst:80 ../../manual/export-yy.rst:314
msgid "int ``xport`` (default: 0)"
msgstr ""

#: ../../manual/export-gmx.rst:81 ../../manual/export-yy.rst:315
msgid "int ``yport`` (default: 0)"
msgstr ""

#: ../../manual/export-gmx.rst:82
msgid "int ``wport`` (default: 1024)"
msgstr ""

#: ../../manual/export-gmx.rst:83 ../../manual/export-yy.rst:317
msgid "int ``hport`` (default: 768)"
msgstr ""

#: ../../manual/export-gmx.rst:85 ../../manual/export-yy.rst:319
msgid "**Object following**"
msgstr ""

#: ../../manual/export-gmx.rst:87
msgid "string ``objName``"
msgstr ""

#: ../../manual/export-gmx.rst:88 ../../manual/export-yy.rst:322
msgid "int ``hborder`` (default: 32)"
msgstr ""

#: ../../manual/export-gmx.rst:89 ../../manual/export-yy.rst:323
msgid "int ``vborder`` (default: 32)"
msgstr ""

#: ../../manual/export-gmx.rst:90 ../../manual/export-yy.rst:324
msgid "int ``hspeed`` (default: -1)"
msgstr ""

#: ../../manual/export-gmx.rst:91 ../../manual/export-yy.rst:325
msgid "int ``vspeed`` (default: -1)"
msgstr ""

#: ../../manual/export-gmx.rst:95 ../../manual/export-yy.rst:329
msgid ""
"When you're defining views in Tiled, it is useful to add ``view`` as "
"class in the :ref:`Custom Types Editor <custom-property-types>`, adding "
"the above properties for ease of access. If you frequently use views with"
" similar settings, you can set up :doc:`templates <using-templates>` for "
"them."
msgstr ""

#: ../../manual/export-gmx.rst:105 ../../manual/export-yy.rst:222
#: ../../manual/keyboard-shortcuts.rst:12 ../../manual/preferences.rst:21
msgid "General"
msgstr ""

#: ../../manual/export-gmx.rst:107
msgid "int ``speed`` (default: 30)"
msgstr ""

#: ../../manual/export-gmx.rst:108 ../../manual/export-yy.rst:238
msgid "bool ``persistent`` (default: false)"
msgstr ""

#: ../../manual/export-gmx.rst:109 ../../manual/export-yy.rst:239
msgid "bool ``clearDisplayBuffer`` (default: true)"
msgstr ""

#: ../../manual/export-gmx.rst:110 ../../manual/export-yy.rst:253
msgid "bool ``clearViewBackground`` (default: false)"
msgstr ""

#: ../../manual/export-gmx.rst:111
msgid "string ``code`` (map creation code, default: \"\")"
msgstr ""

#: ../../manual/export-gmx.rst:114 ../../manual/export-yy.rst:261
msgid "Physics"
msgstr ""

#: ../../manual/export-gmx.rst:116 ../../manual/export-yy.rst:264
msgid "bool ``PhysicsWorld`` (default: false)"
msgstr ""

#: ../../manual/export-gmx.rst:117
msgid "int ``PhysicsWorldTop`` (default: 0)"
msgstr ""

#: ../../manual/export-gmx.rst:118
msgid "int ``PhysicsWorldLeft`` (default: 0)"
msgstr ""

#: ../../manual/export-gmx.rst:119
msgid "int ``PhysicsWorldRight`` (default: width of map in pixels)"
msgstr ""

#: ../../manual/export-gmx.rst:120
msgid "int ``PhysicsWorldBottom`` (default: height of map in pixels)"
msgstr ""

#: ../../manual/export-gmx.rst:121 ../../manual/export-yy.rst:265
msgid "float ``PhysicsWorldGravityX`` (default: 0.0)"
msgstr ""

#: ../../manual/export-gmx.rst:122 ../../manual/export-yy.rst:266
msgid "float ``PhysicsWorldGravityY`` (default: 10.0)"
msgstr ""

#: ../../manual/export-gmx.rst:123 ../../manual/export-yy.rst:267
msgid "float ``PhysicsWorldPixToMeters`` (default: 0.1)"
msgstr ""

#: ../../manual/export-gmx.rst:128
msgid ""
"Both tile layers and object layers may produce \"tile\" elements in the "
"exported room file. Their depth is set automatically, with tiles from the"
" bottom-most layer getting a value of 10000000 (the GameMaker default) "
"and counting up from there. If you want to set a custom depth value you "
"can set the following property on the layer:"
msgstr ""

#: ../../manual/export-gmx.rst:134
msgid "int ``depth`` (default: 10000000 + N)"
msgstr ""

#: ../../manual/export-image.rst:4
msgid "Export as Image"
msgstr ""

#: ../../manual/export-image.rst:6
msgid ""
"Maps can be exported as image. Tiled supports most common image formats. "
"Choose *File -> Export as Image...* to open the relevant dialog."
msgstr ""

#: ../../manual/export-image.rst:9
msgid ""
"Since exporting a map can in some cases result in a huge image, a *Use "
"current zoom level* option is provided to allow exporting the map at the "
"size it's currently displayed at."
msgstr ""

#: ../../manual/export-image.rst:13
msgid ""
"For repeatedly converting a map to an image, manually triggering this "
"export isn't very convenient. For this purpose, a tool called "
"``tmxrasterizer`` ships with Tiled, which contrary to its name is able to"
" render any supported map format to an image. It is also able to render "
":doc:`entire worlds <worlds>` to an image. On Linux this tool can be set "
"up for generating thumbnail previews of maps in the file manager."
msgstr ""

#: ../../manual/export-other.rst:2
msgid "Other Formats"
msgstr ""

#: ../../manual/export-other.rst:4
msgid "A few other plugins ship with Tiled to support various games or tools:"
msgstr ""

#: ../../manual/export-other.rst:7
msgid "droidcraft"
msgstr ""

#: ../../manual/export-other.rst:7
msgid "Adds support for editing `DroidCraft`_ maps (\\*.dat)"
msgstr ""

#: ../../manual/export-other.rst:10
msgid "flare"
msgstr ""

#: ../../manual/export-other.rst:10
msgid "Adds support for editing `Flare Engine`_ maps (\\*.txt)"
msgstr ""

#: ../../manual/export-other.rst:13
msgid "replicaisland"
msgstr ""

#: ../../manual/export-other.rst:13
msgid "Adds support for editing `Replica Island`_ maps (\\*.bin)"
msgstr ""

#: ../../manual/export-other.rst:24
msgid "rpmap"
msgstr ""

#: ../../manual/export-other.rst:20
msgid ""
"Adds support for exporting Tiled maps as RpMap (\\*.rpmap), the format "
"used by `MapTool`_."
msgstr ""

#: ../../manual/export-other.rst:23
msgid ""
"Currently, support is limited to maps using \"Image Collection\" tilesets"
" since MapTool doesn't support tileset images."
msgstr ""

#: ../../manual/export-other.rst:27
msgid "tengine"
msgstr ""

#: ../../manual/export-other.rst:27
msgid "Adds support for exporting to `T-Engine4`_ maps (\\*.lua)"
msgstr ""

#: ../../manual/export-other.rst:29
msgid ""
"These plugins are disabled by default. They can be enabled in *Edit > "
"Preferences > Plugins*."
msgstr ""

#: ../../manual/export-tbin.rst:6
msgid "tBIN"
msgstr ""

#: ../../manual/export-tbin.rst:8
msgid ""
"The tBIN map format is a binary format used by the `tIDE Tile Map "
"Editor`_. tIDE was used by `Stardew Valley`_, a successful game that "
"spawned many `community mods "
"<https://www.nexusmods.com/stardewvalley/?>`__."
msgstr ""

#: ../../manual/export-tbin.rst:12
msgid ""
"Tiled ships with a plugin that enables direct editing of Stardew Valley "
"maps (and any other maps using the tBIN format). This plugin needs to be "
"enabled in *Edit > Preferences > Plugins*. It is not enabled by default "
"because it won't store everything (most notably it doesn't support object"
" layers in general, nor external tilesets), so you need to know what you "
"are doing."
msgstr ""

#: ../../manual/export-tbin.rst:21
msgid ""
"The tBIN format supports setting custom properties on the tiles of a tile"
" layer. Since Tiled does not support this directly, \"TileData\" objects "
"are created that match the location of the tile, on which such properties"
" are then stored."
msgstr ""

#: ../../manual/export-tbin.rst:29
msgid "One of the farm maps from Stardew Valley opened in Tiled"
msgstr ""

#: ../../manual/export-tbin.rst:29
msgid "One of the farm maps from Stardew Valley opened in Tiled."
msgstr ""

#: ../../manual/export-tscn.rst:8
msgid "Godot 4"
msgstr ""

#: ../../manual/export-tscn.rst:10
msgid ""
"Godot 4 revamped its TileMap node, and Tiled ships with a plugin to "
"export maps in this format. For exporting to Godot 3, see the `Tiled To "
"Godot Export <https://github.com/mapeditor/tiled-to-godot-export>`__ "
"extension."
msgstr ""

#: ../../manual/export-tscn.rst:14
msgid ""
"The Godot 4 exporter assumes that the generated ``.tscn`` files and the "
"tileset artwork all share the same file hierarchy. The exporter will "
"search for a common parent folder containing a ``.godot`` project file "
"and use that folder as the ``res://`` root for the project. The exporter "
"will search at least two parent folders for a ``.godot`` file."
msgstr ""

#: ../../manual/export-tscn.rst:23 ../../manual/export-yy.rst:338
msgid "All layer types support the following custom properties:"
msgstr ""

#: ../../manual/export-tscn.rst:25
msgid "bool ``ySortEnabled`` (default: false)"
msgstr ""

#: ../../manual/export-tscn.rst:26
msgid "int ``zIndex`` (default: 0)"
msgstr ""

#: ../../manual/export-tscn.rst:27 ../../manual/export-yy.rst:343
msgid "bool ``noExport`` (default: false)"
msgstr ""

#: ../../manual/export-tscn.rst:28
msgid "bool ``tilesetOnly`` (default: blank)"
msgstr ""

#: ../../manual/export-tscn.rst:30
msgid ""
"The ``ySortEnabled`` property can be used to change the drawing order to "
"allow sprites to be drawn behind tiles based on their Y coordinate."
msgstr ""

#: ../../manual/export-tscn.rst:33
msgid ""
"The ``zIndex`` property can be used to assign a specific depth value to a"
" layer."
msgstr ""

#: ../../manual/export-tscn.rst:36
msgid ""
"The ``noExport`` property can be used to suppress exporting of an entire "
"layer, including any child layers. This is useful if you use a layer for "
"annotations (like adding background image or text objects) that you do "
"not want exported to Godot. Note that any views defined on this layer "
"will then also get ignored."
msgstr ""

#: ../../manual/export-tscn.rst:42
msgid ""
"The ``tilesetOnly`` property can be used if you want to export all the "
"tilesets used in this layer, without actually exporting the layer itself."
" By default, the exporter will only export tilesets which are actually "
"used in the map, so this property allows you to export tilesets that "
"normally would otherwise get skipped. This is most useful in combination "
"with the :ref:`tilesetResPath property <godot4-map-properties>`."
msgstr ""

#: ../../manual/export-tscn.rst:52
msgid "Tilesets support the following property:"
msgstr ""

#: ../../manual/export-tscn.rst:54
msgid "bool ``exportAlternates`` (default: false)"
msgstr ""

#: ../../manual/export-tscn.rst:56
msgid ""
"The ``exportAlternates`` property is necessary when using flipped or "
"rotated tiles. This will create 7 alternate tiles for each tile, allowing"
" all flipped and rotation combinations."
msgstr ""

#: ../../manual/export-tscn.rst:65
msgid "Maps support the following custom property:"
msgstr ""

#: ../../manual/export-tscn.rst:67
msgid "string ``tilesetResPath`` (default: blank)"
msgstr ""

#: ../../manual/export-tscn.rst:69
msgid ""
"The ``tilesetResPath`` property saves the tileset to an external .tres "
"file, allowing it to be shared between multiple maps more efficiently. "
"This path must be in the form of 'res://<path>.tres'. The tileset file "
"will be overwritten every time the map is exported."
msgstr ""

#: ../../manual/export-tscn.rst:76
msgid ""
"Only tilesets that are used in the current map will be exported. You must"
" ensure that every map which uses the same ``.tres`` file also uses *all*"
" of the same tilesets. You may wish to create a layer with the "
"``tilesetOnly`` property to ensure the correct tilesets are exported."
msgstr ""

#: ../../manual/export-tscn.rst:82
msgid "Limitations"
msgstr ""

#: ../../manual/export-tscn.rst:84
msgid ""
"The Godot 4 exporter does not currently support collection of images "
"tilesets, object layers, or image layers."
msgstr ""

#: ../../manual/export-tscn.rst:86
msgid ""
"Godot's hexagonal maps only support :ref:`hex side lengths <tmx-map>` "
"that are exactly half the tile height. So if, for example, your tile "
"height is 16, then your hex side length must be 8."
msgstr ""

#: ../../manual/export-tscn.rst:89
msgid "Godot's hexagonal maps do not support 120° tile rotations."
msgstr ""

#: ../../manual/export-tscn.rst:90
msgid ""
"Animations frames must strictly go from left-to-right and top-to-bottom, "
"without skipping any frames, and animation frames may not be used for "
"anything else."
msgstr ""

#: ../../manual/export-yy.rst:8
msgid "GameMaker Studio 2.3"
msgstr ""

#: ../../manual/export-yy.rst:10
msgid ""
"GameMaker Studio 2.3 uses a JSON-based format to store its rooms, and "
"Tiled ships with a plugin to export maps in this format."
msgstr ""

#: ../../manual/export-yy.rst:13
msgid ""
"This plugin will do its best to export the map as accurately as possible,"
" mapping Tiled's various features to the matching GameMaker features. "
":ref:`Tile layers <yy-tile-layers>` get exported as tile layers when "
"possible, but will fall back to asset layers if necessary. :ref:`Objects "
"<yy-object-layers>` can get exported as instances, but also as tile "
"graphics, sprite graphics or views. :ref:`Image layers <yy-image-layers>`"
" get exported as background layers."
msgstr ""

#: ../../manual/export-yy.rst:23
msgid ""
"Since GameMaker's \"Add Existing\" action doesn't work at this point in "
"time (2.3.1) the easiest way to export a Tiled map to your GameMaker "
"Project is to overwrite an already existing ``room.yy`` file."
msgstr ""

#: ../../manual/export-yy.rst:27
msgid ""
"Starting with Tiled 1.8, it is no longer necessary to deactivate the "
"\"Use safe writing of files\" option, since the GameMaker export now "
"ignores it to avoid reload issues in GameMaker."
msgstr ""

#: ../../manual/export-yy.rst:34
msgid "References to Existing Assets"
msgstr ""

#: ../../manual/export-yy.rst:36
msgid ""
"Since Tiled currently only exports a map as a GameMaker room, any "
"sprites, tilesets and objects used by the map are expected to be already "
"available in the GameMaker project."
msgstr ""

#: ../../manual/export-yy.rst:40
msgid ""
"For sprites, the sprite name is derived by looking for a ``*.yy`` file in"
" the directory of the image file and up to two parent directories. If "
"such a file is found, it is assumed to be the associated meta file and "
"its name without the file extension is used. If no ``*.yy`` file can be "
"found, the name of the image file without its file extension is used."
msgstr ""

#: ../../manual/export-yy.rst:47
msgid ""
"If necessary, the sprite name can be explicitly specified using a custom "
"``sprite`` property (supported on tilesets, tiles from image collection "
"tilesets and image layers)."
msgstr ""

#: ../../manual/export-yy.rst:51
msgid ""
"For tilesets, the tileset name entered in Tiled must match the name of "
"the tileset asset in GameMaker."
msgstr ""

#: ../../manual/export-yy.rst:54
msgid ""
"For object instances, the name of the object should be set in the *Type* "
"field."
msgstr ""

#: ../../manual/export-yy.rst:58
msgid "Exporting a Tiled Map"
msgstr ""

#: ../../manual/export-yy.rst:60
msgid ""
"A Tiled map contains tile layers, object layers, image layers and group "
"layers. All these layer types are supported."
msgstr ""

#: ../../manual/export-yy.rst:66 ../../manual/layers.rst:33
msgid "Tile Layers"
msgstr ""

#: ../../manual/export-yy.rst:68
msgid "When possible, a tile layer will get exported as a tile layer."
msgstr ""

#: ../../manual/export-yy.rst:70
msgid ""
"When several tilesets are used on the same layer, the layer gets exported"
" as a group with a child tile layer for each tileset, since GameMaker "
"supports only one tileset per tile layer."
msgstr ""

#: ../../manual/export-yy.rst:74
msgid ""
"When the tile size of a tileset doesn't match the grid size of the map, "
"or when the map orientation is not orthogonal (for example, isometric or "
"hexagonal), the tiles will get exported to an asset layer instead. This "
"layer type is more flexible, though for tile graphics it does not support"
" rotation."
msgstr ""

#: ../../manual/export-yy.rst:79
msgid ""
"When the layer includes tiles from a collection of images tileset, these "
"will get exported to an asset layer as sprite graphics."
msgstr ""

#: ../../manual/export-yy.rst:85 ../../manual/layers.rst:55
msgid "Object Layers"
msgstr ""

#: ../../manual/export-yy.rst:87
msgid ""
"Object layers in Tiled are very flexible since objects take so many "
"forms. As such the export looks at each object to see how it should be "
"exported to the GameMaker room."
msgstr ""

#: ../../manual/export-yy.rst:91
msgid ""
"When an object has a *Type*, it is exported as an instance on an instance"
" layer, where the type refers to the name of the object to instantiate. "
"Except, when the type is \"view\", the object is interpreted as :ref:`a "
"view <yy-views>`."
msgstr ""

#: ../../manual/export-yy.rst:96
msgid ""
"When an object has no Type, but it is a tile object, then it is exported "
"as either a tile graphic or a sprite graphic, depending on whether the "
"tile is from a tileset image or a collection of images."
msgstr ""

#: ../../manual/export-yy.rst:100
msgid ""
"The following custom properties can be set on objects to affect the "
"exported instance or sprite asset:"
msgstr ""

#: ../../manual/export-yy.rst:103
msgid "color ``colour`` (default: based on layer tint color)"
msgstr ""

#: ../../manual/export-yy.rst:106
msgid "bool ``inheritItemSettings`` (default: false)"
msgstr ""

#: ../../manual/export-yy.rst:109
msgid "bool ``ignore`` (default: whether the object is hidden)"
msgstr ""

#: ../../manual/export-yy.rst:116
msgid ""
"The ``originX`` and ``originY`` properties can be used to tell Tiled "
"about the origin of the sprite defined in GameMaker, as an offset from "
"the top-left. This origin is taken into account when determining the "
"position of the exported instance."
msgstr ""

#: ../../manual/export-yy.rst:123
msgid ""
"Of course setting the type and/or the above properties manually for each "
"instance will get old fast. Instead you can use tile objects with the "
"type set on the tile or use :doc:`object templates <using-templates>`."
msgstr ""

#: ../../manual/export-yy.rst:130
msgid ""
"The following additional custom properties can be set on objects that are"
" exported as object instances:"
msgstr ""

#: ../../manual/export-yy.rst:133
msgid "bool ``hasCreationCode`` (default: false)"
msgstr ""

#: ../../manual/export-yy.rst:134
msgid "int ``imageIndex`` (default: 0)"
msgstr ""

#: ../../manual/export-yy.rst:135
msgid "float ``imageSpeed`` (default: 1.0)"
msgstr ""

#: ../../manual/export-yy.rst:136
msgid "int ``creationOrder`` (default: 0)"
msgstr ""

#: ../../manual/export-yy.rst:138
msgid ""
"The ``hasCreationCode`` property can be set to true. Refers to "
"\"InstanceCreationCode_[inst_name].gml\" in the room folder which you can"
" create inside GameMaker itself or with an external text editor."
msgstr ""

#: ../../manual/export-yy.rst:142
msgid ""
"By default the instance creation order is derived from the object "
"positions inside the layer and object hierarchy from Tiled. This can be "
"changed by using the custom property ``creationOrder``. Objects with "
"lower values will be created before objects with higher values (so "
"objects with negative values will be created before objects without a "
"``creationOrder`` property)."
msgstr ""

#: ../../manual/export-yy.rst:148
msgid ""
"Additional custom properties that are not documented here can be used to "
"override the variable definitions that got set up inside GameMaker for "
"the object."
msgstr ""

#: ../../manual/export-yy.rst:154
msgid ""
"As of now only variable definitions of the object itself can be "
"overridden. Overriding variable definitions of parent objects is not "
"supported. As a workaround you can use the creation code to override "
"variables of a parent object."
msgstr ""

#: ../../manual/export-yy.rst:160
msgid "Tile Graphics"
msgstr ""

#: ../../manual/export-yy.rst:162
msgid ""
"For objects exported as tile graphics (aka GMS 1.4 tiles), it should be "
"noted that rotation is not supported on asset layers."
msgstr ""

#: ../../manual/export-yy.rst:165
msgid ""
"When 90-degree rotation with grid-alignment suffices, these tiles should "
"be placed on tile layers instead. When free placement with rotation is "
"required, a collection of images tileset should be used, so that the "
"objects can be exported as sprite graphics instead."
msgstr ""

#: ../../manual/export-yy.rst:171
msgid "Sprite Graphics"
msgstr ""

#: ../../manual/export-yy.rst:173
msgid ""
"The following additional custom properties can be set on objects that are"
" exported as sprite graphics:"
msgstr ""

#: ../../manual/export-yy.rst:176
msgid "float ``headPosition`` (default: 0.0)"
msgstr ""

#: ../../manual/export-yy.rst:177
msgid "float ``animationSpeed`` (default: 1.0)"
msgstr ""

#: ../../manual/export-yy.rst:182 ../../manual/layers.rst:96
msgid "Image Layers"
msgstr ""

#: ../../manual/export-yy.rst:184
msgid "Image layers are exported as background layers."
msgstr ""

#: ../../manual/export-yy.rst:186
msgid ""
"The file name of the source image is assumed to be the same as the name "
"of the corresponding sprite asset. Alternatively the custom property "
"``sprite`` can be used to explicitly set the name of the sprite asset."
msgstr ""

#: ../../manual/export-yy.rst:190
msgid ""
"While not supported visually in Tiled, it is possible to create an image "
"layer without an image but with only a tint color. Such layers will get "
"exported as a background layer with just the color set."
msgstr ""

#: ../../manual/export-yy.rst:194
msgid ""
"The following custom properties can be set on image layers to affect the "
"exported background layers:"
msgstr ""

#: ../../manual/export-yy.rst:197 ../../manual/export-yy.rst:277
msgid "string ``sprite`` (default: based on image filename)"
msgstr ""

#: ../../manual/export-yy.rst:198
msgid "bool ``htiled`` (default: value of Repeat X property)"
msgstr ""

#: ../../manual/export-yy.rst:199
msgid "bool ``vtiled`` (default: value of Repeat Y property)"
msgstr ""

#: ../../manual/export-yy.rst:200
msgid "bool ``stretch`` (default: false)"
msgstr ""

#: ../../manual/export-yy.rst:201
msgid "float ``hspeed`` (default: 0.0)"
msgstr ""

#: ../../manual/export-yy.rst:202
msgid "float ``vspeed`` (default: 0.0)"
msgstr ""

#: ../../manual/export-yy.rst:203
msgid "float ``animationFPS`` (default: 15.0)"
msgstr ""

#: ../../manual/export-yy.rst:204
msgid "int ``animationSpeedtype`` (default: 0)"
msgstr ""

#: ../../manual/export-yy.rst:206
msgid ""
"Even though the custom properties such as ``hspeed`` and ``vspeed`` have "
"no visual effect inside Tiled you will see the effect in the exported "
"room inside GameMaker."
msgstr ""

#: ../../manual/export-yy.rst:211
msgid "Special Cases and Custom Properties"
msgstr ""

#: ../../manual/export-yy.rst:214
msgid "Rooms"
msgstr ""

#: ../../manual/export-yy.rst:216
msgid ""
"If a ``Background Color`` is set in the map properties of Tiled an extra "
"background layer with the according color is exported as the bottommost "
"layer."
msgstr ""

#: ../../manual/export-yy.rst:219
msgid "The following custom properties can be set under *Map -> Map Properties*."
msgstr ""

#: ../../manual/export-yy.rst:224
msgid "string ``parent`` (default: \"Rooms\")"
msgstr ""

#: ../../manual/export-yy.rst:225
msgid "bool ``inheritLayers`` (default: false)"
msgstr ""

#: ../../manual/export-yy.rst:226
msgid "string ``tags`` (default: \"\")"
msgstr ""

#: ../../manual/export-yy.rst:228
msgid ""
"The ``parent`` property is used to define the parent folder inside "
"GameMakers asset browser."
msgstr ""

#: ../../manual/export-yy.rst:231
msgid ""
"The ``tags`` property is used to assign tags to the room. Multiple tags "
"can be separated by commas."
msgstr ""

#: ../../manual/export-yy.rst:235
msgid "Room Settings"
msgstr ""

#: ../../manual/export-yy.rst:237
msgid "bool ``inheritRoomSettings`` (default: false)"
msgstr ""

#: ../../manual/export-yy.rst:240
msgid "bool ``inheritCode`` (default: false)"
msgstr ""

#: ../../manual/export-yy.rst:241
msgid "string ``creationCodeFile`` (default: \"\")"
msgstr ""

#: ../../manual/export-yy.rst:243
msgid ""
"The ``creationCodeFile`` property is used to define the path of an "
"existing creation code file, e.g.: "
"\"${project_dir}/rooms/room_name/RoomCreationCode.gml\"."
msgstr ""

#: ../../manual/export-yy.rst:247
msgid "Viewports and Cameras"
msgstr ""

#: ../../manual/export-yy.rst:249 ../../manual/export-yy.rst:303
msgid "**General**"
msgstr ""

#: ../../manual/export-yy.rst:251
msgid "bool ``inheritViewSettings`` (default: false)"
msgstr ""

#: ../../manual/export-yy.rst:252
msgid "bool ``enableViews`` (default: true when any \"view\" objects were found)"
msgstr ""

#: ../../manual/export-yy.rst:255
msgid "**Viewport 0 - Viewport 7**"
msgstr ""

#: ../../manual/export-yy.rst:257
msgid ""
"You can configure up to 8 viewports by using view objects (see :ref:`yy-"
"views`)."
msgstr ""

#: ../../manual/export-yy.rst:263
msgid "bool ``inheritPhysicsSettings`` (default: false)"
msgstr ""

#: ../../manual/export-yy.rst:270
msgid "Sprite References"
msgstr ""

#: ../../manual/export-yy.rst:272
msgid ""
"As :ref:`mentioned above <yy-asset-references>`, references to sprites "
"generally derive the name of the sprite asset from the image file name. "
"The following property can be set on tilesets, tiles from image "
"collection tilesets and image layers to explicitly specify the sprite "
"name:"
msgstr ""

#: ../../manual/export-yy.rst:282
msgid "Paths"
msgstr ""

#: ../../manual/export-yy.rst:286
msgid ""
"Paths are not supported yet, but it's planned to export polyline and "
"polygon objects as paths on path layers in a future update."
msgstr ""

#: ../../manual/export-yy.rst:294
msgid ""
"Views can be defined using :ref:`rectangle objects <insert-rectangle-"
"tool>` where the *Type* has been set to \"view\". The position and size "
"will be snapped to pixels. Whether the view is visible when the room "
"starts depends on whether the object is visible. The use of views is "
"automatically enabled when any views are defined."
msgstr ""

#: ../../manual/export-yy.rst:305
msgid "bool ``inherit`` (default: false)"
msgstr ""

#: ../../manual/export-yy.rst:307
msgid "**Camera Properties**"
msgstr ""

#: ../../manual/export-yy.rst:309
msgid ""
"The Camera Properties are automatically derived from the position and "
"size of the view object."
msgstr ""

#: ../../manual/export-yy.rst:312
msgid "**Viewport Properties**"
msgstr ""

#: ../../manual/export-yy.rst:316
msgid "int ``wport`` (default: 1366)"
msgstr ""

#: ../../manual/export-yy.rst:321
msgid "string ``objectId``"
msgstr ""

#: ../../manual/export-yy.rst:336
msgid "Layers"
msgstr ""

#: ../../manual/export-yy.rst:340
msgid "int ``depth`` (default: auto-assigned, like in GameMaker)"
msgstr ""

#: ../../manual/export-yy.rst:341
msgid "bool ``visible`` (default: derived from layer)"
msgstr ""

#: ../../manual/export-yy.rst:342
msgid "bool ``hierarchyFrozen`` (default: layer locked state)"
msgstr ""

#: ../../manual/export-yy.rst:345
msgid ""
"The ``depth`` property can be used to assign a specific depth value to a "
"layer."
msgstr ""

#: ../../manual/export-yy.rst:348
msgid ""
"The ``visible`` property can be used to override the \"Visible\" state of"
" the layer if needed."
msgstr ""

#: ../../manual/export-yy.rst:351
msgid ""
"The ``hierarchyFrozen`` property can be used to override the \"Locked\" "
"state of the layer if needed."
msgstr ""

#: ../../manual/export-yy.rst:354
msgid ""
"The ``noExport`` property can be used to suppress exporting of an entire "
"layer, including any child layers. This is useful if you use a layer for "
"annotations (like adding background image or text objects) that you do "
"not want exported to GameMaker. Note that any views defined on this layer"
" will then also get ignored."
msgstr ""

#: ../../manual/introduction.rst:2
msgid "Introduction"
msgstr ""

#: ../../manual/introduction.rst:5
msgid "About Tiled"
msgstr ""

#: ../../manual/introduction.rst:7
msgid ""
"**Tiled is a 2D level editor that helps you develop the content of your "
"game. Its primary feature is to edit tile maps of various forms, but it "
"also supports free image placement as well as powerful ways to annotate "
"your level with extra information used by the game. Tiled focuses on "
"general flexibility while trying to stay intuitive.**"
msgstr ""

#: ../../manual/introduction.rst:13
msgid ""
"In terms of tile maps, it supports straight rectangular tile layers, but "
"also projected isometric, staggered isometric and staggered hexagonal "
"layers. A tileset can be either a single image containing many tiles, or "
"it can be a collection of individual images. In order to support certain "
"depth faking techniques, tiles and layers can be offset by a custom "
"distance and their rendering order can be configured."
msgstr ""

#: ../../manual/introduction.rst:20
msgid ""
"The primary tool for editing :ref:`tile layers <tile-layer-introduction>`"
" is a stamp brush that allows efficient painting and copying of tile "
"areas. It also supports drawing lines and circles. In addition, there are"
" several selection tools and a tool that does :doc:`automatic terrain "
"transitions <terrain>`. Finally, it can apply changes based on :doc"
":`pattern-matching <automapping>` to automate parts of your work."
msgstr ""

#: ../../manual/introduction.rst:27
msgid ""
"Tiled also supports :ref:`object layers <object-layer-introduction>`, "
"which traditionally were only for annotating your map with information "
"but more recently they can also be used to place images. You can add "
"rectangle, point, ellipse, polygon, polyline and tile objects. Object "
"placement is not limited to the tile grid and objects can also be scaled "
"or rotated. Object layers offer a lot of flexibility to add almost any "
"information to your level that your game needs."
msgstr ""

#: ../../manual/introduction.rst:35
msgid ""
"Other things worth mentioning are the support for adding custom map or "
"tileset formats through plugins, :doc:`extending Tiled "
"</reference/scripting>` with JavaScript, the tile stamp memory, "
":ref:`tile animation support <tile-animation-editor>` and the :ref:`tile "
"collision editor <tile-collision-editor>`."
msgstr ""

#: ../../manual/introduction.rst:44
msgid "Getting Started"
msgstr ""

#: ../../manual/introduction.rst:51
msgid "Setting up a New Project"
msgstr ""

#: ../../manual/introduction.rst:53
msgid ""
"When launching Tiled for the first time, we are greeted with the "
"following window:"
msgstr ""

#: ../../manual/introduction.rst:59
msgid "Tiled Window"
msgstr ""

#: ../../manual/introduction.rst:61
msgid ""
"To make all our assets readily accessible from the :guilabel:`Project` "
"view, as well as to be able to quickly switch between multiple projects, "
"it is recommended to first set up a :doc:`Tiled project <projects>`. This"
" is however an entirely optional step that can be skipped when desired."
msgstr ""

#: ../../manual/introduction.rst:66
msgid ""
"Choose *File -> New -> New Project...* to create a new project file. It "
"is recommended to save this file in the root of your project. The "
"directory in which you store the project will be automatically added, so "
"that its files are visible in the Project view."
msgstr ""

#: ../../manual/introduction.rst:71
msgid ""
"When necessary, you can add additional folders to the project or replace "
"the one added by default. For example, you could choose to add several "
"top-level folders like \"tilesets\", \"maps\", \"templates\", etc. Right-"
"click in the Project view and choose *Add Folder to Project...* to add "
"the relevant folders."
msgstr ""

#: ../../manual/introduction.rst:79
msgid ""
"You can press ``Ctrl+Shift+P`` to open the action search widget, which "
"can provide a faster way to get to actions than looking for them in the "
"menus!"
msgstr ""

#: ../../manual/introduction.rst:84
msgid "Creating a New Map"
msgstr ""

#: ../../manual/introduction.rst:86
msgid ""
"To create a new map, choose *File -> New -> New Map…* (``Ctrl+N``). The "
"following dialog will pop up:"
msgstr ""

#: ../../manual/introduction.rst:93
msgid "New Map"
msgstr ""

#: ../../manual/introduction.rst:95
msgid ""
"Here, we choose the initial map size, tile size, orientation, tile layer "
"format, tile render order (only supported for *Orthogonal* maps) and "
"whether the map is :doc:`infinite <using-infinite-maps>` or not. All of "
"these things can be changed later as needed, so it's not important to get"
" it all right the first time."
msgstr ""

#: ../../manual/introduction.rst:103
msgid ""
"If you set up a project, make sure to save the map to a folder that you "
"had added to your project. This will make it quickly accessible using "
"*File -> Open File in Project* (``Ctrl+P``)."
msgstr ""

#: ../../manual/introduction.rst:107
msgid ""
"After saving our map, we'll see the tile grid and an initial tile layer "
"will be added to the map. However, before we can start using any tiles we"
" need to add a tileset. Choose *File -> New -> New Tileset…* to open the "
"New Tileset dialog:"
msgstr ""

#: ../../manual/introduction.rst:116
msgid "New Tileset"
msgstr ""

#: ../../manual/introduction.rst:118
msgid ""
"Click the :guilabel:`Browse…` button and select the "
":file:`tmw_desert_spacing.png` tileset from the examples shipping with "
"Tiled (or use one of your own if you wish). This example tileset uses a "
"tile size of 32x32. It also has a one pixel *margin* around the tiles and"
" a one pixel *spacing* in between the tiles (this is pretty rare "
"actually, usually you should leave these values on 0)."
msgstr ""

#: ../../manual/introduction.rst:127
msgid ""
"We leave the :guilabel:`Embed in map` option disabled. This is "
"recommended, since it will allow the tileset to be used by multiple maps "
"without setting up its parameters again. It will also be good to store "
"the tileset in its own file if you later add tile properties, terrain "
"definitions, collision shapes, etc., since that information is then "
"shared between all your maps."
msgstr ""

#: ../../manual/introduction.rst:134
msgid "After saving the tileset, Tiled should look as follows:"
msgstr ""

#: ../../manual/introduction.rst:139
msgid "Tileset Created"
msgstr ""

#: ../../manual/introduction.rst:141
msgid ""
"Since we don't want to do anything else with the tileset for now, just "
"switch back to the map file:"
msgstr ""

#: ../../manual/introduction.rst:147
msgid "Tileset Usable on the Map"
msgstr ""

#: ../../manual/introduction.rst:149
msgid ""
"We're ready to select some tiles and start painting! But first, let's "
"have a quick look at the :doc:`various layer types <layers>` supported by"
" Tiled."
msgstr ""

#: ../../manual/introduction.rst:155
msgid ""
"Much of the manual still needs to be written. Fortunately, there is a "
"very nice `Tiled Map Editor Tutorial Series`_ on GamesFromScratch.com. In"
" addition, the support for Tiled in various :doc:`engines and frameworks "
"</reference/support-for-tmx-maps>` often comes with some usage "
"information."
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:2
msgid "Keyboard Shortcuts"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:6
msgid ""
"Most of the below shortcuts can be changed in the :ref:`Preferences "
"<keyboard-options>`."
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:9
msgid "On macOS, replace ``Ctrl`` with the ``Command`` key."
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:14
msgid "``Ctrl + N`` - Create a new map"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:15
msgid "``Ctrl + O`` - Open any file or project"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:16
msgid "``Ctrl + P`` - Open a file in the current project"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:17
msgid "``Ctrl + Shift + P`` - Search for available actions"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:18
msgid "``Ctrl + Shift + T`` - Reopen a recently closed file"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:19
msgid "``Ctrl + S`` - Save current document"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:20
msgid "``Ctrl + Alt + S`` - Save current document to another file"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:21
msgid "``Ctrl + Shift + S`` - Save all documents"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:22
msgid "``Ctrl + E`` - Export current document"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:23
msgid "``Ctrl + Shift + E`` - Export current document to another file"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:24
msgid "``Ctrl + R`` - Reload current document"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:25
msgid "``Ctrl + W`` - Close current document"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:26
msgid "``Ctrl + Shift + W`` - Close all documents"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:27
msgid "``Ctrl + Q`` - Quit Tiled"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:28
msgid "``Ctrl + MouseWheel`` - Zoom in/out on tileset and map"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:29
msgid "``Ctrl + Plus/Minus`` - Zoom in/out on map"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:30
msgid "``Ctrl + 0`` - Reset zoom on map"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:31
msgid "``Ctrl + /`` - Adjust zoom to fit map in view"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:32
msgid "``Ctrl + Object Move`` - Toggles \"Snap to Grid\" temporarily"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:33
msgid "``Ctrl + Object Resize`` - Keep aspect ratio"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:34
msgid "``Alt + Object Resize`` - Toggles \"Snap to Grid\" temporarily"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:35
msgid "``Middle Click`` or ``Space Bar`` - Hold to pan the map view"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:36
msgid "``Ctrl + X`` - Cut (tiles, objects or properties)"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:37
msgid "``Ctrl + C`` - Copy (tiles, objects or properties)"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:38
msgid "``Ctrl + V`` - Paste (tiles, objects or properties)"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:39
msgid "``Del`` - Delete (tiles, objects, properties or layers)"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:40
msgid "``Ctrl + G`` - Toggle displaying of the tile grid"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:41
msgid "``H`` - Toggle highlighting of the current layer"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:42
msgid "``Ctrl + M`` - Invokes :doc:`automapping`"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:43
msgid ""
"``Alt + C`` - Copy current position of mouse cursor to clipboard (in tile"
" coordinates)"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:45
msgid "``Ctrl + D`` - Duplicate selected objects"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:46
msgid ""
"``Ctrl + J`` - Create a new layer and copy the currently selected objects"
" or tiles to it"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:47
msgid ""
"``Ctrl + Shift + J`` - Create a new layer and move currently selected "
"objects or tiles to it"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:48
msgid "``Ctrl + Shift + D`` - Duplicate selected layers"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:49
msgid "``F2`` - Rename (if applicable in context)"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:50
msgid "``Tab`` - Hide docks and tool bars"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:51
msgid "``Ctrl + PgUp`` - Select previous layer (above current layer)"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:52
msgid "``Ctrl + PgDown`` - Select next layer (below current layer)"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:53
msgid "``Ctrl + Shift + Up`` - Move selected layers up"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:54
msgid "``Ctrl + Shift + Down`` - Move selected layers down"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:55
msgid "``Ctrl + H`` - Show/Hide selected layers"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:56
msgid "``Ctrl + L`` - Lock/Unlock selected layers"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:57
msgid ""
"``Ctrl + Shift + H`` - Show/Hide all other layers (only active layer "
"visible / all layers visible)"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:59
msgid "``Ctrl + Shift + L`` - Lock/Unlock all other layers"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:60
msgid "``Ctrl + Tab`` / ``Alt + Left`` - Switch to left document"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:61
msgid "``Ctrl + Shift + Tab`` / ``Alt + Right`` - Switch to right document"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:62
msgid "``]`` - Select next tileset"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:63
msgid "``[`` - Select previous tileset"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:64
msgid ""
"``Ctrl + T`` - Force-reload all tilesets used by the current map (mainly "
"useful when not using the automatic reloading)"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:66
msgid "``Ctrl + Shift + A`` - Clear any object and tile selection"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:69
msgid "When a tile layer is selected"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:71
msgid ""
"``Right Click on Tile`` - Captures the tile under the mouse (drag to "
"capture larger areas)."
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:73
msgid ""
"``Ctrl + Right Click on Tile`` - Selects the layer containing the top-"
"most tile under the mouse."
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:74
msgid "``D`` - Toggle Random Mode"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:75
msgid "``B`` - Activate :ref:`stamp-tool`"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:77
msgid ""
"``Shift + Click`` - Line mode, places tiles on a line between two clicked"
" locations"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:79
msgid ""
"``Ctrl + Shift + Click`` - Circle mode, places tiles around the clicked "
"center"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:82
msgid "``T`` - Activate :ref:`terrain-tool`"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:83
msgid "``F`` - Activate :ref:`bucket-fill-tool`"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:84
msgid "``P`` - Activate :ref:`shape-fill-tool`"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:85
msgid "``E`` - Activate :ref:`eraser-tool`"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:86
msgid "``R`` - Activate Rectangular Select"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:87
msgid "``W`` - Activate Magic Wand"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:88
msgid "``S`` - Activate Select Same Tile"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:92
msgid "``1-9`` - Recall a previously stored tile stamp (similar to ``Ctrl + V``)"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:93
msgid "``Ctrl + A`` - Select the whole layer"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:95
msgid "Changing the active stamp:"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:97
msgid "``X`` - Flip active stamp horizontally"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:98
msgid "``Y`` - Flip active stamp vertically"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:99
msgid "``Z`` - Rotate active stamp clockwise"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:100
msgid "``Shift + Z`` - Rotate active stamp counterclockwise"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:104
msgid "When an object layer is selected"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:106
msgid "``S`` - Activate :ref:`select-objects-tool`"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:108
msgid "``PgUp`` - Raise selected objects (with Manual object drawing order)"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:110
msgid "``PgDown`` - Lower selected objects (with Manual object drawing order)"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:112
msgid "``Home`` - Move selected objects to Top (with Manual object drawing order)"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:114
msgid ""
"``End`` - Move selected objects to Bottom (with Manual object drawing "
"order)"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:117
msgid "``O`` - Activate :ref:`edit-polygons-tool`"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:118
msgid "``R`` - Activate :ref:`insert-rectangle-tool`"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:119
msgid "``I`` - Activate :ref:`insert-point-tool`"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:120
msgid "``C`` - Activate :ref:`insert-ellipse-tool`"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:121
msgid "``P`` - Activate :ref:`insert-polygon-tool`"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:123
msgid "``Enter`` - Finish creating object"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:124
msgid "``Escape`` - Cancel creating object"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:126
msgid "``T`` - Activate :ref:`insert-tile-tool`"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:127
msgid "``V`` - Activate :ref:`insert-template-tool` (since Tiled 1.1)"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:128
msgid "``E`` - Activate :ref:`insert-text-tool`"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:129
msgid "``Ctrl + A`` - Select all objects on the selected layers"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:132
msgid "In the Properties dialog"
msgstr ""

#: ../../manual/keyboard-shortcuts.rst:134
msgid "``Backspace`` - Deletes a property"
msgstr ""

#: ../../manual/layers.rst:2
msgid "Working with Layers"
msgstr ""

#: ../../manual/layers.rst:4
msgid ""
"A Tiled map supports various sorts of content, and this content is "
"organized into various different layers. The most common layers are the "
"`Tile Layer <#tile-layers>`__ and the `Object Layer <#object-layers>`__. "
"There is also an `Image Layer <#image-layers>`__ for including simple "
"foreground or background graphics. The order of the layers determines the"
" rendering order of your content."
msgstr ""

#: ../../manual/layers.rst:11
msgid ""
"Layers can be hidden, made only partially visible and can be locked. "
"Layers also have an offset and a :ref:`parallax scrolling factor "
"<parallax-factor>`, which can be used to position them independently of "
"each other, for example to fake depth. Finally their contents can be "
"tinted by multiplying with a custom :ref:`tint color <tint-color>`."
msgstr ""

#: ../../manual/layers.rst:20
msgid "Layers View"
msgstr ""

#: ../../manual/layers.rst:20
msgid ""
"The eye and lock icon toggle the visibility and locked state of a layer "
"respectively."
msgstr ""

#: ../../manual/layers.rst:23
msgid ""
"You use `Group Layers <#group-layers>`__ to organize the layers into a "
"hierarchy. This makes it more comfortable to work with a large amount of "
"layers."
msgstr ""

#: ../../manual/layers.rst:28
msgid "Layer Types"
msgstr ""

#: ../../manual/layers.rst:35
msgid ""
"Tile layers provide an efficient way of storing a large area filled with "
"tile data. The data is a simple array of tile references and as such no "
"additional information can be stored for each location. The only extra "
"information stored are a few flags, that allow tile graphics to be "
"flipped vertically, horizontally or anti-diagonally (to support rotation "
"in 90-degree increments)."
msgstr ""

#: ../../manual/layers.rst:42
msgid ""
"The information needed to render each tile layer is stored with the map, "
"which specifies the position and rendering order of the tiles based on "
"the orientation and various other properties."
msgstr ""

#: ../../manual/layers.rst:46
msgid ""
"Despite only being able to refer to tiles, tile layers can also be useful"
" for defining various bits of non-graphical information in your level. "
"Collision information can often be conveyed using a special tileset, and "
"any kind of object that does not need custom properties and is always "
"aligned to the grid can also be placed on a tile layer."
msgstr ""

#: ../../manual/layers.rst:57
msgid ""
"Object layers are useful because they can store many kinds of information"
" that would not fit in a tile layer. Objects can be freely positioned, "
"resized and rotated. They can also have individual custom properties. "
"There are many kinds of objects:"
msgstr ""

#: ../../manual/layers.rst:62
msgid "**Rectangle** - for marking custom rectangular areas"
msgstr ""

#: ../../manual/layers.rst:63
msgid "**Ellipse** - for marking custom ellipse or circular areas"
msgstr ""

#: ../../manual/layers.rst:64
msgid "**Point** - for marking exact locations (since Tiled 1.1)"
msgstr ""

#: ../../manual/layers.rst:65
msgid ""
"**Polygon** - for when a rectangle or ellipse doesn't cut it (often a "
"collision area)"
msgstr ""

#: ../../manual/layers.rst:67
msgid "**Polyline** - can be a path to follow or a wall to collide with"
msgstr ""

#: ../../manual/layers.rst:68
msgid "**Tile** - for freely placing, scaling and rotating your tile graphics"
msgstr ""

#: ../../manual/layers.rst:70
msgid "**Text** - for custom text or notes (since Tiled 1.0)"
msgstr ""

#: ../../manual/layers.rst:72
msgid ""
"All objects can be named, in which case their name will show up in a "
"label above them (by default only for selected objects). Objects can also"
" be given a *class*, which is useful since it can be used to customize "
"the color of their label and the available :ref:`custom properties "
"<custom-classes>` for this object. For tile objects, the class can be "
":ref:`inherited from their tile <tile-property-inheritance>`."
msgstr ""

#: ../../manual/layers.rst:79
msgid ""
"For most map types, objects are positioned in plain pixels. The only "
"exception to this are isometric maps (not isometric staggered). For "
"isometric maps, it was deemed useful to store their positions in a "
"projected coordinate space. For this, the isometric tiles are assumed to "
"represent projected squares with both sides equal to the *tile height*. "
"If you're using a different coordinate space for objects in your "
"isometric game, you'll need to convert these coordinates accordingly."
msgstr ""

#: ../../manual/layers.rst:87
msgid ""
"The object width and height is also mostly stored in pixels. For "
"isometric maps, all shape objects (rectangle, point, ellipse, polygon and"
" polyline) are projected into the same coordinate space described above. "
"This is based on the assumption that these objects are generally used to "
"mark areas on the map."
msgstr ""

#: ../../manual/layers.rst:98
msgid ""
"Image layers provide a way to quickly include a single image as "
"foreground or background of your map. They currently have limited "
"functionality and you may consider adding the image as a Tileset instead "
"and place it as a :ref:`Tile Object <insert-tile-tool>`. This way, you "
"gain the ability to freely scale and rotate the image."
msgstr ""

#: ../../manual/layers.rst:104
msgid ""
"However, image layers can be repeated along the respective axes through "
"their *Repeat X* and *Repeat Y* properties."
msgstr ""

#: ../../manual/layers.rst:107
msgid ""
"The other advantage of using an image layer is that it avoids selecting /"
" dragging the image while using the Select Objects tool. However, since "
"Tiled 1.1 this can also be achieved by locking the object layer "
"containing the tile object you'd like to avoid interacting with."
msgstr ""

#: ../../manual/layers.rst:119
msgid "Group Layers"
msgstr ""

#: ../../manual/layers.rst:121
msgid ""
"Group layers work like folders and can be used for organizing the layers "
"into a hierarchy. This is mainly useful when your map contains a large "
"amount of layers."
msgstr ""

#: ../../manual/layers.rst:125
msgid ""
"The visibility, opacity, offset, lock and :ref:`tint color <tint-color>` "
"of a group layer affects all child layers."
msgstr ""

#: ../../manual/layers.rst:128
msgid ""
"Layers can be easily dragged in and out of groups with the mouse. The "
"Raise Layer / Lower Layer actions also allow moving layers in and out of "
"groups."
msgstr ""

#: ../../manual/layers.rst:139
msgid "Parallax Scrolling Factor"
msgstr ""

#: ../../manual/layers.rst:141
msgid ""
"The parallax scrolling factor determines the amount by which the layer "
"moves in relation to the camera."
msgstr ""

#: ../../manual/layers.rst:144
msgid ""
"By default its value is 1, which means its position on the screen changes"
" at the same rate as the position of the camera (in opposite direction). "
"A lower value makes it move slower, simulating a layer that is further "
"away, whereas a higher value makes it move faster, simulating a layer "
"positioned in between the screen and the camera."
msgstr ""

#: ../../manual/layers.rst:150
msgid ""
"A value of 0 makes the layer not move at all, which can be useful to "
"include some pieces of your ingame UI or to mark its general viewport "
"boundaries."
msgstr ""

#: ../../manual/layers.rst:153
msgid ""
"Negative values make the layer move in opposite direction, though this is"
" rarely useful."
msgstr ""

#: ../../manual/layers.rst:156
msgid ""
"When the parallax scrolling factor is set on a group layer, it applies to"
" all its child layers. The effective parallax scrolling factor of a layer"
" is determined by multiplying the parallax scrolling factor by the "
"scrolling factors of all parent layers."
msgstr ""

#: ../../manual/layers.rst:162
msgid "Parallax Reference Point"
msgstr ""

#: ../../manual/layers.rst:164
msgid ""
"To match not only the scrolling speed but also the positioning of layers,"
" we need to use the same points of reference. In Tiled these are the "
"parallax origin and the center of the view. The parallax origin is stored"
" per map and defaults to (0,0), which is the top-left of the maps "
"bounding box. The distance between these two points is multiplied by the "
"parallax factor to determine the final position on the screen for each "
"layer. For example:"
msgstr ""

#: ../../manual/layers.rst:171
msgid ""
"If the parallax origin is in the center of the view, the distance is "
"(0,0) and none of the parallax factors have any effect. The layers are "
"rendered where they would have been, if parallax was disabled."
msgstr ""

#: ../../manual/layers.rst:175
msgid ""
"Now, when the map is scrolled right by 10 pixels, the distance between "
"the parallax origin and the center of the view is 10. So a layer with a "
"parallax factor of 0.7 will have moved just ``0.7 * 10 = 7`` pixels."
msgstr ""

#: ../../manual/layers.rst:179
msgid ""
"Quite often, a viewport transform is used to scroll the entire map. In "
"this case, one may need to adjust the position of each layer to take its "
"parallax factor into account. Instead of multiplying the distance with "
"the parallax factor directly, we now multiply by ``1 - parallaxFactor`` "
"to get the layer position. For example:"
msgstr ""

#: ../../manual/layers.rst:185
msgid ""
"When the camera moves right by 10 pixels, the layer will have moved 10 "
"pixels to the left (-10), so by positioning the layer at ``10 * (1 - 0.7)"
" = 3``, we're making sure that it only moves 7 pixels to the left."
msgstr ""

#: ../../manual/layers.rst:197
msgid "Tinting Layers"
msgstr ""

#: ../../manual/layers.rst:199
msgid ""
"When you set the *Tint Color* property of a layer, this affects the way "
"images are rendered. This includes tiles, tile objects and the image of "
"an :ref:`Image Layer <image-layers>`."
msgstr ""

#: ../../manual/layers.rst:203
msgid ""
"Each pixel color value is multiplied by the tint color. This way you can "
"darken or colorize your graphics in various ways without needing to set "
"up separate images for it."
msgstr ""

#: ../../manual/layers.rst:210
msgid "Tint Color Example"
msgstr ""

#: ../../manual/layers.rst:210
msgid "A gray tileset rendered in a different color for each layer."
msgstr ""

#: ../../manual/layers.rst:212
msgid ""
"The tint color can also be set on a :ref:`Group Layer <group-layers>`, in"
" which case it is inherited by all layers in the group."
msgstr ""

#: ../../manual/layers.rst:219
msgid "There are many ways in which the layers can be made more powerful:"
msgstr ""

#: ../../manual/layers.rst:221
msgid ""
"Ability to lock individual objects (`#828 "
"<https://github.com/bjorn/tiled/issues/828>`__)."
msgstr ""

#: ../../manual/layers.rst:223
msgid ""
"Moving certain map-global properties to the Tile Layer (`#149 "
"<https://github.com/bjorn/tiled/issues/149>`__). It would be useful if "
"one map could accommodate layers of different tile sizes and maybe even "
"of different orientation."
msgstr ""

#: ../../manual/objects.rst:2
msgid "Working with Objects"
msgstr ""

#: ../../manual/objects.rst:4
msgid ""
"Using objects you can add a great deal of information to your map for use"
" in your game. They can replace tedious alternatives like hardcoding "
"coordinates (like spawn points) in your source code or maintaining "
"additional data files for storing gameplay elements."
msgstr ""

#: ../../manual/objects.rst:9
msgid ""
"By using *tile objects*, objects of various types can be made easy to "
"recognize or they can be used for purely graphical purposes. In some "
"cases they can replace the use of tile layers entirely, as demonstrated "
"by the \"Sticker Knight\" example shipping with Tiled."
msgstr ""

#: ../../manual/objects.rst:14
msgid ""
"All objects can have :doc:`custom properties <custom-properties>`, which "
"can also be used to create :ref:`connections between objects <connecting-"
"objects>`."
msgstr ""

#: ../../manual/objects.rst:18
msgid ""
"To start using objects, add an :ref:`Object Layer <object-layer-"
"introduction>` to your map."
msgstr ""

#: ../../manual/objects.rst:22
msgid "Placement Tools"
msgstr ""

#: ../../manual/objects.rst:24
msgid "Each type of object has its own placement tool."
msgstr ""

#: ../../manual/objects.rst:30
msgid ""
"A preview is shown of the object you're about to place when you hover "
"over the map. While placing an object, you can press ``Escape`` or right-"
"click to cancel placement of the object. Press ``Escape`` again to switch"
" to the :ref:`select-objects-tool` tool."
msgstr ""

#: ../../manual/objects.rst:38
msgid "Insert Rectangle"
msgstr ""

#: ../../manual/objects.rst:40
msgid "Shortcut: ``R``"
msgstr ""

#: ../../manual/objects.rst:42
msgid ""
"The rectangle was the first type of object supported by Tiled, which is "
"why objects are rectangles by default in the :doc:`/reference/tmx-map-"
"format`. They are useful for marking rectangular areas and assigning "
"custom properties to them. They are also often used for specifying "
"collision boxes."
msgstr ""

#: ../../manual/objects.rst:47
msgid ""
"Place a rectangle by clicking-and-dragging in any direction. Holding "
"``Shift`` makes it square and holding ``Ctrl`` snaps its size to the tile"
" size."
msgstr ""

#: ../../manual/objects.rst:51
msgid ""
"Rectangle objects have their origin in the top-left. However, if the "
"rectangle is empty (width and height are both 0), it is rendered as a "
"small square around its position. This is mainly to keep it visible and "
"selectable."
msgstr ""

#: ../../manual/objects.rst:62
msgid "Insert Point"
msgstr ""

#: ../../manual/objects.rst:64
msgid "Shortcut: ``I``"
msgstr ""

#: ../../manual/objects.rst:66
msgid ""
"Points are the simplest objects you can place on a map. They only "
"represent a location, and cannot be resized or rotated. Simply click on "
"the map to position a point object."
msgstr ""

#: ../../manual/objects.rst:73
msgid "Insert Ellipse"
msgstr ""

#: ../../manual/objects.rst:75
msgid "Shortcut: ``C``"
msgstr ""

#: ../../manual/objects.rst:77
msgid ""
"Ellipses work the same way as `rectangles <#insert-rectangle>`__, except "
"that they are rendered as an ellipse. Useful for when your area or "
"collision shape needs to represent a circle or ellipse."
msgstr ""

#: ../../manual/objects.rst:84
msgid "Insert Polygon"
msgstr ""

#: ../../manual/objects.rst:86
msgid "Shortcut: ``P``"
msgstr ""

#: ../../manual/objects.rst:88
msgid ""
"Polygons are the most flexible way of defining the shape of an area. They"
" are most commonly used for defining collision shapes."
msgstr ""

#: ../../manual/objects.rst:91
msgid ""
"When placing a polygon, the first click determines the location of the "
"object as well as the location of the first point of the polygon. "
"Subsequent clicks are used to add additional points to the polygon. "
"Polygons needs to have at least three points. Click the first point again"
" to finish creating the polygon. You can press ``Escape`` to cancel the "
"creation of the polygon."
msgstr ""

#: ../../manual/objects.rst:98
msgid ""
"When you want to change a polygon after it has been placed, you need to "
"use the :ref:`edit-polygons-tool` tool."
msgstr ""

#: ../../manual/objects.rst:102
msgid "Polylines"
msgstr ""

#: ../../manual/objects.rst:104
msgid ""
"Polylines are created by not closing a polygon. Right-click or press "
"Enter while creating a polygon to finish it as a polyline."
msgstr ""

#: ../../manual/objects.rst:107
msgid ""
"Polylines are rendered as a line and require only two points. While they "
"can represent collision walls, they are also often used to represent "
"paths to be followed."
msgstr ""

#: ../../manual/objects.rst:115
msgid ""
"You can extend an existing polyline at either end when it is selected, by"
" clicking on the displayed dots. It is also possible to finish the "
"polyline by connecting it to either end of another existing polyline "
"object. The other polyline object needs to be selected as well, since the"
" interactive dots only show on selected polylines."
msgstr ""

#: ../../manual/objects.rst:121
msgid "The :ref:`edit-polygons-tool` tool is used to edit polylines as well."
msgstr ""

#: ../../manual/objects.rst:126
msgid "Insert Tile"
msgstr ""

#: ../../manual/objects.rst:128
msgid "Shortcut: ``T``"
msgstr ""

#: ../../manual/objects.rst:130
msgid ""
"Tiles can be inserted as objects to have full flexibility in placing, "
"scaling and rotating the tile image on your map. Like all objects, tile "
"objects can also have custom properties associated with them. This makes "
"them useful for placement of recognizable interactive objects that need "
"special information, like a chest with defined contents or an NPC with "
"defined script."
msgstr ""

#: ../../manual/objects.rst:137
msgid ""
"To place a tile object, first select the tile you want to place in the "
"*Tilesets* view. Then use the Left mouse button on the map to start "
"placing the object, move to position it and release to finish placing the"
" object."
msgstr ""

#: ../../manual/objects.rst:145
msgid ""
"To change the tile used by existing tile objects, select all the objects "
"you want to change using the :ref:`select-objects-tool` tool and then "
"right-click on a tile in the *Tilesets* view, and choose *Replace Tile of"
" Selected Objects*."
msgstr ""

#: ../../manual/objects.rst:154
msgid ""
"You can customize the alignment of tile objects using the *Object "
"Alignment* property on the *Tileset*. For compatibility reasons this "
"property is set to *Unspecified* by default, in which case tile objects "
"are bottom-left aligned in all orientations except on *Isometric* maps, "
"where they are bottom-center aligned. Setting this property to *Top Left*"
" makes the alignment of tile objects consistent with that of "
":ref:`rectangle objects <insert-rectangle-tool>`."
msgstr ""

#: ../../manual/objects.rst:169
msgid "Insert Template"
msgstr ""

#: ../../manual/objects.rst:171 ../../manual/using-templates.rst:50
msgid "Shortcut: ``V``"
msgstr ""

#: ../../manual/objects.rst:173
msgid ""
"Can be used to quickly insert multiple instances of the template selected"
" in the Templates view. See :ref:`creating-template-instances`."
msgstr ""

#: ../../manual/objects.rst:179
msgid "Insert Text"
msgstr ""

#: ../../manual/objects.rst:181
msgid "Shortcut: ``X``"
msgstr ""

#: ../../manual/objects.rst:183
msgid ""
"Text objects can be used to add arbitrary multi-line text to your maps. "
"You can configure various font properties and the wrapping / clipping "
"area, making them useful for both quick notes as well as text used in the"
" game."
msgstr ""

#: ../../manual/objects.rst:191
msgid "Select Objects"
msgstr ""

#: ../../manual/objects.rst:193
msgid "Shortcut: ``S``"
msgstr ""

#: ../../manual/objects.rst:195
msgid ""
"When you're not inserting new objects, you're generally using the Select "
"Objects tool. It packs a lot of functionality, which is outlined below."
msgstr ""

#: ../../manual/objects.rst:199
msgid "Selecting and Deselecting"
msgstr ""

#: ../../manual/objects.rst:201
msgid ""
"You can select objects by clicking them or by dragging a rectangular "
"lasso, selecting any object that intersect with its area. By holding "
"``Shift`` or ``Ctrl`` while clicking, you can add/remove single objects "
"to/from the selection. Press ``Escape`` to deselect all objects."
msgstr ""

#: ../../manual/objects.rst:206
msgid ""
"When pressing and dragging on an object, this object is selected and "
"moved. When this prevents you from starting a rectangular selection, you "
"can hold ``Shift`` to force the selection rectangle."
msgstr ""

#: ../../manual/objects.rst:214
msgid ""
"By default you interact with the top-most object. When you need to select"
" an object below another object, first select the higher object and then "
"hold ``Alt`` while clicking at the same location to select lower objects."
" You can also hold ``Alt`` while opening the context menu to get a list "
"of all objects at the clicked location, so you may directly select the "
"desired object."
msgstr ""

#: ../../manual/objects.rst:225
msgid ""
"You can quickly switch to the :ref:`edit-polygons-tool` tool by double-"
"clicking on the polygon or polyline you want to edit."
msgstr ""

#: ../../manual/objects.rst:229
msgid "Moving"
msgstr ""

#: ../../manual/objects.rst:231
msgid ""
"You can simply drag any single object, or drag already selected objects "
"by dragging any one of them. Hold ``Ctrl`` to toggle snapping to the tile"
" grid."
msgstr ""

#: ../../manual/objects.rst:235
msgid ""
"Hold ``Alt`` to force a move operation on the currently selected objects,"
" regardless of where you click on the map. This is useful when the "
"selected objects are small or covered by other objects."
msgstr ""

#: ../../manual/objects.rst:239
msgid ""
"The selected objects can also be moved with the arrow keys. By default "
"this moves the objects pixel by pixel. Hold ``Shift`` while using the "
"arrow keys to move the objects by distance of one tile."
msgstr ""

#: ../../manual/objects.rst:244
msgid "Resizing"
msgstr ""

#: ../../manual/objects.rst:246
msgid ""
"You can use the resize handles to resize one or more selected objects. "
"Hold ``Ctrl`` to keep the aspect ratio of the object and/or ``Shift`` to "
"place the resize origin in the center."
msgstr ""

#: ../../manual/objects.rst:250
msgid ""
"Note that you can only change width and height independently when "
"resizing a single object. When having multiple objects selected, the "
"aspect ratio is constant because there would be no way to make that work "
"for rotated objects without full support for transformations."
msgstr ""

#: ../../manual/objects.rst:256
msgid "Rotating"
msgstr ""

#: ../../manual/objects.rst:258
msgid ""
"To rotate, click any selected object to change the resize handles into "
"rotation handles. Before rotating, you can drag the rotation origin to "
"another position if necessary. Hold ``Shift`` to rotate in 15-degree "
"increments. Click any selected object again to go back to resize mode."
msgstr ""

#: ../../manual/objects.rst:263
msgid ""
"You can also rotate the selected objects in 90-degree steps by pressing "
"``Z`` or ``Shift + Z``."
msgstr ""

#: ../../manual/objects.rst:267
msgid "Changing Stacking Order"
msgstr ""

#: ../../manual/objects.rst:269
msgid ""
"If the active :ref:`Object Layer <object-layer-introduction>` has its "
"Drawing Order property set to Manual (the default is Top Down), you can "
"control the stacking order of the selected objects within their object "
"layer using the following keys:"
msgstr ""

#: ../../manual/objects.rst:274
msgid "``PgUp`` - Raise selected objects"
msgstr ""

#: ../../manual/objects.rst:275
msgid "``PgDown`` - Lower selected objects"
msgstr ""

#: ../../manual/objects.rst:276
msgid "``Home`` - Move selected objects to Top"
msgstr ""

#: ../../manual/objects.rst:277
msgid "``End`` - Move selected objects to Bottom"
msgstr ""

#: ../../manual/objects.rst:279
msgid ""
"You can also find these actions in the context menu. When you have "
"multiple Object Layers, the context menu also contains actions to move "
"the selected objects to another layer."
msgstr ""

#: ../../manual/objects.rst:284
msgid "Flipping Objects"
msgstr ""

#: ../../manual/objects.rst:286
msgid ""
"You can flip the selected objects horizontally by pressing ``X`` or "
"vertically by pressing ``Y``. For tile objects, this also flips their "
"images."
msgstr ""

#: ../../manual/objects.rst:293
msgid "Edit Polygons"
msgstr ""

#: ../../manual/objects.rst:295
msgid "Shortcut: ``E``"
msgstr ""

#: ../../manual/objects.rst:297
msgid ""
"Polygons and polylines have their own editing needs and as such are "
"covered by a separate tool, which allows selecting and moving around "
"their nodes. You can select and move the nodes of multiple polygons at "
"the same time. Click a segment to select the nodes at both ends. Press "
"``Escape`` to deselect all nodes, or to switch back to the :ref:`select-"
"objects-tool` tool."
msgstr ""

#: ../../manual/objects.rst:304
msgid ""
"Nodes can be deleted by selecting them and choosing \"Delete Nodes\" from"
" the context menu. The ``Delete`` key can also be used to delete the "
"selected nodes, or the selected objects if no nodes are selected."
msgstr ""

#: ../../manual/objects.rst:308
msgid ""
"When you have selected multiple consecutive nodes of the same polygon, "
"you can join them together by choosing \"Join Nodes\" from the context "
"menu. You can also split the segments in between the nodes by choosing "
"\"Split Segments\". Alternatively, you can simply double-click a segment "
"to split it at that location."
msgstr ""

#: ../../manual/objects.rst:314
msgid ""
"You can also delete a segment when two consecutive nodes are selected in "
"a polygon by choosing \"Delete Segment\" in the context menu. This will "
"convert a polygon into a polyline, or turn one polyline object in two "
"polyline objects."
msgstr ""

#: ../../manual/objects.rst:323
msgid ""
"It is possible to extend a polyline at either end, either by right-"
"clicking those nodes and choosing \"Extend Polyline\", or by switching to"
" the :ref:`insert-polygon-tool` tool and clicking on either end of an "
"already selected polyline."
msgstr ""

#: ../../manual/objects.rst:336
msgid "Connecting Objects"
msgstr ""

#: ../../manual/objects.rst:338
msgid ""
"It can often be useful to connect one object with another, like when a "
"switch should open a certain door or an NPC should follow a certain path."
" To do this, add a custom property of type ``object`` to the source "
"object. This property can then be set to the desired target object in "
"several ways."
msgstr ""

#: ../../manual/objects.rst:343
msgid ""
"Make sure the property value is selected, as seen on the following "
"screenshot:"
msgstr ""

#: ../../manual/objects.rst:348
msgid "Object Connection Property"
msgstr ""

#: ../../manual/objects.rst:350
msgid "Then, you can set the connection by either:"
msgstr ""

#: ../../manual/objects.rst:352
msgid "Typing in the ID of the target object."
msgstr ""

#: ../../manual/objects.rst:354
msgid ""
"Clicking the icon with the window and magnifier, to open a dialog where "
"you can filter all objects on the map to find your target object."
msgstr ""

#: ../../manual/objects.rst:357
msgid ""
"Clicking the arrow icon and then clicking an object on the map to set it "
"as the target object."
msgstr ""

#: ../../manual/objects.rst:360
msgid ""
"As shown on the screenshot above, any connections between objects are "
"rendered as arrows, taking the color of their target object (defined as "
"part of the :ref:`object class <custom-classes>` or by the color of the "
"object layer). You can toggle the display of these arrows using *View -> "
"Show Object References*."
msgstr ""

#: ../../manual/objects.rst:366
msgid ""
"If you'd like to get to the target object, but it's very far away, you "
"can jump there by right-clicking the property and selecting *Go to "
"Object*."
msgstr ""

#: ../../manual/objects.rst:372
msgid ""
"Here are some ideas about improvements that could be made to the above "
"tools:"
msgstr ""

#: ../../manual/objects.rst:375
msgid ""
"Some improvements could still be made to the support for editing polygons"
" and polylines, like allowing to rotate and scale the selected nodes "
"(`#1487 <https://github.com/bjorn/tiled/issues/1487>`__)."
msgstr ""

#: ../../manual/objects.rst:379
msgid ""
"The tools could put short usage instructions in the status bar, to help "
"new users without requiring them to carefully read the manual (`#1855 "
"<https://github.com/bjorn/tiled/issues/1855>`__)."
msgstr ""

#: ../../manual/preferences.rst:2
msgid "User Preferences"
msgstr ""

#: ../../manual/preferences.rst:4
msgid ""
"There are only a few options located in the Preferences, accessible "
"though the menu via *Edit > Preferences*. Most other options, like "
"whether to draw the grid, what kind of snapping to do or the last used "
"settings when creating a new map are simply remembered persistently."
msgstr ""

#: ../../manual/preferences.rst:9
msgid "The preferences are stored in a system-dependent format and location:"
msgstr ""

#: ../../manual/preferences.rst:12
msgid "**Windows**"
msgstr ""

#: ../../manual/preferences.rst:12
msgid "Registry key ``HKEY_CURRENT_USER\\SOFTWARE\\mapeditor.org\\Tiled``"
msgstr ""

#: ../../manual/preferences.rst:14
msgid "**macOS**"
msgstr ""

#: ../../manual/preferences.rst:14
msgid ":file:`~/Library/Preferences/org.mapeditor.Tiled.plist`"
msgstr ""

#: ../../manual/preferences.rst:16
msgid "**Linux**"
msgstr ""

#: ../../manual/preferences.rst:16
msgid ":file:`~/.config/mapeditor.org/tiled.conf`"
msgstr ""

#: ../../manual/preferences.rst:-1
msgid "General Preferences"
msgstr ""

#: ../../manual/preferences.rst:29
msgid "Saving and Loading"
msgstr ""

#: ../../manual/preferences.rst:33
msgid "Reload tileset images when they change"
msgstr ""

#: ../../manual/preferences.rst:32
msgid ""
"This is very useful while working on the tiles or when the tiles might "
"change as a result of a source control system."
msgstr ""

#: ../../manual/preferences.rst:37
msgid "Restore previous session on startup"
msgstr ""

#: ../../manual/preferences.rst:36
msgid ""
"When disabled, Tiled always starts with an empty session. This can be "
"useful when you frequently switch projects."
msgstr ""

#: ../../manual/preferences.rst:45
msgid "Use safe writing of files"
msgstr ""

#: ../../manual/preferences.rst:40
msgid ""
"This setting causes files to be written to a temporary file, and when all"
" went well, to be swapped with the target file. This avoids data getting "
"lost due to errors while saving or due to insufficient disk space. "
"Unfortunately, it is known to cause issues when saving files to a Dropbox"
" folder or a network drive, in which case it helps to disable this "
"feature."
msgstr ""

#: ../../manual/preferences.rst:50
msgid "Repeat last export on save"
msgstr ""

#: ../../manual/preferences.rst:48
msgid ""
"With this feature enabled, any time you save a map or tileset that was "
"previously exported it will automatically be exported again to the same "
"location and format."
msgstr ""

#: ../../manual/preferences.rst:59
msgid "Export Options"
msgstr ""

#: ../../manual/preferences.rst:61
msgid ""
"The following export options are applied each time a map or tileset gets "
"exported, without affecting the map or tileset itself."
msgstr ""

#: ../../manual/preferences.rst:67
msgid "Embed tilesets"
msgstr ""

#: ../../manual/preferences.rst:65
msgid ""
"All tilesets are embedded in the exported map. Useful for example when "
"you are exporting to JSON and loading an external tileset is not desired."
msgstr ""

#: ../../manual/preferences.rst:72
msgid "Detach templates"
msgstr ""

#: ../../manual/preferences.rst:70
msgid ""
"All template instances are detached. Useful when you want to use the "
"templates feature but can't or don't want to load the external template "
"object files."
msgstr ""

#: ../../manual/preferences.rst:77
msgid "Resolve object types and properties"
msgstr ""

#: ../../manual/preferences.rst:75
msgid ""
"Stores effective object type and properties with each object. Object "
"properties are inherited from a tile (in case of a tile object) and from "
"the default properties of their type."
msgstr ""

#: ../../manual/preferences.rst:81
msgid "Minimize output"
msgstr ""

#: ../../manual/preferences.rst:80
msgid ""
"Omits unnecessary whitespace in the output file. This option is supported"
" for XML (TMX and TSX), JSON and Lua formats."
msgstr ""

#: ../../manual/preferences.rst:83
msgid ""
"These options are also available as options when exporting using the "
"command-line."
msgstr ""

#: ../../manual/preferences.rst:87 ../../manual/preferences.rst:90
msgid "Interface"
msgstr ""

#: ../../manual/preferences.rst:94
msgid "Language"
msgstr ""

#: ../../manual/preferences.rst:93
msgid ""
"By default the language tries to match that of the system, but if it "
"picks the wrong one you can change it here."
msgstr ""

#: ../../manual/preferences.rst:97
msgid "Grid colour"
msgstr ""

#: ../../manual/preferences.rst:97
msgid "Because black is not always the best color for the grid."
msgstr ""

#: ../../manual/preferences.rst:102
msgid "Fine grid divisions"
msgstr ""

#: ../../manual/preferences.rst:100
msgid ""
"The tile grid can be divided further using this setting, which affects "
"the \"Snap to Fine Grid\" setting in the *View > Snapping* menu."
msgstr ""

#: ../../manual/preferences.rst:107
msgid "Object line width"
msgstr ""

#: ../../manual/preferences.rst:105
msgid ""
"Shapes are by default rendered with a 2 pixel wide line, but some people "
"like it thinner or even thicker. On some systems the DPI-based scaling "
"will affect this setting as well."
msgstr ""

#: ../../manual/preferences.rst:120
msgid "Object selection behavior"
msgstr ""

#: ../../manual/preferences.rst:114
msgid ""
"By default the :ref:`select-objects-tool` tool selects objects from any "
"layer. With this setting, you can make it prefer to select objects from "
"the currently selected layers, or to only pick objects from the selected "
"layers."
msgstr ""

#: ../../manual/preferences.rst:119
msgid ""
"When the \"Highlight Current Layer\" option is enabled, Tiled "
"automatically prefers to select objects from the currently selected "
"layers."
msgstr ""

#: ../../manual/preferences.rst:125
msgid "Hardware accelerated drawing (OpenGL)"
msgstr ""

#: ../../manual/preferences.rst:123
msgid ""
"This enables a rather unoptimized way of rendering the map using OpenGL. "
"It's usually not an improvement and may lead to crashes, but in some "
"scenarios it can make editing more responsive."
msgstr ""

#: ../../manual/preferences.rst:135
msgid "Mouse wheel zooms by default"
msgstr ""

#: ../../manual/preferences.rst:132
msgid ""
"This option causes the mouse wheel to zoom without the need to hold "
"Control (or Command on macOS). It can be a convenient way to navigate the"
" map, but it can also interfere with panning on a touchpad."
msgstr ""

#: ../../manual/preferences.rst:144
msgid "Middle mouse button uses auto-scrolling"
msgstr ""

#: ../../manual/preferences.rst:142
msgid ""
"With this option enabled, the clicking middle mouse button doesn't drag "
"the map directly but instead controls the speed of a continuous panning "
"movement."
msgstr ""

#: ../../manual/preferences.rst:153
msgid "Use smooth scrolling"
msgstr ""

#: ../../manual/preferences.rst:151
msgid ""
"This option affects the behavior when scrolling with the arrow keys. When"
" disabled, the view scrolls in steps based on key press events. When "
"enabled (the default), the view scrolls continuously while the keys are "
"held down."
msgstr ""

#: ../../manual/preferences.rst:160
msgid "Updates"
msgstr ""

#: ../../manual/preferences.rst:162
msgid ""
"By default, Tiled checks for news and new versions and highlights any "
"updates in the status bar. Here you can disable this functionality. It is"
" recommended to keep at least one of these enabled."
msgstr ""

#: ../../manual/preferences.rst:166
msgid ""
"If you disable displaying of new versions, you can still manually check "
"whether a new version is available by opening the *About Tiled* dialog."
msgstr ""

#: ../../manual/preferences.rst:176
msgid "Keyboard"
msgstr ""

#: ../../manual/preferences.rst:178
msgid ""
"Here you can add, remove or change the keyboard shortcuts of most "
"available actions."
msgstr ""

#: ../../manual/preferences.rst:181
msgid ""
"Conflicting keybindings are highlighted in red. They will not work until "
"you resolve the conflict."
msgstr ""

#: ../../manual/preferences.rst:184
msgid ""
"If you customize multiple shortcuts, it is recommended to use the export "
"functionality to save the keybindings somewhere, so that you can easily "
"recover that setup or copy it to other Tiled installations."
msgstr ""

#: ../../manual/preferences.rst:190
msgid "Theme"
msgstr ""

#: ../../manual/preferences.rst:192
msgid ""
"On Windows and Linux, the default style used by Tiled is \"Tiled "
"Fusion\". This is a customized version of the \"Fusion\" style that ships"
" with Qt. On macOS, this style can also be used, but because it looks so "
"out of place the default is \"Native\" there."
msgstr ""

#: ../../manual/preferences.rst:197
msgid ""
"The \"Tiled Fusion\" style allows customizing the base color. When "
"choosing a dark base color, the text automatically switches to white and "
"some other adjustments are made to keep things readable. You can also "
"choose a custom selection color."
msgstr ""

#: ../../manual/preferences.rst:202
msgid ""
"The \"Native\" style tries to fit in with the operating system, and is "
"available since it is in some cases preferable to the custom style. The "
"base color and selection color can't be changed when using this style, as"
" they depend on the system."
msgstr ""

#: ../../manual/preferences.rst:212
msgid "Custom Interface Font"
msgstr ""

#: ../../manual/preferences.rst:214
msgid ""
"Normally the application font defaults to the one defined by the system. "
"If you'd like Tiled to use a different font, you can set one here."
msgstr ""

#: ../../manual/preferences.rst:218
msgid "Plugins"
msgstr ""

#: ../../manual/preferences.rst:220
msgid ""
"Here you can choose which plugins are enabled, as well as opening the "
":doc:`scripted extensions </reference/scripting>` folder."
msgstr ""

#: ../../manual/preferences.rst:223
msgid ""
"Plugins add support for map and/or tileset file formats. Some generic "
"plugins are enabled by default, while more specific ones need to be "
"manually enabled."
msgstr ""

#: ../../manual/preferences.rst:226
msgid ""
"There is no need to restart Tiled when enabling or disabling plugins. "
"When a plugin fails to load, try hovering its icon to see if the tool tip"
" displays a useful error message."
msgstr ""

#: ../../manual/preferences.rst:230
msgid "See :doc:`export` for more information about supported file formats."
msgstr ""

#: ../../manual/projects.rst:6
msgid "Projects"
msgstr ""

#: ../../manual/projects.rst:9
msgid "What's in a Project"
msgstr ""

#: ../../manual/projects.rst:11
msgid ""
"A Tiled project file primarily defines the list of folders containing the"
" assets belonging to that project. In addition, it provides an anchor for"
" the :ref:`session file <sessions>`."
msgstr ""

#: ../../manual/projects.rst:15
msgid ""
"Apart from the list of folders, a project currently has the following "
"properties, which can be changed through the *Project -> Project "
"Properties...* dialog."
msgstr ""

#: ../../manual/projects.rst:23
msgid "Compatibility Version"
msgstr ""

#: ../../manual/projects.rst:20
msgid ""
"The Tiled version to target when saving or exporting files. Can be used "
"to maintain compatibility with earlier versions of Tiled or with "
":doc:`/reference/support-for-tmx-maps` that do not yet support certain "
"backwards-incompatible changes."
msgstr ""

#: ../../manual/projects.rst:31
msgid "Extensions Directory"
msgstr ""

#: ../../manual/projects.rst:26
msgid ""
"A project-specific directory where you can put :doc:`Tiled extensions "
"</reference/scripting>`. It defaults to simply ``extensions``, so when "
"you have a directory called \"extensions\" alongside your project file it"
" will be picked up automatically."
msgstr ""

#: ../../manual/projects.rst:31
msgid "The directory is loaded in addition to the global extensions."
msgstr ""

#: ../../manual/projects.rst:36
#, fuzzy
msgid "Automapping Rules File"
msgstr "Automaattikartoitus"

#: ../../manual/projects.rst:34
msgid ""
"Refers to an :doc:`automapping` rules file, or a single rule map, that "
"should be used for all maps while this project is loaded. It is ignored "
"for maps that have a ``rules.txt`` file saved alongside them."
msgstr ""

#: ../../manual/projects.rst:38
msgid ""
"Any types defined in the :ref:`Custom Types Editor <custom-property-"
"types>` are also saved in the project."
msgstr ""

#: ../../manual/projects.rst:44
msgid "Sessions"
msgstr ""

#: ../../manual/projects.rst:46
msgid ""
"Each project file gets an associated *.tiled-session* file, stored "
"alongside it. The session file should generally not be shared with others"
" and stores your last opened files, part of their last editor state, last"
" used parameters in dialogs, etc."
msgstr ""

#: ../../manual/projects.rst:51
msgid ""
"When switching projects Tiled automatically switches to the associated "
"session, so you can easily resume where you left off. When no project is "
"loaded a global session file is used."
msgstr ""

#: ../../manual/projects.rst:56
msgid "Opening a File in the Project"
msgstr ""

#: ../../manual/projects.rst:58
msgid ""
"Another advantage of setting up a project is that you can quickly open "
"any file with a recognized extension located in one of the folders of the"
" project. Use *File -> Open File in Project* (``Ctrl+P``) to open the "
"file filter and just type the name of the file you'd like to open."
msgstr ""

#: ../../manual/projects.rst:66
msgid "Open File in Project"
msgstr ""

#: ../../manual/projects.rst:71
msgid "There are many ways in which the projects could be made more powerful:"
msgstr ""

#: ../../manual/projects.rst:73
msgid ""
"Make the project accessible through the :doc:`scripting API "
"</reference/scripting>`."
msgstr ""

#: ../../manual/projects.rst:76
msgid ""
"Allow turning off features on a per-project basis, to simplify the UI and"
" reduce the chance of accidentally doing something your project doesn't "
"support."
msgstr ""

#: ../../manual/projects.rst:80
msgid ""
"Recognizing the various assets in your project, so that selection of "
"images, tilesets and templates can be made more efficient (potentially "
"replacing the system file dialog)."
msgstr ""

#: ../../manual/python.rst:2
msgid "Python Scripts"
msgstr ""

#: ../../manual/python.rst:6
msgid ""
"Since Tiled 1.3, Tiled can be :doc:`extended using JavaScript "
"</reference/scripting>`. The JavaScript API provides a lot more "
"opportunity for extending Tiled's functionality than just adding custom "
"map formats. It is fully documented and works out of the box on all "
"platforms. It should be preferred over the Python plugin when possible."
msgstr ""

#: ../../manual/python.rst:12
msgid ""
"Tiled ships with a plugin that enables you to use Python 3 to add support"
" for custom map formats. This is nice especially since you don't need to "
"compile Tiled yourself and the scripts are easy to deploy to any "
"platform."
msgstr ""

#: ../../manual/python.rst:17
msgid ""
"For the scripts to get loaded, they should be placed in ``~/.tiled``. "
"Tiled watches this directory for changes, so there is no need to restart "
"Tiled after adding or changing scripts (though the directory needs to "
"exist when you start Tiled)."
msgstr ""

#: ../../manual/python.rst:22
msgid "There are several `example scripts`_ available in the repository."
msgstr ""

#: ../../manual/python.rst:26
msgid ""
"To create the ``~/.tiled`` folder on Windows, open command prompt "
"(``cmd.exe``), which should start in your home folder by default, then "
"type ``mkdir .tiled`` to create the folder."
msgstr ""

#: ../../manual/python.rst:30
msgid ""
"On Linux, folders starting with a dot are hidden by default. In most file"
" managers you can toggle showing of hidden files using ``Ctrl+H``."
msgstr ""

#: ../../manual/python.rst:35
msgid ""
"Since Tiled 1.2.4, the Python plugin is disabled by default, because "
"depending on which Python version is installed on the system the loading "
"of this plugin may cause a crash (`#2091`_). To use the Python plugin, "
"first enable it in the Preferences."
msgstr ""

#: ../../manual/python.rst:42
msgid ""
"On Windows, Python is not installed by default. For the Tiled Python "
"plugin to work, you'll need to install Python 3.8 (get it from "
"https://www.python.org/). You will also need to check the box \"Add "
"Python 3.8 to PATH\" in the installer:"
msgstr ""

#: ../../manual/python.rst:49
msgid ""
"On Linux you will also need to install the appropriate package. However, "
"currently Linux builds are done on Ubuntu 20.04 against Python 3.8, and "
"you'd need to install the same version somehow."
msgstr ""

#: ../../manual/python.rst:53
msgid "The Python plugin is currently not available for macOS releases."
msgstr ""

#: ../../manual/python.rst:56
msgid "Example Export Plugin"
msgstr ""

#: ../../manual/python.rst:58
msgid "Suppose you'd like to have a map exported in the following format:"
msgstr ""

#: ../../manual/python.rst:75
msgid ""
"You can achieve this by saving the following ``example.py`` script in the"
" scripts directory:"
msgstr ""

#: ../../manual/python.rst:114
msgid ""
"Then you should see an \"Example files\" entry in the type dropdown when "
"going to *File > Export*, which allows you to export the map using the "
"above script."
msgstr ""

#: ../../manual/python.rst:120
msgid "This example does not support the use of group layers."
msgstr ""

#: ../../manual/python.rst:123
msgid "Debugging Your Script"
msgstr ""

#: ../../manual/python.rst:125
msgid ""
"Any errors that happen while parsing or running the script are printed to"
" the Console, which can be enabled in *View > Views and Toolbars > "
"Console*."
msgstr ""

#: ../../manual/python.rst:130
msgid "API Reference"
msgstr ""

#: ../../manual/python.rst:132
msgid ""
"It would be nice to have the full API reference documented here, but for "
"now please check out the `source file`_ for available classes and "
"methods."
msgstr ""

#: ../../manual/python.rst:138
msgid ""
"Any help with maintaining the Python plugin would be very appreciated. "
"See `open issues related to Python support`_"
msgstr ""

#: ../../manual/terrain.rst:2
msgid "Using Terrains"
msgstr ""

#: ../../manual/terrain.rst:4
msgid ""
"When editing a tile map, sometimes we don't think in terms of *tiles* but"
" rather in terms of *terrains* - areas of tiles with transitions to other"
" kinds of tiles. Say we want to draw a patch of grass, a road or a "
"certain platform. In this case, manually choosing the right tiles for the"
" various transitions or connections quickly gets tedious. The :ref"
":`terrain-tool` was added to make editing tile maps easier in such cases."
msgstr ""

#: ../../manual/terrain.rst:13
msgid ""
"While Tiled has supported terrains since version 0.9 and later supported "
"a similar feature called \"Wang tiles\" since version 1.1, both features "
"were unified and extended in Tiled 1.5. As a result, *terrain information"
" defined in Tiled 1.5 can't be used by older versions.*"
msgstr ""

#: ../../manual/terrain.rst:18
msgid ""
"The Terrain Brush relies on the tileset providing one or more *Terrain "
"Sets* - sets of tiles labeled according to their terrain layouts. Tiled "
"supports the following terrain sets:"
msgstr ""

#: ../../manual/terrain.rst:-1 ../../manual/terrain.rst:30
msgid "Corner Set"
msgstr ""

#: ../../manual/terrain.rst:28
msgid ""
"Tiles that needs to match neighboring tiles at their corners, with a "
"transition from one type of terrain to another in between. A complete set"
" with 2 terrains has 16 tiles."
msgstr ""

#: ../../manual/terrain.rst:-1 ../../manual/terrain.rst:40
msgid "Edge Set"
msgstr ""

#: ../../manual/terrain.rst:38
msgid ""
"Tiles that need to match neighboring tiles at their sides. This is common"
" for roads, fences or platforms. A complete set with 2 terrains has 16 "
"tiles."
msgstr ""

#: ../../manual/terrain.rst:47
msgid "Mixed Set"
msgstr ""

#: ../../manual/terrain.rst:43
msgid ""
"Tiles that rely on matching neighboring tiles using both their corners "
"and sides. This allows a tileset to provide more variation, at the cost "
"of needing significantly more tiles. A complete set with 2 terrains has "
"256 tiles, but reduced sets like the 47-tile `Blob tileset`_ can be used "
"with this type as well."
msgstr ""

#: ../../manual/terrain.rst:49
msgid ""
"Based on the information in a terrain set, the :ref:`terrain-tool` can "
"understand the map and automatically choose the right tiles when making "
"edits. When necessary, it also adjusts neighboring tiles to make sure "
"they correctly connect to the modified area. A terrain set can contain up"
" to 255 terrains."
msgstr ""

#: ../../manual/terrain.rst:54
msgid ""
"The :ref:`stamp-tool`, as well as the :ref:`bucket-fill-tool` and the "
":ref:`shape-fill-tool`, also have a mode where they can :ref:`fill an "
"area with random terrain <terrain-fill-mode>`."
msgstr ""

#: ../../manual/terrain.rst:61
msgid "Define the Terrain Information"
msgstr ""

#: ../../manual/terrain.rst:64
msgid "Creating the Terrain Set"
msgstr ""

#: ../../manual/terrain.rst:66
msgid ""
"First of all, switch to the tileset file. If you're looking at the map "
"and have the tileset selected, you can do this by clicking the small "
"*Edit Tileset* button below the Tilesets view."
msgstr ""

#: ../../manual/terrain.rst:73
msgid "Edit Tileset button"
msgstr ""

#: ../../manual/terrain.rst:75
msgid ""
"Then, activate the terrain editing mode by clicking on the *Terrain Sets*"
" |terrain| button on the tool bar. With this mode activated, the *Terrain"
" Sets* view will become visible, with a button to add a new set. In this "
"example, we'll define a *Corner Set*."
msgstr ""

#: ../../manual/terrain.rst:83
msgid "Adding a Terrain Set"
msgstr ""

#: ../../manual/terrain.rst:85
msgid ""
"When adding a terrain set, the name of the new set will automatically get"
" focus. Give the set a recognizable name, in the example we'll type "
"\"Desert Ground\". We can also set one of the tiles as the icon of the "
"set by right-clicking a tile and choosing \"Use as Terrain Set Image\"."
msgstr ""

#: ../../manual/terrain.rst:91
msgid "Adding Terrains"
msgstr ""

#: ../../manual/terrain.rst:93
msgid ""
"The new set will have one terrain added by default. If we already know we"
" need additional ones, click the *Add Terrain* button to add more."
msgstr ""

#: ../../manual/terrain.rst:96
msgid ""
"Each terrain has a name, color and can have one of the tiles as its icon "
"it to make it more recognizable. Double-click the terrain to edit its "
"name. To change the color, right-click the terrain and choose \"Pick "
"Custom Color\". To assign an icon, select the terrain and then right-"
"click a tile, choosing \"Use as Terrain Image\"."
msgstr ""

#: ../../manual/terrain.rst:106
msgid "Our Terrains"
msgstr ""

#: ../../manual/terrain.rst:110
msgid ""
"We generally don't need to define an explicit terrain for \"empty "
"tiles\". If you have tiles transitioning to nothing, it should be enough "
"to not mark those areas."
msgstr ""

#: ../../manual/terrain.rst:114
msgid "With our terrains set up we're ready to mark each of our tiles."
msgstr ""

#: ../../manual/terrain.rst:117
msgid "Marking the Tiles"
msgstr ""

#: ../../manual/terrain.rst:119
msgid ""
"Note that for a *Corner Set*, we can only mark the corners of the tiles. "
"For a *Edge Set*, we're limited to marking the edges of our tiles. If we "
"need both we need to use a *Mixed Set*. If it turns out that we chose the"
" wrong type of terrain set, we can still change the type in the "
"Properties view (right-click the terrain set and choose *Terrain Set "
"Properties...*)."
msgstr ""

#: ../../manual/terrain.rst:125
msgid ""
"With the terrain we want to mark selected, click and drag to mark the "
"regions of the tiles that match this terrain."
msgstr ""

#: ../../manual/terrain.rst:131
msgid "Sand marked"
msgstr ""

#: ../../manual/terrain.rst:131
msgid "Here we have marked all the sandy corners in our example tileset."
msgstr ""

#: ../../manual/terrain.rst:133
msgid ""
"If you make a mistake, just use Undo (or press ``Ctrl+Z``). Or if you "
"notice a mistake later, either use *Erase Terrain* to clear a terrain "
"type from a corner or select the correct terrain type and paint over it. "
"Each corner can only have one type of terrain associated with it."
msgstr ""

#: ../../manual/terrain.rst:138
msgid ""
"Now do the same for each of the other terrain types. Eventually you'll "
"have marked all tiles apart from the special objects."
msgstr ""

#: ../../manual/terrain.rst:144
msgid "Done marking tiles"
msgstr ""

#: ../../manual/terrain.rst:144
msgid "We're done marking the terrain of our tiles."
msgstr ""

#: ../../manual/terrain.rst:147
msgid "Patterns View"
msgstr ""

#: ../../manual/terrain.rst:149
msgid ""
"Next to the *Terrains* tab there's also a *Patterns* tab. This view can "
"be useful when marking complete sets, since it can highlight still "
"missing patterns. Each pattern which already occurs on a tile in the "
"tileset is darkened, to make the missing patterns stand out. Note though,"
" that it is not necessary for a terrain set to have all possible "
"patterns, especially when using more than 2 terrains."
msgstr ""

#: ../../manual/terrain.rst:159
msgid "Patterns view"
msgstr ""

#: ../../manual/terrain.rst:159
msgid "Patterns view, showing all possible combinations in the set."
msgstr ""

#: ../../manual/terrain.rst:162
msgid "Editing with the Terrain Brush"
msgstr ""

#: ../../manual/terrain.rst:164
msgid ""
"Now you can disable the *Terrain Sets* |terrain| mode by clicking the "
"tool bar button again. Then switch back to the map and activate the "
"*Terrain Sets* window. Select the terrain set we have just set up, so we "
"can use its terrains."
msgstr ""

#: ../../manual/terrain.rst:169
msgid ""
"Click on the Sand terrain and try to paint. You may immediately notice "
"that nothing is happening. This is because there are no other tiles on "
"the map yet, so the terrain tool doesn't really know how to help (because"
" we also have no transitions to \"nothing\" in our tileset). There are "
"two ways out of this:"
msgstr ""

#: ../../manual/terrain.rst:174
msgid ""
"We can hold ``Ctrl`` (``Command`` on a Mac) to paint a slightly larger "
"area. This way we will paint at least a single tile filled with the "
"selected terrain, though this is not convenient for painting larger "
"areas."
msgstr ""

#: ../../manual/terrain.rst:178
msgid ""
"Assuming we're out to create a desert map, it's better to start by "
"filling the entire map with sand. Just switch back to the *Tilesets* "
"window for a moment, select the sand tile and then use the :ref:`bucket-"
"fill-tool`."
msgstr ""

#: ../../manual/terrain.rst:182
msgid ""
"Once we've painted some sand, let's select the Cobblestone terrain. Now "
"you can see the tool in action!"
msgstr ""

#: ../../manual/terrain.rst:188
msgid "Drawing cobblestone"
msgstr ""

#: ../../manual/terrain.rst:190
msgid ""
"Finally, see what happens when you try drawing some dirt on the "
"cobblestone. Because there are no transitions from dirt directly to "
"cobblestone, the Terrain tool first inserts transitions to sand and from "
"there to cobblestone. Neat!"
msgstr ""

#: ../../manual/terrain.rst:198
msgid "Drawing dirt"
msgstr ""

#: ../../manual/terrain.rst:202
msgid ""
"An *Erase Terrain* button is provided for the case where your terrain "
"tiles transition to nothing. This allows for erasing parts of your "
"terrain while choosing the right tiles as well. This mode does nothing "
"useful when there are no transitions to nothing in the selected Terrain "
"Set."
msgstr ""

#: ../../manual/terrain.rst:210
msgid "Terrain Fill Mode"
msgstr ""

#: ../../manual/terrain.rst:212
msgid ""
"The :ref:`stamp-tool`, :ref:`bucket-fill-tool` and the :ref:`shape-fill-"
"tool` have a *Terrain Fill Mode*, which can be used to paint or fill an "
"area with random terrain. With this mode activated, each cell will be "
"randomly chosen from all those in the selected Terrain Set, making sure "
"to match all adjacent edges and/or corners."
msgstr ""

#: ../../manual/terrain.rst:220
msgid "Stamp Brush with Terrain Fill Mode Enabled"
msgstr ""

#: ../../manual/terrain.rst:222
msgid ""
"Note that since this mode makes sure that newly placed tiles match up "
"with any already existing tiles, generally nothing will change when "
"painting with the Stamp Brush on existing terrain. The exception is when "
"there are multiple variations of the same tile, in which case it will "
"randomize between those."
msgstr ""

#: ../../manual/terrain.rst:229
msgid "Bucket Fill with Terrain Fill Mode Enabled"
msgstr ""

#: ../../manual/terrain.rst:231
msgid ""
"When filling a shape or an area, only the edges of the filled area need "
"to connect to any existing tiles. Internally the area is completely "
"randomized."
msgstr ""

#: ../../manual/terrain.rst:235
msgid "Tile and Terrain Probability"
msgstr ""

#: ../../manual/terrain.rst:237
msgid ""
"Both the :ref:`terrain-fill-mode` and the Terrain Brush will by default "
"consider all matching tiles with equal probability. Both individual tiles"
" as well as terrains have a *Probability* property, which can be used to "
"change the frequency with which a certain tile or terrain is chosen "
"compared to other valid options."
msgstr ""

#: ../../manual/terrain.rst:243
msgid ""
"The relative probability of a tile is the product of its own probability "
"and the probability of the terrain at each corner and/or side."
msgstr ""

#: ../../manual/terrain.rst:248
msgid ""
"Left shows \"path\" with probability 0.1, right shows \"path\" with "
"probability 10."
msgstr ""

#: ../../manual/terrain.rst:252
msgid "Probability for Variations"
msgstr ""

#: ../../manual/terrain.rst:254
msgid ""
"A common usage for probability, especially at the individual tile level, "
"is to make certain variations of a tile less common than others. Our "
"example tileset contains several bushes and other decorations which we "
"may randomly want to scatter across the desert."
msgstr ""

#: ../../manual/terrain.rst:259
msgid ""
"To achieve this, first of all we mark all of them as \"sand\" tiles, "
"because this is their base terrain. Then, to make them less common than "
"the regular sand tile, we can put their probability on 0.01. This value "
"means they are each 100 times less likely to be chosen than the regular "
"sand tile (which still has its default probability of 1). To edit the "
"*Probability* property of the tiles we need to exit the *Terrain Sets* "
"mode."
msgstr ""

#: ../../manual/terrain.rst:268
msgid "Setting low probability on decoration tiles."
msgstr ""

#: ../../manual/terrain.rst:272
msgid "Random decorative tiles appearing with low probability."
msgstr ""

#: ../../manual/terrain.rst:276
msgid ""
"It is also possible to put the probability to 0, which disables automatic"
" usage of a tile entirely. This can be useful because it still makes the "
"tools aware of the terrain of a certain tile, which is taken into account"
" when modifying neighboring tiles."
msgstr ""

#: ../../manual/terrain.rst:286
msgid "Tile Transformations"
msgstr ""

#: ../../manual/terrain.rst:288
msgid ""
"Tiled supports flipping and rotating tiles. When using terrains, tiles "
"can be automatically flipped and/or rotated to create variations that "
"would otherwise not be available in a tileset. This can be enabled in the"
" *Tileset Properties*."
msgstr ""

#: ../../manual/terrain.rst:293
msgid "The following transformation-related options are available:"
msgstr ""

#: ../../manual/terrain.rst:296
msgid "Flip Horizontally"
msgstr ""

#: ../../manual/terrain.rst:296
msgid "Allow tiles to be flipped horizontally."
msgstr ""

#: ../../manual/terrain.rst:300
msgid "Flip Vertically"
msgstr ""

#: ../../manual/terrain.rst:299
msgid ""
"Allow tiles to be flipped vertically. This would be left disabled when "
"the graphics contain shadows in vertical direction, for example."
msgstr ""

#: ../../manual/terrain.rst:303
msgid "Rotate"
msgstr ""

#: ../../manual/terrain.rst:303
msgid "Allow tiles to be rotated (by 90, 180 or 270-degrees)."
msgstr ""

#: ../../manual/terrain.rst:310
msgid "Prefer Untransformed Tiles"
msgstr ""

#: ../../manual/terrain.rst:306
msgid ""
"When transformations are enabled, it could happen that a certain pattern "
"can be filled by either a regular tile or a transformed tile. With this "
"option enabled, the untransformed tiles will always take precedence. "
"Leaving this option disabled allows transformations to be used to create "
"more variation."
msgstr ""

#: ../../manual/terrain.rst:315
msgid "Blob with rotation."
msgstr ""

#: ../../manual/terrain.rst:315
msgid ""
"With rotations enabled, the normally 47-tiles `Blob tileset`_ can be "
"reduced to a mere 15 tiles."
msgstr ""

#: ../../manual/terrain.rst:320
msgid "Final Words"
msgstr ""

#: ../../manual/terrain.rst:322
msgid ""
"Now you should have a pretty good idea about how to use this tool in your"
" own project. A few things to keep in mind:"
msgstr ""

#: ../../manual/terrain.rst:325
msgid ""
"For one terrain to interact with another, they need to be part of the "
"same *Terrain Set*. This also means all tiles need to be part of the same"
" tileset. If you have tiles in different tilesets that you want to "
"transition to one another, you will need to merge the tilesets into one."
msgstr ""

#: ../../manual/terrain.rst:330
msgid ""
"Since defining the terrain information can be somewhat laborious, you'll "
"want to avoid using embedded tilesets so that terrain information can be "
"shared among several maps."
msgstr ""

#: ../../manual/terrain.rst:334
msgid ""
"The Terrain tool works fine with isometric maps as well. To make sure the"
" terrain overlay is displayed correctly, set up the *Orientation*, *Grid "
"Width* and *Grid Height* in the tileset properties."
msgstr ""

#: ../../manual/terrain.rst:338
msgid ""
"The tool will handle any number of terrains (up to 255) and each corner "
"of a tile can have a different type of terrain. Still, there are other "
"ways of dealing with transitions that this tool can't handle. Also, it is"
" not able to edit multiple layers at the same time. For a more flexible, "
"but also more complicated way of automatic tile placement, check out "
":doc:`automapping`."
msgstr ""

#: ../../manual/terrain.rst:344
msgid ""
"There's a `collection of tilesets <http://opengameart.org/content"
"/terrain-transitions>`__ that contain transitions that are compatible "
"with this tool on `OpenGameArt.org <http://opengameart.org/>`__."
msgstr ""

#: ../../manual/using-commands.rst:2
msgid "Using Commands"
msgstr ""

#: ../../manual/using-commands.rst:4
msgid ""
"The Command Button allows you to create and run shell commands (other "
"programs) from Tiled."
msgstr ""

#: ../../manual/using-commands.rst:7
msgid ""
"You may setup as many commands as you like. This is useful if you edit "
"maps for multiple games and you want to set up a command for each game. "
"Or you could setup multiple commands for the same game that load "
"different checkpoints or configurations."
msgstr ""

#: ../../manual/using-commands.rst:13
msgid "The Command Button"
msgstr ""

#: ../../manual/using-commands.rst:15
msgid ""
"It is located on the main toolbar to the right of the redo button. "
"Clicking on it will run the default command (the first command in the "
"command list). Clicking the arrow next to it will bring down a menu that "
"allows you to run any command you have set up, as well as an option to "
"open the Edit Commands dialog. You can also find all the commands in the "
"File menu."
msgstr ""

#: ../../manual/using-commands.rst:22
msgid ""
"Apart from this, you can set up custom keyboard shortcuts for each "
"command."
msgstr ""

#: ../../manual/using-commands.rst:26
msgid "Editing Commands"
msgstr ""

#: ../../manual/using-commands.rst:28
msgid ""
"The 'Edit Commands' dialog contains a list of commands. Each command has "
"several properties:"
msgstr ""

#: ../../manual/using-commands.rst:32
msgid ""
"The name of the command as it will be shown in the drop down list, so you"
" can easily identify it."
msgstr ""

#: ../../manual/using-commands.rst:37
msgid "Executable"
msgstr ""

#: ../../manual/using-commands.rst:36
msgid ""
"The executable to run. It should either be a full path or the name of an "
"executable in the system PATH."
msgstr ""

#: ../../manual/using-commands.rst:40
msgid "Arguments"
msgstr ""

#: ../../manual/using-commands.rst:40
msgid "The arguments for running the executable."
msgstr ""

#: ../../manual/using-commands.rst:43
msgid "Working directory"
msgstr ""

#: ../../manual/using-commands.rst:43
msgid "The path to the working directory."
msgstr ""

#: ../../manual/using-commands.rst:47
msgid "Shortcut"
msgstr ""

#: ../../manual/using-commands.rst:46
msgid ""
"A custom key sequence to trigger the command. You can use 'Clear' to "
"reset the shortcut."
msgstr ""

#: ../../manual/using-commands.rst:52
msgid "Show output in Console view"
msgstr ""

#: ../../manual/using-commands.rst:50
msgid ""
"If this is enabled, then the output (stdout and stderr) of this command "
"will be displayed in the Console. You can find the Console in *View > "
"Views and Toolbars > Console*."
msgstr ""

#: ../../manual/using-commands.rst:56
msgid "Save map before executing"
msgstr ""

#: ../../manual/using-commands.rst:55
msgid ""
"If this is enabled, then the current map will be saved before executing "
"the command."
msgstr ""

#: ../../manual/using-commands.rst:60
msgid "Enabled"
msgstr ""

#: ../../manual/using-commands.rst:59
msgid ""
"A quick way to disable commands and remove them from the drop down list. "
"The default command is the first enabled command."
msgstr ""

#: ../../manual/using-commands.rst:62
msgid ""
"Note that if the executable or any of its arguments contain spaces, these"
" parts need to be quoted."
msgstr ""

#: ../../manual/using-commands.rst:66
msgid "Substituted Variables"
msgstr ""

#: ../../manual/using-commands.rst:68
msgid ""
"In the executable, arguments and working directory fields, you can use "
"the following variables:"
msgstr ""

#: ../../manual/using-commands.rst:72
msgid "``%mapfile``"
msgstr ""

#: ../../manual/using-commands.rst:72
msgid "the full path of the current file (either map or tileset)."
msgstr ""

#: ../../manual/using-commands.rst:75
msgid "``%mappath``"
msgstr ""

#: ../../manual/using-commands.rst:75
msgid "the path in which the current file is located."
msgstr ""

#: ../../manual/using-commands.rst:82
msgid "``%projectpath``"
msgstr ""

#: ../../manual/using-commands.rst:82
msgid "the path in which the current project is located."
msgstr ""

#: ../../manual/using-commands.rst:86
#, python-format
msgid "``%objectclass``"
msgstr ""

#: ../../manual/using-commands.rst:85
#, python-format
msgid ""
"the class of the currently selected object, if any (also available as "
"``%objecttype`` for compatibility with Tiled < 1.9)."
msgstr ""

#: ../../manual/using-commands.rst:89
#, python-format
msgid "``%objectid``"
msgstr ""

#: ../../manual/using-commands.rst:89
msgid "the ID of the currently selected object, if any."
msgstr ""

#: ../../manual/using-commands.rst:92
msgid "``%layername``"
msgstr ""

#: ../../manual/using-commands.rst:92
msgid "the name of the currently selected layer."
msgstr ""

#: ../../manual/using-commands.rst:99
msgid "``%tileid``"
msgstr ""

#: ../../manual/using-commands.rst:99
msgid "a comma-separated list with the IDs of the selected tiles, if any."
msgstr ""

#: ../../manual/using-commands.rst:106
msgid "``%worldfile``"
msgstr ""

#: ../../manual/using-commands.rst:106
msgid "the full path of the world the current map is part of, if any."
msgstr ""

#: ../../manual/using-commands.rst:108
msgid ""
"For the working directory field, you can additionally use the following "
"variable:"
msgstr ""

#: ../../manual/using-commands.rst:113
#, python-format
msgid "``%executablepath``"
msgstr ""

#: ../../manual/using-commands.rst:112
msgid "the path to the executable."
msgstr ""

#: ../../manual/using-commands.rst:116
msgid "Example Commands"
msgstr ""

#: ../../manual/using-commands.rst:118
msgid ""
"Launching a custom game called \"mygame\" with a -loadmap parameter and "
"the mapfile:"
msgstr ""

#: ../../manual/using-commands.rst:125
msgid ""
"On Mac, remember that Apps are folders, so you need to run the actual "
"executable from within the ``Contents/MacOS`` folder:"
msgstr ""

#: ../../manual/using-commands.rst:132
msgid ""
"Or use ``open`` (and note the quotes since one of the arguments contains "
"spaces):"
msgstr ""

#: ../../manual/using-commands.rst:139
msgid "Some systems also have a command to open files in the appropriate program:"
msgstr ""

#: ../../manual/using-commands.rst:142
msgid "OSX: ``open %mapfile``"
msgstr ""

#: ../../manual/using-commands.rst:143
msgid "GNOME systems like Ubuntu: ``gnome-open %mapfile``"
msgstr ""

#: ../../manual/using-commands.rst:144
msgid "FreeDesktop.org standard: ``xdg-open %mapfile``"
msgstr ""

#: ../../manual/using-infinite-maps.rst:6
msgid "Using Infinite Maps"
msgstr ""

#: ../../manual/using-infinite-maps.rst:8
msgid ""
"Infinite maps give you independence from bounds of the map. The canvas is"
" \"auto-growing\", which basically means, that you have an infinite grid "
"which can be painted upon without worrying about the width and height of "
"the map. The bounds of a particular layer get expanded whenever tiles are"
" painted outside the current bounds."
msgstr ""

#: ../../manual/using-infinite-maps.rst:-1
msgid "Infinite Maps Overview"
msgstr ""

#: ../../manual/using-infinite-maps.rst:18
msgid "Creating an Infinite Map"
msgstr ""

#: ../../manual/using-infinite-maps.rst:20
msgid ""
"In the order to create an infinite map, make sure the 'Infinite' option "
"is selected in New Map dialog."
msgstr ""

#: ../../manual/using-infinite-maps.rst:-1
msgid "New Infinite Map"
msgstr ""

#: ../../manual/using-infinite-maps.rst:27
msgid "The newly created map will then have an infinite canvas."
msgstr ""

#: ../../manual/using-infinite-maps.rst:30
msgid "Editing the Infinite Map"
msgstr ""

#: ../../manual/using-infinite-maps.rst:32
msgid ""
"Except for the :ref:`bucket-fill-tool`, all tools works exactly in the "
"same way as in the fixed-size maps. The Bucket Fill Tool fills the "
"current bounds of that particular tile layer. These bounds get increased "
"upon further painting of that tile layer."
msgstr ""

#: ../../manual/using-infinite-maps.rst:-1
msgid "Infinite Maps Editing"
msgstr ""

#: ../../manual/using-infinite-maps.rst:41
msgid "Conversion from Infinite to Finite Map and Vice Versa"
msgstr ""

#: ../../manual/using-infinite-maps.rst:43
msgid ""
"In the map properties, you can toggle whether the map should be infinite "
"or not. When converting from infinite to a finite map, the width and "
"height of the final map are chosen on the basis of bounds of all the tile"
" layers."
msgstr ""

#: ../../manual/using-infinite-maps.rst:51
msgid "Initial Map"
msgstr ""

#: ../../manual/using-infinite-maps.rst:51
msgid "The Initial Infinite Map"
msgstr ""

#: ../../manual/using-infinite-maps.rst:56
msgid "Properties"
msgstr ""

#: ../../manual/using-infinite-maps.rst:56
msgid "Unchecking the Infinite property in Map Properties"
msgstr ""

#: ../../manual/using-infinite-maps.rst:61
msgid "Final Map"
msgstr ""

#: ../../manual/using-infinite-maps.rst:61
msgid "The Converted Map"
msgstr ""

#: ../../manual/using-templates.rst:6
msgid "Using Templates"
msgstr ""

#: ../../manual/using-templates.rst:8
msgid ""
"Any created object can be saved as a template. These templates can then "
"be instantiated elsewhere as objects that inherit the template's "
"properties. This can save a lot of tedious work of setting up the object "
"type and properties, or even just finding the right tile in the tileset."
msgstr ""

#: ../../manual/using-templates.rst:13
msgid ""
"Each template is stored in its own file, where they can be organized in "
"directories. You can save templates in either XML or JSON format, just "
"like map and tileset files."
msgstr ""

#: ../../manual/using-templates.rst:-1
msgid "Templates Overview"
msgstr ""

#: ../../manual/using-templates.rst:21
msgid "Creating Templates"
msgstr ""

#: ../../manual/using-templates.rst:23
msgid ""
"A template can be created by right clicking on any object in the map and "
"selecting \"Save As Template\". You will be asked to choose the file name"
" and the format to save the template in. If the object already has a name"
" the suggested file name will be based on that."
msgstr ""

#: ../../manual/using-templates.rst:-1
msgid "New Template Dialog"
msgstr ""

#: ../../manual/using-templates.rst:35
msgid ""
"To be able to select your templates for editing or instantiating you'll "
"generally want to use the :doc:`Project view <projects>`, so make sure to"
" save your templates in a folder that is part of your project. Dragging "
"in a template from a file manager is also possible."
msgstr ""

#: ../../manual/using-templates.rst:40
msgid ""
"You can't create a template from a tile object that uses a tile from an "
"embedded tileset, because :ref:`template files <tmx-template-files>` do "
"not support referring to such tilesets."
msgstr ""

#: ../../manual/using-templates.rst:48
msgid "Creating Template Instances"
msgstr ""

#: ../../manual/using-templates.rst:52
msgid ""
"Template instantiation works by either dragging and dropping the template"
" from the Project view to the map, or by using the \"Insert Template\" "
"tool by selecting a template and clicking on the map. The latter is more "
"convenient when you want to create many instances."
msgstr ""

#: ../../manual/using-templates.rst:-1
msgid "Creating Instances"
msgstr ""

#: ../../manual/using-templates.rst:-1 ../../manual/using-templates.rst:61
msgid "Editing Templates"
msgstr ""

#: ../../manual/using-templates.rst:63
msgid ""
"Editing templates is done using the *Template Editor* view. A template "
"can be opened for editing by selecting it in the Project view or by "
"dragging the template file on the *Template Editor* view. The template "
"can also be selected using the *Open File in Project* action."
msgstr ""

#: ../../manual/using-templates.rst:68
msgid ""
"When selecting the template in the *Template Editor* view, the "
"*Properties* view will show the template's properties, where they can be "
"edited."
msgstr ""

#: ../../manual/using-templates.rst:71
msgid ""
"Any changes to the template are saved automatically and are immediately "
"reflected on all template instances."
msgstr ""

#: ../../manual/using-templates.rst:77
msgid ""
"If a property of a template instance is changed, it will be internally "
"marked as an overridden property and won't be changed when the template "
"changes."
msgstr ""

#: ../../manual/using-templates.rst:84
msgid ""
"If a template file changes on disk, it is automatically reloaded and any "
"changes will be reflected in the *Template Editor* as well as on any "
"template instances."
msgstr ""

#: ../../manual/using-templates.rst:89
msgid "Detaching Template Instances"
msgstr ""

#: ../../manual/using-templates.rst:91
msgid ""
"Detaching a template instance will disconnect it from its template, so "
"any further edits to the template will not affect the detached instance."
msgstr ""

#: ../../manual/using-templates.rst:94
msgid "To detach an instance, right click on it and select *Detach*."
msgstr ""

#: ../../manual/using-templates.rst:100
msgid ""
"If your map loader does not support object templates, but you'd still "
"like to use them, you can enable the *Detach templates* :ref:`export "
"option <export-options>`."
msgstr ""

#: ../../manual/using-templates.rst:107
msgid ""
"Resetting overridden properties individually (`#1725 "
"<https://github.com/bjorn/tiled/issues/1725>`__)."
msgstr ""

#: ../../manual/using-templates.rst:108
msgid ""
"Locking template properties (`#1726 "
"<https://github.com/bjorn/tiled/issues/1726>`__)."
msgstr ""

#: ../../manual/using-templates.rst:109
msgid ""
"Handling wrong file paths (`#1732 "
"<https://github.com/bjorn/tiled/issues/1732>`__)."
msgstr ""

#: ../../manual/using-templates.rst:110
msgid ""
"Managing the templates folder, e.g. moving, renaming or deleting a "
"template or a sub-folder (`#1723 "
"<https://github.com/bjorn/tiled/issues/1723>`__)."
msgstr ""

#: ../../manual/worlds.rst:6
msgid "Working with Worlds"
msgstr ""

#: ../../manual/worlds.rst:8
msgid ""
"Sometimes a game has a large world which is split over multiple maps to "
"make the world more digestible by the game (less memory usage) or easier "
"to edit by multiple people (avoiding merge conflicts). It would be useful"
" if the maps from such a world could be seen within the same view, and to"
" be able to quickly switch between editing different maps. Defining a "
"world allows you to do exactly that."
msgstr ""

#: ../../manual/worlds.rst:18
msgid "Many maps from The Mana World shown at once"
msgstr ""

#: ../../manual/worlds.rst:18
msgid ""
"Many maps from `The Mana World <https://www.themanaworld.org/>`__ shown "
"at once."
msgstr ""

#: ../../manual/worlds.rst:22
msgid "Defining a World"
msgstr ""

#: ../../manual/worlds.rst:24
msgid ""
"A world is defined in a ``.world`` file, which is a JSON file that tells "
"Tiled which maps are part of the world and at what location. Worlds can "
"be created by using the *World > New World...* action."
msgstr ""

#: ../../manual/worlds.rst:28
msgid ""
"You may also create `.world files` by hand. Here is a simple example of a"
" world definition, which defines the global position (in pixels) of three"
" maps:"
msgstr ""

#: ../../manual/worlds.rst:54
msgid ""
"Once defined, a world needs to be loaded by choosing *World > Load "
"World...* from the menu. Multiple worlds can be loaded at the same time, "
"and worlds will be automatically loaded again when Tiled is restarted."
msgstr ""

#: ../../manual/worlds.rst:58
msgid ""
"When is map is opened, Tiled checks whether it is part of any of the "
"loaded worlds. If so, any other maps in the same world are loaded as well"
" and displayed alongside the opened map. You can click any of the other "
"maps to open them for editing, which will switch files while keeping the "
"view in the same position."
msgstr ""

#: ../../manual/worlds.rst:64
msgid "Worlds are reloaded automatically when their file is changed on disk."
msgstr ""

#: ../../manual/worlds.rst:71
msgid "Editing Worlds"
msgstr ""

#: ../../manual/worlds.rst:73
msgid ""
"Once you have loaded a world, you can select the 'World Tool' from the "
"toolbar to add, remove and move maps within the world."
msgstr ""

#: ../../manual/worlds.rst:81
msgid "Adding Maps"
msgstr ""

#: ../../manual/worlds.rst:77
msgid ""
"Click the 'Add the current map to a loaded world' button on the toolbar, "
"from the dropdown menu select the world you want to add it to. To add a "
"different map to the current world, you can use the 'Add another map to "
"the current world' button from the toolbar. Alternatively, both actions "
"can be accessed by right-clicking in the map editor."
msgstr ""

#: ../../manual/worlds.rst:86
msgid "Removing Maps"
msgstr ""

#: ../../manual/worlds.rst:84
msgid ""
"Hit the 'Remove the current map from the current world' button on the "
"toolbar. Alternatively, right-click a map in the map editor and select "
"the 'Remove ... from World ...' action from the context menu."
msgstr ""

#: ../../manual/worlds.rst:93
msgid "Moving Maps"
msgstr ""

#: ../../manual/worlds.rst:89
msgid ""
"Simply drag around maps within the map editor. You can abort moving a map"
" by hitting 'Escape' or by right-clicking."
msgstr ""

#: ../../manual/worlds.rst:92
msgid ""
"Alternatively you can use the arrow keys to move the current selected map"
" - holding Shift will perform bigger steps."
msgstr ""

#: ../../manual/worlds.rst:98
msgid "Saving World files"
msgstr ""

#: ../../manual/worlds.rst:96
msgid ""
"You can save manipulated world files by using the *World > Save World* "
"menu. Worlds will also automatically be saved if you launch any external "
"tool that has the 'Save Map Before Executing' option enabled."
msgstr ""

#: ../../manual/worlds.rst:101
msgid "Using Pattern Matching"
msgstr ""

#: ../../manual/worlds.rst:103
msgid ""
"For projects where the maps follow a certain naming style that allows the"
" location of each map in the world to be derived from the file name, a "
"regular expression can be used in combination with a multiplier and an "
"offset."
msgstr ""

#: ../../manual/worlds.rst:109
msgid ""
"Currently no interface exists in Tiled to define a world using pattern "
"matching, nor can it be modified. World files with patterns have to be "
"manually edited."
msgstr ""

#: ../../manual/worlds.rst:113
msgid "Here is an example:"
msgstr ""

#: ../../manual/worlds.rst:130
msgid ""
"The regular expression is matched on all files that live in the same "
"directory as the world file. It captures two numbers, the first is taken "
"as ``x`` and the second as ``y``. These will then be multiplied by "
"``multiplierX`` and ``multiplierY`` respectively, and finally ``offsetX``"
" and ``offsetY`` are added. The offset exists mainly to allow multiple "
"sets of maps in the same world to be positioned relative to each other. "
"The final value becomes the position (in pixels) of each map."
msgstr ""

#: ../../manual/worlds.rst:141
msgid "World of Alchemic Cutie"
msgstr ""

#: ../../manual/worlds.rst:141
msgid ""
"The island from `Alchemic Cutie <https://alchemiccutie.com/>`__, using "
"patterns to automatically show each map at the right location."
msgstr ""

#: ../../manual/worlds.rst:144
msgid ""
"A world definition can use a combination of manually defined maps and "
"patterns."
msgstr ""

#: ../../manual/worlds.rst:148
msgid "Showing Only Direct Neighbors"
msgstr ""

#: ../../manual/worlds.rst:150
msgid ""
"Tiled takes great care to only load each map, tileset and image once, but"
" sometimes the world is just too large for it to be loaded completely. "
"Maybe there is not enough memory, or rendering the entire map is too "
"slow."
msgstr ""

#: ../../manual/worlds.rst:154
msgid ""
"In this case, there is an option to only load the direct neighbors of the"
" current map. Add ``\"onlyShowAdjacentMaps\": true`` to the top-level "
"JSON object."
msgstr ""

#: ../../manual/worlds.rst:157
msgid ""
"To make this possible, not only the position but also the size of each "
"map needs to be defined. For individual maps, this is done using "
"``width`` and ``height`` properties. For patterns, the properties are "
"``mapWidth`` and ``mapHeight``, which default to the defined multipliers "
"for convenience. All values are in pixels."
msgstr ""

#: ../../manual/worlds.rst:165
msgid ""
"In the future, a property could be added to allow specifying a distance "
"around the current map in which other maps are loaded."
msgstr ""

#~ msgid ""
#~ "Automapping is an advanced tool to "
#~ "automatically search certain combinations of"
#~ " tiles across layers in a map "
#~ "and to replace these parts by "
#~ "other combination. This allows the user"
#~ " to draw structures with a minimum"
#~ " of time spent and the Automapping"
#~ " will be able to generate a "
#~ "rather complex scenario, which would "
#~ "need lots more time if manually "
#~ "crafted."
#~ msgstr ""
#~ "Automaattinen kartoitus on kehittynyt työkalu,"
#~ " joka etsii automaattisesti tiettyjä "
#~ "ruutukombinaatioita kartan tasoista ja korvaa"
#~ " nämä osat muulla yhdistelmällä. Tämän "
#~ "avulla käyttäjä voi piirtää rakenteita "
#~ "minimaalisesti vietetyllä ajanjaksolla ja "
#~ "automaattinen kartoitus voi luoda melko "
#~ "monimutkaisia skenaariota, joka voisivat viedä"
#~ " paljon enemmän aikaa, jos ne "
#~ "olisivat käsin muotoiltu."

#~ msgid ""
#~ "So the goal of Automapping is that"
#~ " you only need to draw within "
#~ "one layer and everything else is "
#~ "setup for you. This brings some "
#~ "advantages:"
#~ msgstr ""
#~ "Automaattisen kartoituksen tavoitteena on, "
#~ "että sinun tarvitsee vain piirtää yksi"
#~ " kerros ja kaikki muu on määritetty"
#~ " valmiiksi. Tämä tuo joitakin etuja:"

#~ msgid "**Working speed** - you need less time to setup a map."
#~ msgstr "**Työnopeus** - tarvitset vähemmän aikaa kartan määrittämiseen."

#~ msgid ""
#~ "**Less errors** - the main reason "
#~ "is to reduce the error rate. If"
#~ " you have setup the rules properly,"
#~ " there is no hidden error."
#~ msgstr ""
#~ "**Vähemmän virheitä** - pääsyy on "
#~ "vähentää virhetasoa. Jos olet asettanut "
#~ "säännöt oikein, piileviä virheitä ei "
#~ "ole."

#~ msgid "External Links"
#~ msgstr "Ulkoiset linkit"

#~ msgid ""
#~ "`Automapping explained for Tiled 0.9 and"
#~ " later (YouTube) "
#~ "<http://www.youtube.com/watch?v=UUi0lD1pxyQ>`__"
#~ msgstr ""
#~ "`Automaattikartoitus on selitetty Tiled 0.9"
#~ " versiossa tai uudemmassa (YouTube) "
#~ "<http://www.youtube.com/watch?v=UUi0lD1pxyQ>`__"

#~ msgid ""
#~ "`Examples on Automapping "
#~ "<https://github.com/stefanbeller/tiled_examples>`__"
#~ msgstr ""
#~ "`Esimerkkejä automaattikartoituksesta "
#~ "<https://github.com/stefanbeller/tiled_examples>`__"

#~ msgid ""
#~ "`Tiled Map Editor Tutorial Part Three:"
#~ " AutoMap (YouTube) <https://youtu.be/A_A6rz7cvG4>`__"
#~ msgstr ""
#~ "`Tiled karttamuokkain Opasohjelman kolmas osa:"
#~ " Automaattikartoitus (YouTube) "
#~ "<https://youtu.be/A_A6rz7cvG4>`__"

#~ msgid "Setting it Up"
#~ msgstr "Käyttöönotto"

#~ msgid ""
#~ "The Automapping feature is looking for"
#~ " a text file called 'rules.txt' in"
#~ " the folder where the current map "
#~ "is located. Each line in this text"
#~ " file is either"
#~ msgstr ""
#~ "Automaattinen kartoitus ominaisuus etsii "
#~ "rules.txt nimistä tekstitiedostoa siitä "
#~ "kansiosta mihin kartta tiedosto on "
#~ "sijoitettu. Jossa jokainen tämän "
#~ "tekstitiedoston rivi on"

#~ msgid "or is a comment which is indicated by **#** or **//**"
#~ msgstr "tai on kommentti, joka merkitään **#** tai **//**"

#~ msgid "An automapping **rulefile** consists of 4 major parts:"
#~ msgstr ""
#~ "Automaattikartoitus **sääntötiedosto**, joka koostuu"
#~ " neljästä tärkeästä osasta:"

#~ msgid ""
#~ "The definition of regions describes "
#~ "which locations of the rulemap are "
#~ "actually used to create Automapping "
#~ "rules."
#~ msgstr ""
#~ "Alueen määritelmässä kuvataan, mitä alueita"
#~ " sääntökartassa käytetään automaattikartoitusta "
#~ "koskevien sääntöjen luomiseen."

#~ msgid ""
#~ "The map properties are used to "
#~ "fine-tune the input pattern localization"
#~ " and the output of all rules "
#~ "within this rules file."
#~ msgstr ""
#~ "Kartan ominaisuuksien avulla voit hienosäätää"
#~ " syöttökuvion lokalisointia ja kaikkien "
#~ "tämän sääntöjen sisältämien sääntöjen "
#~ "tulosteita."

#~ msgid "Defining the Regions"
#~ msgstr "Alueiden määritteleminen"

#~ msgid ""
#~ "There must be either a tile layer"
#~ " called **regions** or there must be"
#~ " the both tile layers **regions\\_input**"
#~ " and **regions\\_output**. Using the "
#~ "**regions** layer, the region defined "
#~ "for input and output is the same."
#~ " Using the different layers "
#~ "**regions\\_input** and **regions\\_output** "
#~ "delivers the possibility to have "
#~ "different regions for the input section"
#~ " and the output section. The region"
#~ " layer(s) are only used to mark "
#~ "regions, where an Automapping rule "
#~ "exists. Therefore it does not matter "
#~ "which tiles are used in this "
#~ "layer, since these tiles are just "
#~ "used to define a region. So either"
#~ " use any tile or no tile at "
#~ "a coordinate to indicate if that "
#~ "coordinate belongs to a rule or if"
#~ " it doesn't."
#~ msgstr ""

#~ msgid ""
#~ "If multiple rules are defined in "
#~ "one rulemap file, the regions must "
#~ "not be adjacent. That means there "
#~ "must be at least one tile of "
#~ "unused space in between two rules. "
#~ "If the regions are adjacent (coherent)"
#~ " then both regions are interpreted as"
#~ " one rule."
#~ msgstr ""
#~ "Jos samassa sääntökarttatiedostossa on "
#~ "määritelty useita sääntöjä, alueet eivät "
#~ "saa olla vierekkäisiä. Tämä tarkoittaa, "
#~ "että kahden säännön välissä on oltava"
#~ " vähintään yksi laatta käyttämätöntä tilaa."
#~ " Jos alueet ovat vierekkäisiä (yhtenäisiä),"
#~ " molemmat alueet tulkitaan yhdeksi "
#~ "säännöksi."

#~ msgid "Multiple Rules in One Rulefile"
#~ msgstr "Useita sääntöjä yhdessä sääntötiedostossa"

#~ msgid ""
#~ "Of course multiple rules are possible"
#~ " in one rulemap. If you want to"
#~ " have the rules applied in a "
#~ "certain sequence, you should use "
#~ "multiple **rulefiles** and define the "
#~ "sequence within the **rules.txt** file. "
#~ "As of now there also is a "
#~ "certain sequence within one rulemapfile. "
#~ "Generally speaking the regions with "
#~ "small y value come first. If there"
#~ " are regions at the same y "
#~ "value, then the x value is taken"
#~ " into account. On orthogonal maps "
#~ "this ordering scheme is the same "
#~ "as for reading in most western "
#~ "countries. (Left to right, top to "
#~ "down). The order within one rulemap "
#~ "may be changed later, once tiled "
#~ "is capable of utilizing multiple "
#~ "threads/processors. So if you want to"
#~ " rely on a certain sequence, use "
#~ "different rulemaps and order these in"
#~ " the rules.txt"
#~ msgstr ""

#~ msgid ""
#~ "Inputs are generally defined by tile "
#~ "layers which name follows this scheme:"
#~ msgstr ""
#~ "Tulokset määritetään yleensä laattatasoilla, "
#~ "joiden nimi noudattaa tätä kaaviota:"

#~ msgid "**input[not][index]\\_name**"
#~ msgstr "**input[not][index]\\_name**"

#~ msgid ""
#~ "where the **[not]** and **[index]** are"
#~ " optional. After the first underscore "
#~ "there will be the name of the "
#~ "input layer. The input layer name "
#~ "can of course include more underscores."
#~ msgstr ""
#~ "jossa **[not]** ja **[index]** ovat "
#~ "valinnaisia. Ensimmäisen alaviivan jälkeen "
#~ "tulee syöttötason nimi. Syöttötason nimi "
#~ "voi tietysti sisältää enemmän alaviivoja."

#~ msgid ""
#~ "The **name** determines which layer on"
#~ " the working map is examined. So "
#~ "for example the layer *input\\_Ground* "
#~ "will check the layer called *Ground* "
#~ "in the working map for this rule."
#~ " *input\\_test\\_case* will check the layer"
#~ " *test\\_case* in the working map for"
#~ " this rule."
#~ msgstr ""
#~ "**nimi** määrittää, mikä työkartan taso "
#~ "tutkitaan. Joten esimerkiksi taso "
#~ "*input\\_Ground* tarkistaa tämän säännön "
#~ "työkartassa olevan *Ground*-nimisen tason. "
#~ "*input\\_test\\_case* tarkistaa tämän säännön "
#~ "työkartan tason *test\\_case*."

#~ msgid ""
#~ "Multiple layers having the same name "
#~ "and index is explicitly allowed and "
#~ "is intended. Having multiple layers of"
#~ " the same name and index , will"
#~ " allow you to define different "
#~ "possible tiles per coordinate as input."
#~ msgstr ""
#~ "Useat tasot, joilla on sama nimi "
#~ "ja indeksi, ovat nimenomaisesti sallittuja "
#~ "ja tarkoitettuja. Kun sinulla on useita"
#~ " samannimisiä ja -indeksisiä tasoja, voit"
#~ " määritellä erilaisia mahdollisia laattoja "
#~ "koordinaatteja kohti."

#~ msgid ""
#~ "The index is used to create "
#~ "complete different input conditions. All "
#~ "layers having the same index are "
#~ "taken into account for forming one "
#~ "condition. Each of these conditions are"
#~ " checked individually."
#~ msgstr ""
#~ "Indeksiä käytetään täysin erilaisten "
#~ "syöttöehtojen luomiseen. Kaikki tasot, joilla"
#~ " on sama indeksi, otetaan huomioon "
#~ "yhden ehdon muodostamisessa. Kukin näistä "
#~ "ehdoista tarkistetaan erikseen."

#~ msgid "index must not contain an underscore."
#~ msgstr "indeksi ei saa sisältää alaviivaa."

#~ msgid "index must not start with *not*"
#~ msgstr ""

#~ msgid "index may be empty."
#~ msgstr "indeksi voi olla tyhjä."

#~ msgid ""
#~ "If there are tiles in the standard"
#~ " input layers one of these tiles "
#~ "must be there to match the rule."
#~ " The optional **[not]** inverts the "
#~ "meaning of that layer. So if there"
#~ " are **inputnot** layers, the tiles "
#~ "placed on them, must not occur in"
#~ " the working map at the examined "
#~ "region to make a rule match. "
#~ "Within one rule you can combine "
#~ "the usage of both input and "
#~ "inputnot layers to make rules input "
#~ "conditions as accurate as you need "
#~ "or as fuzzy as you need."
#~ msgstr ""

#~ msgid "Definition of Outputs"
#~ msgstr ""

#~ msgid "Outputs are generally defined by layers whichs name follows this scheme"
#~ msgstr ""

#~ msgid "**output[index]\\_name**"
#~ msgstr ""

#~ msgid ""
#~ "which is very similar to the input"
#~ " section. At first there must be "
#~ "the word output. Then optionally an "
#~ "**[index]** may occur. After the first"
#~ " underscore there will be the name"
#~ " of the target layer. The target "
#~ "layer name can of course include "
#~ "more underscores."
#~ msgstr ""

#~ msgid ""
#~ "All layers of the same index are"
#~ " treated as one possible output. So"
#~ " the intention of indexes in the "
#~ "outputs of rules is only used for"
#~ " random output."
#~ msgstr ""

#~ msgid ""
#~ "The indexes in the output section "
#~ "have nothing to do with the "
#~ "indexes in the input section, they "
#~ "are independent. In the output section"
#~ " they are used for randomness. In "
#~ "the input section they are used to"
#~ " define multiple possible layers as "
#~ "input. So when there are multiple "
#~ "indexes within one rule, the output "
#~ "will be chosen fairly (uniformly "
#~ "distributed) across all indexes. So a"
#~ " dice will be rolled and one "
#~ "index is picked. All of the output"
#~ " layers carrying this index will be"
#~ " put out into the working map "
#~ "then."
#~ msgstr ""

#~ msgid ""
#~ "Note that the output is not being"
#~ " checked for overlapping itself. This "
#~ "can be achieved by setting the map"
#~ " property **NoOverlappingRules** to true."
#~ msgstr ""

#~ msgid ""
#~ "There are three different map "
#~ "properties, which can be used to "
#~ "add additional information to a "
#~ "**rulefile**:"
#~ msgstr ""

#~ msgid ""
#~ "**DeleteTiles** - This map property is"
#~ " a boolean property: it can be "
#~ "true or false. If rules of this"
#~ " rulefile get applied at some "
#~ "location in your map, this map "
#~ "property determines if all other tiles"
#~ " are deleted before applying the "
#~ "rules. Consider a map where you "
#~ "have multiple layers. Not all layers "
#~ "are filled at all places. In that"
#~ " case all tiles of all layers "
#~ "should be cleared, so afterwards there"
#~ " are only the tiles which are "
#~ "defined by the rules. Since when "
#~ "not all tiles are cleared before, "
#~ "you will have still tiles from "
#~ "before at these places, which are "
#~ "not covered by any tile."
#~ msgstr ""

#~ msgid ""
#~ "**AutomappingRadius** - This map property "
#~ "is a number: 1, 2, 3 ... It"
#~ " determines how many tiles around "
#~ "your changes will be checked as "
#~ "well for redoing the Automapping at "
#~ "live Automapping."
#~ msgstr ""

#~ msgid ""
#~ "**NoOverlappingRules** - This map property "
#~ "is a boolean property: A rule is"
#~ " not allowed to overlap on itself."
#~ msgstr ""

#~ msgid ""
#~ "These properties are map wide, meaning"
#~ " it applies to all rules which "
#~ "are part of the rulemap. If you"
#~ " need rules with different properties, "
#~ "you can use multiple rulemaps."
#~ msgstr ""

#~ msgid "Converting Rules From 0.8 and Below"
#~ msgstr ""

#~ msgid ""
#~ "There is a tool **automappingconverter** "
#~ "along in your distribution to convert"
#~ " the rules created for previous "
#~ "versions of Tiled to version 0.9 "
#~ "and later."
#~ msgstr ""

#~ msgid ""
#~ "If you are compiling tiled from "
#~ "scratch the tool is found in the"
#~ " in **/bin/** folder."
#~ msgstr ""

#~ msgid "The changes for conversion are only layer renaming:"
#~ msgstr ""

#~ msgid "Previous **RuleRegion** will be named **regions**"
#~ msgstr ""

#~ msgid "Previous **RuleSet** will be named **input\\_set**"
#~ msgstr ""

#~ msgid "Previous **RuleNotSet** will be named **inputnot\\_set**"
#~ msgstr ""

#~ msgid "Previous **Rule\\_\\*** will be named **output\\_\\***"
#~ msgstr ""

#~ msgid ""
#~ "All of the examples are for "
#~ "version 0.9 and later. If you want"
#~ " to see examples for tiled version"
#~ " 0.8 and below, `have a look in"
#~ " this archive. "
#~ "<https://github.com/stefanbeller/tiled_examples/zipball/v0.8andbefore>`__"
#~ msgstr ""

#~ msgid "Abstract Input Layer Examples"
#~ msgstr ""

#~ msgid "Having Multiple Input Layers with the Same Name"
#~ msgstr ""

#~ msgid ""
#~ "Assume the following 3 tile layers "
#~ "as input, which possible inputs are "
#~ "there in the working map?"
#~ msgstr ""

#~ msgid "Tile layer"
#~ msgstr ""

#~ msgid "input\\_Ground"
#~ msgstr ""

#~ msgid "The following parts would be detected as matches for this rule:"
#~ msgstr ""

#~ msgid "Input Layers Using Different Indexes"
#~ msgstr ""

#~ msgid "Given the following 3 input tile layers:"
#~ msgstr ""

#~ msgid "input2\\_Ground"
#~ msgstr ""

#~ msgid ""
#~ "The last layer has an index "
#~ "unequal to the other indexes (which "
#~ "are empty). All following parts would"
#~ " be recognized as matches within the"
#~ " working map:"
#~ msgstr ""

#~ msgid "The Mana World Examples"
#~ msgstr ""

#~ msgid ""
#~ "The Mana world examples will demonstrate"
#~ " quite a lot of different Automapping"
#~ " features. At first a shoreline will"
#~ " be constructed, by first adding all"
#~ " the straight parts and afterwards "
#~ "another rule will correct the corners"
#~ " to make them also fit the "
#~ "given tileset. After the shoreline has"
#~ " been added, the waters will be "
#~ "marked as unwalkable for the game "
#~ "engine. Last but not least the "
#~ "grass should be tiles should be "
#~ "made random by using 5 different "
#~ "grasss tiles."
#~ msgstr ""

#~ msgid "This is what we want to draw."
#~ msgstr ""

#~ msgid "Here we have straight shorelines applied."
#~ msgstr ""

#~ msgid "Here we have some corners."
#~ msgstr ""

#~ msgid "And corners the other way round as well."
#~ msgstr ""

#~ msgid "Here all unwalkable tiles are marked."
#~ msgstr ""

#~ msgid "If you look closely at the grass, you'll see they are now randomized."
#~ msgstr ""

#~ msgid "Basic Shoreline"
#~ msgstr ""

#~ msgid ""
#~ "This example will demonstrate how a "
#~ "straight shoreline can easily be setup"
#~ " between shallow water grass tiles. "
#~ "In this example we will only "
#~ "implement the shoreline, which has grass"
#~ " in southern and water in northern"
#~ " direction."
#~ msgstr ""

#~ msgid ""
#~ "So basically the meaning we will "
#~ "define in the input region is: "
#~ "*All tiles which are south of a"
#~ " water tile and are no water "
#~ "tiles itself, will be replaced by "
#~ "a shoreline tile*"
#~ msgstr ""

#~ msgid "regions"
#~ msgstr ""

#~ msgid "output\\_Ground"
#~ msgstr ""

#~ msgid ""
#~ "The region in which this Automapping "
#~ "rule should be defined is of 2 "
#~ "tiles in height and 1 tile in "
#~ "width. Therefore we need a layer "
#~ "called *regions* and it will have "
#~ "2 tiles placed to indicate this "
#~ "region."
#~ msgstr ""

#~ msgid ""
#~ "The input layer called *input\\_Ground* "
#~ "is depicted in the middle. Only "
#~ "the upper tile is filled by the"
#~ " water tile. The lower tile contains"
#~ " no tile. It is not an "
#~ "invisible tile, just no tile at "
#~ "all."
#~ msgstr ""

#~ msgid ""
#~ "And whenever there is no tile in"
#~ " a place within the rule regions "
#~ "in an input layer, what kind of"
#~ " tiles will be allowed there? There"
#~ " will be allowed any tiles except "
#~ "all used tiles within all input "
#~ "layer with the same index and "
#~ "name."
#~ msgstr ""

#~ msgid ""
#~ "Here we only have one tile layer"
#~ " as an input layer carrying only "
#~ "the water tile. Hence at the "
#~ "position, where no tile is located, "
#~ "all tiles except that water tile "
#~ "are allowed."
#~ msgstr ""

#~ msgid ""
#~ "The output layer called *output\\_Ground* "
#~ "shows the tile which gets placed, "
#~ "if this rule matches."
#~ msgstr ""

#~ msgid "Corners on a Shore Line"
#~ msgstr ""

#~ msgid ""
#~ "This example is a continuation of "
#~ "the previous example. Now the corners"
#~ " of the given shoreline should be "
#~ "implemented automatically. Within this article"
#~ " we will just examine the bent "
#~ "in corner shoreline in the topleft "
#~ "corner. The other shoreline corners are"
#~ " constructed the same way. So after"
#~ " the example is applied, we would "
#~ "like to have the corners of the"
#~ " shoreline get suitable tiles. Since "
#~ "we rely on the other example being"
#~ " finished, we will put the rules "
#~ "needed for the corners into another "
#~ "new rulefile. (which is listed "
#~ "afterwards in rules.txt)"
#~ msgstr ""

#~ msgid ""
#~ "The shoreline may have some more "
#~ "corners nearby, which means there may"
#~ " be more different tiles than the "
#~ "straigt corner lines. In the figure "
#~ "we see all inputs which should be"
#~ " covered."
#~ msgstr ""

#~ msgid ""
#~ "Both the tiles in the top right"
#~ " corner and in the lower left "
#~ "corner are directly adjacent to the "
#~ "desired (slightly transparent) tile in "
#~ "the top left corner."
#~ msgstr ""

#~ msgid ""
#~ "We can see 3 different tiles for"
#~ " the lower left corner, which is "
#~ "straight shore line, bent inside and "
#~ "bend outside shore lines."
#~ msgstr ""

#~ msgid ""
#~ "Also we see 3 different inputs for"
#~ " the top right corner, which also "
#~ "is straight, bent in or out shore"
#~ " line."
#~ msgstr ""

#~ msgid ""
#~ "So with this rule we want to "
#~ "put the bent in shore line tile"
#~ " in the top left corner, hence "
#~ "we don't care which tile has been"
#~ " there before. Also we don't care "
#~ "about the tile in the lower right"
#~ " corner. (probably water, but can be"
#~ " any decorative watertile, so just "
#~ "ignore it)."
#~ msgstr ""

#~ msgid ""
#~ "Therefore we will need different input"
#~ " and output regions. In the figure"
#~ " we can see the both tilelayers "
#~ "regions input and regions output. The"
#~ " input section covers just these two"
#~ " tiles as we discussed. The output"
#~ " region covers just the single tile"
#~ " we want to output. Though the "
#~ "input and output region do not "
#~ "overlap, the united region of both "
#~ "the input and the output region is"
#~ " still one coherent region, so it's"
#~ " one rule and works."
#~ msgstr ""

#~ msgid ""
#~ "Output regions can be larger than "
#~ "absolutely required, since when there "
#~ "are no tiles in the Output "
#~ "section, the tiles in the working "
#~ "map are not overwritten but just "
#~ "kept as is, hence the Output "
#~ "region could also be sized as the"
#~ " united region of both the output "
#~ "and input region."
#~ msgstr ""

#~ msgid "regions\\_input"
#~ msgstr ""

#~ msgid ""
#~ "Now we want to put all the "
#~ "nine possible patterns we observed as"
#~ " possible input for this rule. We "
#~ "could of course define nine different"
#~ " layers *input1\\_Ground* up to "
#~ "*input9\\_Ground*"
#~ msgstr ""

#~ msgid "Nine TileLayers?! what a mess, we'll put it in a better way."
#~ msgstr ""

#~ msgid ""
#~ "Also consider not having just 3 "
#~ "possible tiles at the 2 locations "
#~ "but 4. Then we would need 4\\*4=16"
#~ " tilelayers to get all conditions. "
#~ "Another downside of this comes with "
#~ "more needed locations: Think of more "
#~ "than 2 locations needed to construct "
#~ "a ruleinput. So for 3 locations, "
#~ "then each location could have the "
#~ "3 possibilites, hence you need 3\\*3\\*3"
#~ " = 27 tilelayers. It's not getting"
#~ " better..."
#~ msgstr ""

#~ msgid ""
#~ "So let's try a smart way: All "
#~ "input layers have the same name, "
#~ "so at each position any of the "
#~ "three different tiles is valid."
#~ msgstr ""

#~ msgid "outputs"
#~ msgstr ""

#~ msgid ""
#~ "The output is straight forward, since"
#~ " only one tile is needed. No "
#~ "randomness is needed, hence the index"
#~ " is not needed to be varied, so"
#~ " it's kept empty. The desired output"
#~ " layer is called Ground, so the "
#~ "over all name of the single output"
#~ " layer will be output Ground. At "
#~ "this single layer at the correct "
#~ "location the correct tile is placed."
#~ msgstr ""

#~ msgid "The Other Corners on a Shore Line"
#~ msgstr ""

#~ msgid ""
#~ "This is for corners bent the other"
#~ " way round. Basically it has the "
#~ "same concepts, just other tiles."
#~ msgstr ""

#~ msgid "regions\\_output"
#~ msgstr ""

#~ msgid "Adding Collision Tiles"
#~ msgstr ""

#~ msgid ""
#~ "The Mana World uses an extra tile"
#~ " layer called *Collision* to have "
#~ "information about whether a player is"
#~ " able to walk at certain tiles "
#~ "or if it is not. That layer "
#~ "is invisible to the player, but "
#~ "the game engine parses it, whether "
#~ "there is a tile or there is "
#~ "no tile."
#~ msgstr ""

#~ msgid ""
#~ "So we need to decide for each "
#~ "position if a player can walk "
#~ "there and put a tile into the "
#~ "*Collision* layer if it is unwalkable."
#~ msgstr ""

#~ msgid ""
#~ "As *input* layer we will parse the"
#~ " *Ground* layer and put collision "
#~ "tiles where the player should not "
#~ "walk."
#~ msgstr ""

#~ msgid ""
#~ "Actually this task is a bunch of"
#~ " rules, but each rule itself is "
#~ "very easy:"
#~ msgstr ""

#~ msgid "output\\_Collision"
#~ msgstr ""

#~ msgid ""
#~ "In the above *regions* layer we "
#~ "have 14 different rules, because there"
#~ " are 14 incoherent regions in the "
#~ "*regions* layer. That's 9 different "
#~ "water tiles, which should be unwalkable"
#~ " and 5 different grass tiles which"
#~ " will be placed randomly in the "
#~ "next example."
#~ msgstr ""

#~ msgid ""
#~ "As input we will have one of "
#~ "all the used tiles and as output"
#~ " there is either a tile in the"
#~ " *Collision* layer or not."
#~ msgstr ""

#~ msgid ""
#~ "**Do we need the rules with clean"
#~ " output?** No, it is not needed "
#~ "for one run of Automapping. But if"
#~ " you are designing a map, you "
#~ "will likely add areas with collision "
#~ "and then remove some parts of it"
#~ " again and so on."
#~ msgstr ""

#~ msgid ""
#~ "So we need to also remove the "
#~ "collision tiles from positions, which "
#~ "are not marked by a collision any"
#~ " more. This can be done by "
#~ "adding the map property *DeleteTiles* "
#~ "and setting it to *yes* or *true*."
#~ " Then all the parts in the "
#~ "*Collision* layer will be erased before"
#~ " the Automapping takes place, so the"
#~ " collision tiles are only placed at"
#~ " real unwalkable tiles and the "
#~ "history if there has been a "
#~ "collision place is neglected."
#~ msgstr ""

#~ msgid "Random Grass Tiles"
#~ msgstr ""

#~ msgid ""
#~ "In this example we will shuffle "
#~ "all grass tiles, so one grass "
#~ "tiles will be replaced with another "
#~ "randomly chosen tile."
#~ msgstr ""

#~ msgid ""
#~ "As input we will choose all of "
#~ "our grass tiles. This is done by"
#~ " having each tile in its own "
#~ "input layer, so each grass tile "
#~ "gets accepted for this rule."
#~ msgstr ""

#~ msgid ""
#~ "As output we will also put each"
#~ " grass tile into one output layer."
#~ " To make it random the *index* "
#~ "of the output layers needs to be"
#~ " different for each layer."
#~ msgstr ""

#~ msgid ""
#~ "The following rule might look always "
#~ "the same, but there are different "
#~ "grass tiles. Each grass tile is in"
#~ " both one of the input and one"
#~ " of the output layers (the order "
#~ "of the layers doesn't matter)."
#~ msgstr ""

#~ msgid "output1\\_Ground"
#~ msgstr ""

#~ msgid "output2\\_Ground"
#~ msgstr ""

#~ msgid "output3\\_Ground"
#~ msgstr ""

#~ msgid "output4\\_Ground"
#~ msgstr ""

#~ msgid "output5\\_Ground"
#~ msgstr ""

#~ msgid "An alternating wall"
#~ msgstr ""

#~ msgid ""
#~ "This example will demonstrate how a "
#~ "wall as a transition between a "
#~ "walkable area and the non-walkable "
#~ "black void can easily be setup. As"
#~ " input a dedicated set layer will "
#~ "be used."
#~ msgstr ""

#~ msgid ""
#~ "In my opinion a dedicated set "
#~ "layer is much easier to use for"
#~ " the rough draft, but for adding "
#~ "details such as collision information on"
#~ " decorative tiles the input should "
#~ "use the decoration."
#~ msgstr ""

#~ msgid ""
#~ "The structure of the input, output "
#~ "and region layer is very similar "
#~ "to the example of the straight "
#~ "shoreline in The Mana World examples."
#~ " The main difference is the different"
#~ " size. Since the wall contains "
#~ "multiple tiles in height, the height "
#~ "of the rulelayers is different as "
#~ "well. Vertically the tiles are also "
#~ "alternating. As you can see in the"
#~ " following figure, every second tile "
#~ "displaying the base board of the "
#~ "wall has a notch for example."
#~ msgstr ""

#~ msgid "output\\_Walls"
#~ msgstr ""

#~ msgid ""
#~ "Hence the region in which this "
#~ "Automapping rule should be defined is"
#~ " of 4 tiles in height and 2 "
#~ "tile in width. Therefore we need a"
#~ " layer called *regions* and it will"
#~ " have 8 tiles placed to indicate "
#~ "this region. In the figure the top"
#~ " graphics shows such a region layer."
#~ msgstr ""

#~ msgid "The input layer has the following meaning:"
#~ msgstr ""

#~ msgid ""
#~ "*If there are 2 vertical adjacent "
#~ "brown tiles in the set layer and"
#~ " in the 3x2 tiles above here "
#~ "are no brown tiles, this rule "
#~ "matches.*"
#~ msgstr ""

#~ msgid ""
#~ "Only the lowest 2 coordinates contain"
#~ " the brown tile. The upper "
#~ "coordinates contains no tile. (It is "
#~ "not an invisible tile, just no "
#~ "tile at all.) The input layer "
#~ "called *Input\\_set* is depicted in the"
#~ " middle of the figure."
#~ msgstr ""

#~ msgid ""
#~ "The output consists of only one "
#~ "layer as well called *Output\\_Walls*. "
#~ "It contains the actual wall tiles."
#~ msgstr ""

#~ msgid "Vertically the tiles are alternating."
#~ msgstr ""

#~ msgid "A broken version of the rule, *NoOverlappingRules* was not yet set."
#~ msgstr ""

#~ msgid ""
#~ "When trying to match the input "
#~ "layer to the desired set layer "
#~ "(right picture of the figure at "
#~ "the beginning of the example, you "
#~ "will see it matches all way long,"
#~ " no matter of the vertical "
#~ "adjustment."
#~ msgstr ""

#~ msgid ""
#~ "Hence when we use the rule as "
#~ "discussed now, we will get not the"
#~ " desired result, but this rule "
#~ "overlaps itself. The overlapping problem "
#~ "is shown in figure above."
#~ msgstr ""

#~ msgid ""
#~ "Since the overlapping is not desired,"
#~ " we can turn it off by adding"
#~ " a map property to the rulemap "
#~ "*NoOverlappingRules* and setting it to "
#~ "*true*"
#~ msgstr ""

#~ msgid ""
#~ "Keep in mind that the map property"
#~ " applies for all rules on that "
#~ "rule map."
#~ msgstr ""

#~ msgid ""
#~ "Custom properties are displayed in the"
#~ " Properties view. This view is "
#~ "context-sensitive, usually displaying the "
#~ "properties of the last selected object."
#~ " For tiles in a tileset or "
#~ "objects on an object layer, it "
#~ "also supports multi-selection."
#~ msgstr ""

#~ msgid ""
#~ "When you add a property (using the"
#~ " '+' button at the bottom of "
#~ "the Properties view), you are prompted"
#~ " for its name and its type. "
#~ "Currently Tiled supports the following "
#~ "basic property types:"
#~ msgstr ""

#~ msgid "Predefining Properties"
#~ msgstr ""

#~ msgid "General Setup"
#~ msgstr ""

#~ msgid ""
#~ "Usually you only use a limited set"
#~ " of object types in your game, "
#~ "and each type of object has a "
#~ "fixed set of possible properties, with"
#~ " specific types and default values. "
#~ "To save you time, Tiled allows "
#~ "predefining these properties based on "
#~ "the \"Type\" field for objects. You "
#~ "can set this up using the Object"
#~ " Types Editor, available from the "
#~ "*View* menu."
#~ msgstr ""

#~ msgid "Object Types Editor"
#~ msgstr ""

#~ msgid ""
#~ "By default, Tiled stores these object"
#~ " types in the user settings. However,"
#~ " since you'll often want to share "
#~ "them with other people in your "
#~ "project, you can export your object "
#~ "types or change the storage location "
#~ "of the object types file. A simple"
#~ " XML or JSON file with self-"
#~ "explanatory contents is used to store"
#~ " your object types."
#~ msgstr ""

#~ msgid ""
#~ "The color not only affects the "
#~ "rendering of the various shapes of "
#~ "objects, but is also the color of"
#~ " the label which will show up "
#~ "if you give your object a name."
#~ msgstr ""

#~ msgid ""
#~ "To make the predefined properties show"
#~ " up in the Properties view, all "
#~ "you need to do is to enter "
#~ "the name of the type in the "
#~ "built-in \"Type\" property. Usually this"
#~ " is what you're doing already anyway"
#~ " to tell your engine what kind "
#~ "of object it is dealing with."
#~ msgstr ""

#~ msgid ""
#~ "If you're using :ref:`tile objects "
#~ "<insert-tile-tool>`, you can set the"
#~ " type on the tile to avoid "
#~ "having to set it on each object"
#~ " instance. Setting the type on the"
#~ " tile makes the predefined properties "
#~ "visible when having the tile selected,"
#~ " allowing to override the values. It"
#~ " also makes those possibly overridden "
#~ "values visible when having a tile "
#~ "object instance selected, again allowing "
#~ "you to override them."
#~ msgstr ""

#~ msgid ""
#~ "An example use-case for this would"
#~ " be to define custom types like "
#~ "\"NPC\", \"Enemy\" or \"Item\" with "
#~ "properties like \"name\", \"health\" or "
#~ "\"weight\". You can then specify values"
#~ " for these on the tiles representing"
#~ " these entities. And when placing "
#~ "those tiles as objects, you can "
#~ "override those values if you need "
#~ "to."
#~ msgstr ""

#~ msgid ""
#~ "**Enumerations**, where you can predefine "
#~ "all possible values and it forms a"
#~ " combo box (`#1211 "
#~ "<https://github.com/bjorn/tiled/issues/1211>`__)."
#~ msgstr ""

#~ msgid ""
#~ "**Object references**, which would allow "
#~ "easily linking objects together and "
#~ "Tiled could display such connections "
#~ "(`#707 <https://github.com/bjorn/tiled/issues/707>`__)."
#~ msgstr ""

#~ msgid ""
#~ "**Dictionary properties**, which would be "
#~ "properties that can contain any number"
#~ " of other properties as children "
#~ "(`#489 <https://github.com/bjorn/tiled/issues/489>`__)."
#~ msgstr ""

#~ msgid ""
#~ "It would also be nice to add "
#~ "support for **limiting property values**, "
#~ "like the length of string properties "
#~ "or a minimum/maximum on number values."
#~ msgstr ""

#~ msgid ""
#~ "Finally, the predefined properties would "
#~ "work very well together with explicit"
#~ " **support for projects**. Then you "
#~ "could switch between different projects "
#~ "or get started on an existing "
#~ "project, without needing to configure "
#~ "Tiled to use the right object type"
#~ " definitions."
#~ msgstr ""

#~ msgid ""
#~ "If you like any of these plans,"
#~ " please help me getting around to "
#~ "it faster by `becoming a patron "
#~ "<https://www.patreon.com/bjorn>`__. The more support"
#~ " I receive the more time I can"
#~ " afford to spend improving Tiled!"
#~ msgstr ""

#~ msgid "Shortcut: ``B``"
#~ msgstr ""

#~ msgid ""
#~ "Activate the *Wang Fill Mode* using "
#~ "the Wang tile button on the tool"
#~ " bar to have the Stamp Brush "
#~ "paint using the Wang methods. This "
#~ "makes adjacent tiles match edge and "
#~ "corner colors to be placed. Wang "
#~ "tiles are described in detail in "
#~ ":doc:`using-wang-tiles`."
#~ msgstr ""

#~ msgid ""
#~ "The Terrain Brush allows for efficient"
#~ " editing with a certain type of "
#~ "corner-based terrain transitions. Setting "
#~ "it up requires associating terrain "
#~ "information with your tiles, which is"
#~ " described in detail in :doc:`Using "
#~ "the Terrain Tool <using-the-terrain-"
#~ "tool>`."
#~ msgstr ""

#~ msgid ""
#~ "Similarly to the :ref:`stamp-tool`, you"
#~ " can draw lines by holding ``Shift``."
#~ " When holding ``Ctrl``, the size of"
#~ " the editing area is reduced to "
#~ "one corner (this currently doesn't work"
#~ " well in combination with drawing "
#~ "lines)."
#~ msgstr ""

#~ msgid ""
#~ "When holding ``Alt``, the editing "
#~ "operations are also applied at a "
#~ "180 degree rotation. This is especially"
#~ " useful when editing strategic maps "
#~ "where two sides need to have equal"
#~ " opportunities. The modifier works well "
#~ "in combination with either ``Shift`` for"
#~ " drawing lines or ``Ctrl`` for "
#~ "reducing the edited area."
#~ msgstr ""

#~ msgid "Wang Brush"
#~ msgstr ""

#~ msgid "Shortcut: ``G``"
#~ msgstr ""

#~ msgid ""
#~ "The Wang Brush works in a very "
#~ "similar way to the :ref:`terrain-tool`,"
#~ " except it uses Wang sets. Key "
#~ "differences are:"
#~ msgstr ""

#~ msgid ""
#~ "Wang tiles support edges as well "
#~ "as corners, whereas terrains only "
#~ "support corners. This makes Wang tiles"
#~ " useful for drawing paths, or fences."
#~ msgstr ""

#~ msgid ""
#~ "The default size is to edit one"
#~ " edge/corner. Holding ``Ctrl`` expands it"
#~ " to the whole tile."
#~ msgstr ""

#~ msgid ""
#~ "If the transition cannot be made "
#~ "on the immediately affected tiles, the"
#~ " operation is aborted."
#~ msgstr ""

#~ msgid ""
#~ "To use the tool, a color must "
#~ "be selected from the Wang color "
#~ "view. Wang tiles and this tool are"
#~ " described in detail in :doc:`using-"
#~ "wang-tiles`."
#~ msgstr ""

#~ msgid "Shortcut: ``F``"
#~ msgstr ""

#~ msgid ""
#~ "The Bucket Fill Tool provides a "
#~ "quick way of filling empty areas "
#~ "or areas covered with the same "
#~ "tiles. The currently active tile stamp"
#~ " will be repeated in the filled "
#~ "area. It can also be used in "
#~ "combination with the *Random Mode*, or"
#~ " *Wang Fill Mode*."
#~ msgstr ""

#~ msgid ""
#~ "When holding ``Shift``, the tool fills"
#~ " the currently selected area regardless "
#~ "of its contents. This is useful "
#~ "for filling custom areas that have "
#~ "been selected previously using one or"
#~ " more `Selection Tools <#selection-"
#~ "tools>`__."
#~ msgstr ""

#~ msgid ""
#~ "**Rectangular Select** allows selection of "
#~ "rectangular areas (shortcut: ``R``)"
#~ msgstr ""

#~ msgid ""
#~ "**Magic Wand** allows selection of "
#~ "connected areas filled with the same "
#~ "tile (shortcut: ``W``)"
#~ msgstr ""

#~ msgid ""
#~ "**Select Same Tile** allows selection of"
#~ " same-tiles across the entire layer"
#~ " (shortcut: ``S``)"
#~ msgstr ""

#~ msgid "``Ctrl + 1-9`` - Store current tile stamp (similar to ``Ctrl + C``)"
#~ msgstr ""

#~ msgid ""
#~ "When the tileset contains isometric "
#~ "tiles, you can set this to "
#~ "*Isometric*. This value, along with the"
#~ " **Grid Width** and **Grid Height** "
#~ "properties, is taken into account by "
#~ "overlays rendered on top of the "
#~ "tiles. This helps for example when "
#~ "specifying :ref:`terrain-information` or "
#~ "editing :ref:`wang-sets`. It also "
#~ "affects the orientation used by the "
#~ ":ref:`tile-collision-editor`."
#~ msgstr ""

#~ msgid "Type"
#~ msgstr "Tyyppi"

#~ msgid ""
#~ "This property refers to custom types "
#~ "defined in the :ref:`Object Types Editor"
#~ " <predefining-properties>`. See the section"
#~ " about :ref:`typed-tiles` for more "
#~ "information."
#~ msgstr ""

#~ msgid ""
#~ "Terrain information can be added to "
#~ "a tileset to enable the use of "
#~ "the the :ref:`terrain-tool`. See the "
#~ "section about :ref:`defining terrain "
#~ "information <define-terrain-information>`."
#~ msgstr ""

#~ msgid "Wang Sets"
#~ msgstr ""

#~ msgid ""
#~ "A tileset can contain any number "
#~ "of Wang sets for use with the "
#~ ":ref:`wang-tool`. See :ref:`defining-wang-"
#~ "tile-info` for more information."
#~ msgstr ""

#~ msgid ""
#~ "Check out the `Tiled2Unity`_ tool by "
#~ "Sean Barton for a great example of"
#~ " what you can do with this "
#~ "information. It can take the collision"
#~ " shapes for all tiles and generate"
#~ " a single collision mesh from it, "
#~ "as demonstrated in the `Mega Dad "
#~ "Adventures`_ post."
#~ msgstr ""

#~ msgid ""
#~ "Drag tiles from the tileset view "
#~ "in the Tile Animation Editor into "
#~ "the list on the left to add "
#~ "animation frames. You can drag multiple"
#~ " tiles at the same time. Each "
#~ "new frame gets a default duration "
#~ "of 100 ms."
#~ msgstr ""

#~ msgid "**Wang Sets**"
#~ msgstr ""

#~ msgid ""
#~ "Make it easier to set up Wang "
#~ "tiles (`#1729 "
#~ "<https://github.com/bjorn/tiled/issues/1729>`__)"
#~ msgstr ""

#~ msgid ""
#~ "Render tile collision shapes to the "
#~ "main map (`#799 "
#~ "<https://github.com/bjorn/tiled/issues/799>`__) or to "
#~ "the tileset view (`#1281 "
#~ "<https://github.com/bjorn/tiled/issues/1281>`__)"
#~ msgstr ""

#~ msgid ""
#~ "Allow changing the default frame "
#~ "duration (`#1631 "
#~ "<https://github.com/bjorn/tiled/issues/1631>`__)"
#~ msgstr ""

#~ msgid ""
#~ "Allow changing the duration of multiple"
#~ " frames at the same time (`#1310 "
#~ "<https://github.com/bjorn/tiled/issues/1310>`__)"
#~ msgstr ""

#~ msgid ""
#~ "While there are many :doc:`libraries and"
#~ " frameworks </reference/support-for-tmx-"
#~ "maps>` that work directly with Tiled "
#~ "maps, Tiled also supports a number "
#~ "of additional file and export formats."
#~ msgstr ""

#~ msgid ""
#~ "Exporting can be done by clicking "
#~ "*File > Export*. When triggering the "
#~ "menu action multiple times, Tiled will"
#~ " only ask for the file name the"
#~ " first time. Exporting can also be"
#~ " automated using the ``--export-map`` "
#~ "command-line parameter."
#~ msgstr ""

#~ msgid ""
#~ ":doc:`The JSON format </reference/json-map-"
#~ "format>` is most common additional file"
#~ " format supported by Tiled. It can"
#~ " be used instead of TMX since "
#~ "Tiled can also open JSON maps and"
#~ " tilesets and the format supports all"
#~ " Tiled features. Especially in the "
#~ "browser and when using JavaScript in "
#~ "general, the JSON format is easier "
#~ "to load."
#~ msgstr ""

#~ msgid ""
#~ "The JSON format is currently the "
#~ "only additional format supported for "
#~ "tilesets."
#~ msgstr ""

#~ msgid ""
#~ "Maps can be exported to Lua code."
#~ " This export option supports most of"
#~ " Tiled's features and is useful when"
#~ " using a Lua-based framework like "
#~ "`LÖVE`_ (with `Simple Tiled Implementation`_),"
#~ " `Corona`_ (with `ponytiled`_ or `Dusk "
#~ "Engine`_) or `Defold`_."
#~ msgstr ""

#~ msgid ""
#~ "Currently not included are the type "
#~ "of custom properties (though the type"
#~ " does affect how a property value "
#~ "is exported) and information related to"
#~ " recent features like :doc:`Wang tiles "
#~ "<using-wang-tiles>` and :doc:`object "
#~ "templates <using-templates>`."
#~ msgstr ""

#~ msgid ""
#~ "When you're defining views in Tiled, "
#~ "it is useful to add ``view`` as"
#~ " object type in the :ref:`Object "
#~ "Types Editor <predefining-properties>`, adding"
#~ " the above properties for ease of "
#~ "access. If you frequently use views "
#~ "with similar settings, you can set "
#~ "up :doc:`templates <using-templates>` for "
#~ "them."
#~ msgstr ""

#~ msgid ""
#~ "The tBIN format supports setting custom"
#~ " properties on the tiles of a "
#~ "tile layer. Since Tiled does not "
#~ "support this directly, \"TileData\" objects"
#~ " are created that match the location"
#~ " of the tile, on which such "
#~ "properties are then stored. Care should"
#~ " be taken to keep these objects "
#~ "aligned to the grid for the saving"
#~ " to work correctly."
#~ msgstr ""

#~ msgid ""
#~ "Tiled can export a map to a "
#~ "`Defold Tile Map "
#~ "<https://www.defold.com/manuals/2dgraphics/#_tile_maps>`__ "
#~ "(\\*.tilemap). This component only supports"
#~ " tile layers and only a single "
#~ "tileset may be used. The plugin is"
#~ " disabled by default."
#~ msgstr ""

#~ msgid ""
#~ "Upon export, the ``tile_set`` property "
#~ "of the Tile Map is left empty, "
#~ "so it will need to be set up"
#~ " in Defold after each export."
#~ msgstr ""

#~ msgid "A few other plugins ship with Tiled to support various games:"
#~ msgstr ""

#~ msgid ""
#~ "Adds support for editing `DroidCraft "
#~ "<https://play.google.com/store/apps/details?id=org.me.droidcraft>`__"
#~ " maps (\\*.dat)"
#~ msgstr ""

#~ msgid ""
#~ "Adds support for editing `Flare Engine"
#~ " <http://flarerpg.org/>`__ maps (\\*.txt)"
#~ msgstr ""

#~ msgid ""
#~ "Adds support for editing `Replica Island"
#~ " <http://replicaisland.net/>`__ maps (\\*.bin)"
#~ msgstr ""

#~ msgid ""
#~ "Adds support for exporting to `T-Engine4"
#~ " <https://te4.org/te4>`__ maps (\\*.lua)"
#~ msgstr ""

#~ msgid ""
#~ "The primary tool for editing :ref:`tile"
#~ " layers <tile-layer-introduction>` is "
#~ "a stamp brush that allows efficient "
#~ "painting and copying of tile areas. "
#~ "It also supports drawing lines and "
#~ "circles. In addition, there are several"
#~ " selection tools and a tool that "
#~ "does :doc:`automatic terrain transitions "
#~ "<using-the-terrain-tool>`. Finally, it "
#~ "can apply changes based on :doc"
#~ ":`pattern-matching <automapping>` to automate "
#~ "parts of your work."
#~ msgstr ""

#~ msgid ""
#~ "Other things worth mentioning are the"
#~ " support for adding custom map or "
#~ "tileset formats through plugins, the "
#~ "tile stamp memory, tile animation "
#~ "support and the tile collision editor."
#~ msgstr ""

#~ msgid ""
#~ "The first thing we'll do is to "
#~ "start a new map with *File -> "
#~ "New -> New Map…* (``Ctrl+N``). The "
#~ "following dialog will pop up:"
#~ msgstr ""

#~ msgid ""
#~ "Click the *Browse…* button and select"
#~ " the ``tmw_desert_spacing.png`` tileset from "
#~ "the examples shipping with Tiled (or "
#~ "use one of your own if you "
#~ "wish). This example tileset uses a "
#~ "tile size of 32x32. It also has"
#~ " a one pixel *margin* around the "
#~ "tiles and a one pixel *spacing* in"
#~ " between the tiles (this is pretty"
#~ " rare actually, usually you should "
#~ "leave these values on 0)."
#~ msgstr ""

#~ msgid ""
#~ "We leave the *Embed in map* option"
#~ " disabled. This is recommended, since "
#~ "it will allow the tileset to be"
#~ " used by multiple maps without "
#~ "setting up its parameters again. It "
#~ "will also be good to store the "
#~ "tileset in its own file if you "
#~ "later add tile properties, terrain "
#~ "definitions, collision shapes, etc., since "
#~ "that information is then shared between"
#~ " all your maps."
#~ msgstr ""

#~ msgid "Try out these keyboard shortcuts to help save you time."
#~ msgstr ""

#~ msgid "On Mac, replace ``Ctrl`` with the ``Command`` key."
#~ msgstr ""

#~ msgid "``Del`` - Delete (tiles or objects)"
#~ msgstr ""

#~ msgid "``A`` - Invokes :doc:`automapping`"
#~ msgstr ""

#~ msgid ""
#~ "``Ctrl + D`` - Duplicate selected "
#~ "objects (since Tiled 1.0, before it "
#~ "was Delete)"
#~ msgstr ""

#~ msgid "``Ctrl + Shift + D`` - Duplicate active layer"
#~ msgstr ""

#~ msgid "``Tab`` - Hide docks and tool bars (since Tiled 1.0)"
#~ msgstr ""

#~ msgid "``Ctrl + Shift + Up`` - Move current layer up"
#~ msgstr ""

#~ msgid "``Ctrl + Shift + Down`` - Move current layer down"
#~ msgstr ""

#~ msgid "``Ctrl + Tab`` - Switch to left document"
#~ msgstr ""

#~ msgid "``Ctrl + Shift + Tab`` - Switch to right document"
#~ msgstr ""

#~ msgid "``Alt + Left`` - Switch to left document"
#~ msgstr ""

#~ msgid "``Alt + Right`` - Switch to right document"
#~ msgstr ""

#~ msgid "``G`` - Activate :ref:`wang-tool` (since Tiled 1.1)"
#~ msgstr ""

#~ msgid "``Ctrl + 1-9`` - Store current tile selection (similar to ``Ctrl + C``)"
#~ msgstr ""

#~ msgid "``1-9`` recall the previous selection (similar to ``Ctrl + V``)"
#~ msgstr ""

#~ msgid "``Ctrl + Shift + A`` - Select nothing"
#~ msgstr ""

#~ msgid "``O`` - Activate :ref:`edit-polygons-tool` (was ``E`` until Tiled 1.0)"
#~ msgstr ""

#~ msgid "``L`` - Activate :ref:`insert-polyline-tool`"
#~ msgstr ""

#~ msgid "``E`` - Activate :ref:`insert-text-tool` (since Tiled 1.0)"
#~ msgstr ""

#~ msgid "``Ctrl + A`` - Select all objects in the current object layer"
#~ msgstr ""

#~ msgid "``Ctrl + Shift + A`` - Clear object selection"
#~ msgstr ""

#~ msgid "``Del`` or ``Backspace`` - Deletes a property"
#~ msgstr ""

#~ msgid ""
#~ "Layers can be hidden, made only "
#~ "partially visible and can be locked. "
#~ "Layers also have an offset, which "
#~ "can be used to position them "
#~ "independently of each other, for example"
#~ " to fake depth."
#~ msgstr ""

#~ msgid "**Point** - for marking exact locations"
#~ msgstr ""

#~ msgid ""
#~ "All objects can be named, in which"
#~ " case their name will show up "
#~ "in a label above them (by default"
#~ " only for selected objects). Objects "
#~ "can also be given a *type*, which"
#~ " is useful since it can be used"
#~ " to customize the color of their "
#~ "label and the available :ref:`custom "
#~ "properties <predefining-properties>` for this"
#~ " object type. For tile objects, the"
#~ " type can be :ref:`inherited from "
#~ "their tile <tile-property-inheritance>`."
#~ msgstr ""

#~ msgid ""
#~ "Image layers provide a way to "
#~ "quickly include a single image as "
#~ "foreground or background of your map."
#~ " They are currently not so useful,"
#~ " because if you instead add the "
#~ "image as a Tileset and place it"
#~ " as a :ref:`Tile Object <insert-"
#~ "tile-tool>`, you gain the ability to"
#~ " freely scale and rotate the image."
#~ msgstr ""

#~ msgid ""
#~ "The only advantage of using an "
#~ "image layer is that it avoids "
#~ "selecting / dragging the image while "
#~ "using the Select Objects tool. However,"
#~ " since Tiled 1.1 this can also "
#~ "be achieved by locking the object "
#~ "layer containing the tile object you'd"
#~ " like to avoid interacting with."
#~ msgstr ""

#~ msgid ""
#~ "The visibility, opacity, offset and lock"
#~ " of a group layer affects all "
#~ "child layers."
#~ msgstr ""

#~ msgid ""
#~ "Using objects you can add a great"
#~ " deal of information to your map "
#~ "for use in your game. They can "
#~ "replace tedious alternatives like hardcoding"
#~ " coordinates (like spawn points) in "
#~ "your source code or maintaining "
#~ "additional data files for storing "
#~ "gameplay elements. With the addition of"
#~ " *tile objects*, they also became "
#~ "useful for graphical purposes and can"
#~ " in some cases replace tile layers"
#~ " entirely, as demonstrated by the "
#~ "\"Sticker Knight\" example shipping with "
#~ "Tiled."
#~ msgstr ""

#~ msgid ""
#~ "If the rectangle is empty (width "
#~ "and height are both 0), it is "
#~ "rendered as a small square around "
#~ "its position. This is mainly to "
#~ "keep it visible and selectable."
#~ msgstr ""

#~ msgid ""
#~ "When placing a polygon, the first "
#~ "click determines the location of the "
#~ "object as well as the location of"
#~ " the first point of the polygon. "
#~ "Subsequent clicks are used to add "
#~ "additional points to the polygon. Right"
#~ " click or press ``Enter`` to finish"
#~ " creating the polygon. Polygons needs "
#~ "to have at least three points. You"
#~ " can press ``Escape`` to cancel the"
#~ " creation of the polygon."
#~ msgstr ""

#~ msgid "Insert Polyline"
#~ msgstr ""

#~ msgid "Shortcut: ``L``"
#~ msgstr ""

#~ msgid ""
#~ "Polylines work very similar to `polygons"
#~ " <#insert-polygon>`__, except that they "
#~ "are rendered as a line and require"
#~ " only two points. While they can "
#~ "represent collision walls, they are also"
#~ " often used to represent paths to "
#~ "be followed."
#~ msgstr ""

#~ msgid ""
#~ "Despite its name, the :ref:`edit-"
#~ "polygons-tool` tool is also used to"
#~ " edit polylines."
#~ msgstr ""

#~ msgid ""
#~ "To place a tile object, first "
#~ "select the tile you want to place"
#~ " in the Tilesets view. Then use "
#~ "the Left mouse button on the map"
#~ " to start placing the object, move"
#~ " to position it based on the "
#~ "preview and release to finish placing"
#~ " the object."
#~ msgstr ""

#~ msgid ""
#~ "To change the tile used by "
#~ "existing tile objects, select all the"
#~ " objects you want to change using "
#~ "the :ref:`select-objects-tool` tool and"
#~ " then right-click on a tile in"
#~ " the Tilesets view, and choose "
#~ "*Replace Tile of Selected Objects*."
#~ msgstr ""

#~ msgid ""
#~ "You can select objects by clicking "
#~ "them or by dragging a rectangular "
#~ "lasso, selecting any object that "
#~ "intersect with its area. By holding "
#~ "``Shift`` or ``Ctrl`` while clicking, "
#~ "you can add/remove single objects "
#~ "to/from the selection."
#~ msgstr ""

#~ msgid ""
#~ "Polygons and polylines have their own"
#~ " editing needs and as such are "
#~ "covered by a separate tool, which "
#~ "allows selecting and moving around their"
#~ " nodes. You can select and move "
#~ "the nodes of multiple polygons at "
#~ "the same time."
#~ msgstr ""

#~ msgid ""
#~ "When you have selected multiple "
#~ "consecutive nodes of the same polygon,"
#~ " you can join them together by "
#~ "choosing \"Join Nodes\" from the context"
#~ " menu. You can also split the "
#~ "segments in between the nodes by "
#~ "choosing \"Split Segments\", which is "
#~ "currently the only way to extend "
#~ "an existing polygon. You can also "
#~ "delete a segment when two consecutive"
#~ " nodes are selected in a polygon "
#~ "by choosing \"Delete Segment\" in the"
#~ " context menu. This will convert a"
#~ " polygon into a polyline."
#~ msgstr ""

#~ msgid ""
#~ "For the `Insert Tile <#insert-tile>`__"
#~ " tool, show the preview already "
#~ "before pressing the left mouse button"
#~ " (`#537 <https://github.com/bjorn/tiled/issues/537>`__)"
#~ msgstr ""

#~ msgid ""
#~ "Many improvements could be made to "
#~ "the support for editing polygons and "
#~ "polylines, like allowing to rotate and"
#~ " scale the selected nodes (`#1487 "
#~ "<https://github.com/bjorn/tiled/issues/1487>`__)."
#~ msgstr ""

#~ msgid ""
#~ "There are only a few options "
#~ "located in the Preferences, accessible "
#~ "though the menu via *Edit > "
#~ "Preferences*. Most other options, like "
#~ "whether to draw the grid, what "
#~ "kind snapping to do or the last"
#~ " used settings when creating a new"
#~ " map are simply remembered persistently."
#~ msgstr ""

#~ msgid "``~/Library/Preferences/org.mapeditor.Tiled.plist``"
#~ msgstr ""

#~ msgid "``~/.config/mapeditor.org/tiled.conf``"
#~ msgstr ""

#~ msgid "Include DTD reference in saved maps"
#~ msgstr ""

#~ msgid ""
#~ "This option is not enabled by "
#~ "default, since it is of very "
#~ "little use whereas it can in some"
#~ " environments cause problems. Feel free "
#~ "to enable it if it helps with "
#~ "validation for example, but note that"
#~ " the referenced DTD is likely out "
#~ "of date (there is a somewhat more"
#~ " up-to-date XSD file available "
#~ "in the repository)."
#~ msgstr ""

#~ msgid "Open last files on startup"
#~ msgstr ""

#~ msgid "Generally a useful thing to keep enabled."
#~ msgstr ""

#~ msgid ""
#~ "The official macOS builds and the "
#~ "Windows installers of Tiled ship with"
#~ " an automatic update check, done by"
#~ " `Sparkle`_ and `WinSparkle`_ respectively. "
#~ "These solutions also offer to download"
#~ " the new version and to upgrade "
#~ "or run the installer afterwards."
#~ msgstr ""

#~ msgid ""
#~ "You can turn off the update checks"
#~ " or trigger them manually using the"
#~ " *Check Now* button."
#~ msgstr ""

#~ msgid ""
#~ "Here you can choose which plugins "
#~ "are enabled. Currently plugins only "
#~ "serve to add support for additional "
#~ "map and/or tileset file formats. Some"
#~ " generic plugins are enabled by "
#~ "default, while more specific ones need"
#~ " to be manually enabled."
#~ msgstr ""

#~ msgid ""
#~ "Tiled ships with a plugin that "
#~ "enables you to use Python 2.7 to"
#~ " add support for custom map formats."
#~ " This is nice especially since you"
#~ " don't need to compile Tiled yourself"
#~ " and the scripts are easy to "
#~ "deploy to any platform."
#~ msgstr ""

#~ msgid ""
#~ "On Windows, Python is not installed "
#~ "by default. For the Tiled Python "
#~ "plugin to work, you'll need to "
#~ "install Python 2.7 (get it from "
#~ "https://www.python.org/). On Linux you may "
#~ "also need to install the appropriate "
#~ "package."
#~ msgstr ""

#~ msgid ""
#~ "This example does not support the "
#~ "use of group layers, and in fact"
#~ " the script API doesn't support this"
#~ " yet either. Any help with "
#~ "maintaining the Python plugin would be"
#~ " very appreciated. See `open issues "
#~ "related to Python support`_."
#~ msgstr ""

#~ msgid ""
#~ "Any errors that happen while parsing "
#~ "or running the script are printed "
#~ "to the Debug Console, which can be"
#~ " enabled in *View > Views and "
#~ "Toolbars > Debug Console*."
#~ msgstr ""

#~ msgid "Output in Debug Console"
#~ msgstr ""

#~ msgid ""
#~ "If this is enabled, then the "
#~ "output (stdout and stderr) of this "
#~ "command will be displayed in the "
#~ "Debug Console. You can find the "
#~ "Debug Console in *View > Views and"
#~ " Toolbars > Debug Console*."
#~ msgstr ""

#~ msgid "the current maps full path."
#~ msgstr ""

#~ msgid "the full folder path in which the map is located. (since Tiled 0.18)"
#~ msgstr ""

#~ msgid "``%objecttype``"
#~ msgstr ""

#~ msgid "the type of the currently selected object, if any. (since Tiled 0.12)"
#~ msgstr ""

#~ msgid "the ID of the currently selected object, if any. (since Tiled 0.17)"
#~ msgstr ""

#~ msgid "the name of the currently selected layer. (since Tiled 0.17)"
#~ msgstr ""

#~ msgid ""
#~ "Each template is stored in its own"
#~ " file and they can be organized "
#~ "in directories. You can save templates"
#~ " in either XML or JSON format, "
#~ "just like map and tileset files."
#~ msgstr ""

#~ msgid "The Templates View"
#~ msgstr ""

#~ msgid ""
#~ "Working with templates is done through"
#~ " the Templates view. The Templates "
#~ "view is divided into two parts: "
#~ "the left part is a tree view "
#~ "that shows the template files in a"
#~ " selected directory and the right "
#~ "part shows a preview of the "
#~ "selected template."
#~ msgstr ""

#~ msgid ""
#~ "Template instantiation works by either "
#~ "dragging and dropping the template from"
#~ " the list of templates to the "
#~ "map, or by using the \"Insert "
#~ "Template\" tool by selecting a template"
#~ " and clicking on the map which "
#~ "is more convenient when you want "
#~ "to create many instances."
#~ msgstr ""

#~ msgid ""
#~ "Selecting a template will show an "
#~ "editable preview in the Templates view"
#~ " and will show the template's "
#~ "properties in the Properties view where"
#~ " they can be edited. Changes to "
#~ "the template are saved automatically."
#~ msgstr ""

#~ msgid ""
#~ "All template instances are linked to "
#~ "their template, so all edits will "
#~ "be immediately reflected upon all the"
#~ " template instances on the map."
#~ msgstr ""

#~ msgid "Using the Terrain Brush"
#~ msgstr ""

#~ msgid ""
#~ "The :ref:`terrain-tool` was added to "
#~ "make editing tile maps easier when "
#~ "using terrain transitions. There are of"
#~ " course multiple ways to do "
#~ "transitions between tiles. This tool "
#~ "supports transition tiles that have a"
#~ " well-defined terrain type at each"
#~ " of their 4 corners, which seems "
#~ "to be the most common method."
#~ msgstr ""

#~ msgid ""
#~ "To demonstrate how to use this "
#~ "tool we describe the steps necessary "
#~ "to reproduce the ``desert.tmx`` example "
#~ "map, which now also includes terrain "
#~ "information in its tileset."
#~ msgstr ""

#~ msgid "Create a New Map and Add a Tileset"
#~ msgstr ""

#~ msgid ""
#~ "First of all, follow the :ref"
#~ ":`getting-started` instructions to set up"
#~ " the map and the tileset."
#~ msgstr ""

#~ msgid ""
#~ "The ``tmw_desert_spacing.png`` tileset we just"
#~ " set up has 4 different terrain "
#~ "types. Traditionally editing a map with"
#~ " these tiles meant that you had "
#~ "to carefully connect the right "
#~ "transitions to avoid broken edges. Now"
#~ " we will define the terrain "
#~ "information for this tileset, which the"
#~ " :ref:`terrain-tool` will use to "
#~ "automatically place the right transitions."
#~ msgstr ""

#~ msgid ""
#~ "Then, activate the terrain editing mode"
#~ " by clicking on the *Terrains* "
#~ "|terrain| button on the tool bar."
#~ msgstr ""

#~ msgid ""
#~ "In this mode, the list of terrain"
#~ " types is displayed and you can "
#~ "mark corners of the tiles in your"
#~ " tileset as belonging to a certain"
#~ " terrain type. To start with, add "
#~ "each of the 4 terrain types. The"
#~ " fastest way is by right-clicking "
#~ "on a tile representing a certain "
#~ "terrain and choosing \"Add Terrain "
#~ "Type\". This automatically sets the tile"
#~ " as the image representing the "
#~ "terrain."
#~ msgstr ""

#~ msgid "Adding Terrain Type"
#~ msgstr ""

#~ msgid ""
#~ "Give each of the terrains an "
#~ "appropriate name. Once you're done, "
#~ "select the Sand terrain and mark "
#~ "all corners in the tileset with "
#~ "this type of terrain. When you're "
#~ "done it should look like this:"
#~ msgstr ""

#~ msgid "Sand Terrain Marked"
#~ msgstr ""

#~ msgid ""
#~ "If you make a mistake, just use"
#~ " Undo (or press ``Ctrl+Z``). Or if"
#~ " you notice a mistake later, either"
#~ " use *Erase Terrain* to clear a "
#~ "terrain type from a corner or "
#~ "select the correct terrain type and "
#~ "paint over it."
#~ msgstr ""

#~ msgid ""
#~ "Do the same for each of the "
#~ "other terrain types. Eventually you'll "
#~ "have marked all tiles apart from "
#~ "the special objects."
#~ msgstr ""

#~ msgid "Done Marking Terrain"
#~ msgstr ""

#~ msgid ""
#~ "Now you can disable the *Terrains* "
#~ "mode by clicking the tool bar "
#~ "button again."
#~ msgstr ""

#~ msgid ""
#~ "Switch back to the map and then"
#~ " activate the Terrains window. You "
#~ "should see the 4 terrain types "
#~ "represented in a list. Click on "
#~ "the Sand terrain and start painting. "
#~ "You may immediately notice that nothing"
#~ " special is happening. This is "
#~ "because there are no other tiles "
#~ "on the map yet so the terrain "
#~ "tool doesn't really know how to "
#~ "help (because we have no transitions "
#~ "to \"nothing\" in our tileset). Assuming"
#~ " we're out to create a desert "
#~ "map, it's better to start by "
#~ "filling your entire map with sand. "
#~ "Just switch back to the Tilesets "
#~ "window for a moment, select the "
#~ "sand tile and then use the :ref"
#~ ":`bucket-fill-tool`."
#~ msgstr ""

#~ msgid ""
#~ "Let's switch back to the Terrains "
#~ "window and draw some cobblestones. Now"
#~ " you can see the tool in "
#~ "action!"
#~ msgstr ""

#~ msgid "Drawing Cobblestone"
#~ msgstr ""

#~ msgid ""
#~ "Try holding ``Control`` (``Command`` on "
#~ "a Mac) while drawing. This reduces "
#~ "the modified area to just the "
#~ "closest corner to the mouse, allowing"
#~ " for precision work."
#~ msgstr ""

#~ msgid "Drawing Dirt"
#~ msgstr ""

#~ msgid ""
#~ "Currently the tool requires all terrain"
#~ " types to be part of the same"
#~ " tileset. You can have multiple "
#~ "tilesets with terrain in your map, "
#~ "but the tool can't perform automatic "
#~ "transitions from a terrain from one "
#~ "tileset to a terrain in another "
#~ "tileset. This usually means you may "
#~ "have to combine several tiles into "
#~ "one image."
#~ msgstr ""

#~ msgid ""
#~ "Since defining the terrain information "
#~ "can be somewhat laboursome, you'll want"
#~ " to avoid using embedded tilesets so"
#~ " that terrain information can be "
#~ "shared among several maps."
#~ msgstr ""

#~ msgid ""
#~ "The tool will handle any number of"
#~ " terrain types and each corner of "
#~ "a tile can have a different type"
#~ " of terrain. Still, there are other"
#~ " ways of dealing with transitions "
#~ "that this tool can't handle. Also, "
#~ "it is not able to edit multiple"
#~ " layers at the same time. For a"
#~ " more flexible, but also more "
#~ "complicated way of automatic tile "
#~ "placement, check out :doc:`automapping`."
#~ msgstr ""

#~ msgid ""
#~ "I'm maintaining a `collection of "
#~ "tilesets <http://opengameart.org/content/terrain-"
#~ "transitions>`__ that contain transitions that"
#~ " are compatible with this tool on "
#~ "`OpenGameArt.org <http://opengameart.org/>`__."
#~ msgstr ""

#~ msgid "Using Wang Tiles"
#~ msgstr ""

#~ msgid ""
#~ "Wang tiles are similar in concept "
#~ "to Terrains. This is, however, more "
#~ "focused on filling larger areas without"
#~ " repetition. One defines the edge and"
#~ " corner colors of tiles in a "
#~ "tileset. This information can then be"
#~ " used when filling, or brushing to"
#~ " allow for smooth, non-repetitive "
#~ "transitions between tiles. In most cases"
#~ " this tiling is random, and based "
#~ "on color probability. More info on "
#~ "Wang tiles can be found `here "
#~ "<https://web.archive.org/web/20230101/cr31.co.uk/stagecast/wang/intro.html>`_."
#~ msgstr ""

#~ msgid ""
#~ "To demonstrate how to use Wang "
#~ "tiles, I will describe the steps "
#~ "necessary to recreate ``walkways.tsx`` example"
#~ " tileset."
#~ msgstr ""

#~ msgid "Defining Wang Tile Info"
#~ msgstr ""

#~ msgid ""
#~ "After making the tileset, from the "
#~ "tileset editor, click the Wang Sets "
#~ "button."
#~ msgstr ""

#~ msgid "Wang Set Button"
#~ msgstr ""

#~ msgid ""
#~ "A single tileset can have many "
#~ "Wang sets. Create a new Wang set"
#~ " using the plus button at the "
#~ "bottom of the Wang set view."
#~ msgstr ""

#~ msgid "Wang Set View"
#~ msgstr ""

#~ msgid ""
#~ "You can now edit the properties of"
#~ " the Wang set. Important for us "
#~ "is edge and corner count. This "
#~ "will determine how the set is "
#~ "defined, and how it behaves. This "
#~ "tileset is a 3 edge Wang set."
#~ msgstr ""

#~ msgid "Wang Set Properties"
#~ msgstr ""

#~ msgid ""
#~ "Now in the complete pattern set "
#~ "will generate in the *Patterns* tab "
#~ "below the Wang set view. For the"
#~ " set to be complete (though this "
#~ "is unnecessary), each pattern must be"
#~ " used at least once."
#~ msgstr ""

#~ msgid "Pattern View"
#~ msgstr ""

#~ msgid ""
#~ "Once a pattern is selected, you "
#~ "can paint it directly onto the "
#~ "tileset. Similar to when using the "
#~ "Stamp Brush, ``Z`` and ``Shift + "
#~ "Z`` can be used to rotate the "
#~ "pattern 90 degrees clockwise and "
#~ "counterclockwise respectively. ``X`` and ``Y``"
#~ " flip the pattern horizontally, and "
#~ "vertically respectively."
#~ msgstr ""

#~ msgid "Painting on a Pattern"
#~ msgstr ""

#~ msgid ""
#~ "In the other tab, there is the "
#~ "*Colors* view. This gives you access "
#~ "to edit properties and assign with "
#~ "each individual color of a set."
#~ msgstr ""

#~ msgid "Painting Individual Edge"
#~ msgstr ""

#~ msgid ""
#~ "Using these methods, assign each tile"
#~ " matching all the edges. After this"
#~ " is done, the set is ready to"
#~ " be used with all the Wang "
#~ "methods."
#~ msgstr ""

#~ msgid "Completely Assigned Wang Set"
#~ msgstr ""

#~ msgid "Editing With Wang Methods"
#~ msgstr ""

#~ msgid "There are two main ways to use Wang tiles:"
#~ msgstr ""

#~ msgid "Activating the `Wang mode <#wang-mode>`__"
#~ msgstr ""

#~ msgid "Using the `Wang brush <#wang-brush>`__"
#~ msgstr ""

#~ msgid "Wang Mode"
#~ msgstr ""

#~ msgid ""
#~ "Similar to the random mode, the "
#~ "Stamp Brush, and Bucket Fill tools "
#~ "can use Wang methods to fill. With"
#~ " the Wang mode activated, each cell"
#~ " will be randomly chosen from all "
#~ "those in the Wang set which match"
#~ " all adjacent edge/corner colors."
#~ msgstr ""

#~ msgid "Stamp Brush with Wang Fill Mode Enabled"
#~ msgstr ""

#~ msgid "Bucket Fill with Wang Fill Mode Enabled"
#~ msgstr ""

#~ msgid ""
#~ "There is also the :ref:`wang-tool`, "
#~ "which works very much like the "
#~ ":ref:`terrain-tool`. This tool changes "
#~ "the edge/color patterns of the adjacent"
#~ " cells, to match a selected color."
#~ " If no tiles exist in the Wang"
#~ " set of a particular pattern, the "
#~ "area can not be painted."
#~ msgstr ""

#~ msgid "Customizing Wang Colors"
#~ msgstr ""

#~ msgid ""
#~ "Each Wang color can be customized "
#~ "to become more recognizable. As well,"
#~ " the probability of each color can"
#~ " be adjusted, such that with the "
#~ "Wang mode it will show up more "
#~ "often in filling or brushing."
#~ msgstr ""

#~ msgid "Color Appearance"
#~ msgstr ""

#~ msgid ""
#~ "The name, image, and of course "
#~ "color can be changed to alter the"
#~ " appearance  of a Wang color. This"
#~ " image can be changed be selecting"
#~ " a color, then right clicking on "
#~ "the tile whose image is desired, "
#~ "and selecting *Set Wang Color Image*."
#~ msgstr ""

#~ msgid "Selecting Wang color image"
#~ msgstr ""

#~ msgid "The other values can be changed from the properties view."
#~ msgstr ""

#~ msgid ""
#~ "When choosing a tile with Wang "
#~ "methods, all tiles with a valid "
#~ "Wang pattern are considered. They are"
#~ " given a weight based on their "
#~ "edge/corner colors' probabilities. Then one"
#~ " is selected at random, while "
#~ "considering this weight. The weight is"
#~ " the product of all the "
#~ "probabilities."
#~ msgstr ""

#~ msgid ""
#~ "Left shows path with probability 0.1,"
#~ " right shows path with probability "
#~ "10."
#~ msgstr ""

#~ msgid "Standard Wang Sets"
#~ msgstr ""

#~ msgid ""
#~ "Some typical Wang sets are `2-corner "
#~ "<https://web.archive.org/web/20230101/cr31.co.uk/stagecast/wang/2corn.html>`__, `2-edge"
#~ " <https://web.archive.org/web/20230101/cr31.co.uk/stagecast/wang/2edge.html>`__, and"
#~ " `blob <https://web.archive.org/web/20230101/cr31.co.uk/stagecast/wang/blob.html>`__."
#~ " Wang tiles in Tiled support up "
#~ "to 15 edge and 15 corner colors"
#~ " in a single set."
#~ msgstr ""
